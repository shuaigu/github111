{"version":3,"file":"articleDetail.js","sources":["pages/article/articleDetail.vue","../../软件/HBuilderX/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvYXJ0aWNsZS9hcnRpY2xlRGV0YWlsLnZ1ZQ"],"sourcesContent":["<script setup>\n\timport { computed, onMounted, ref, watch, onUnmounted, onBeforeUnmount, onActivated, nextTick } from 'vue'\n\timport { useUserInfoStore } from '@/store/user.js'\n\timport formatTime from '@/utils/formatTime.js'\n\timport { testLogin } from '@/utils/isLogin'\n\timport { onReachBottom, onShareAppMessage, onShareTimeline, onLoad, onShow, onHide, onUnload, onReady, onPullDownRefresh } from '@dcloudio/uni-app'\n\t// 导入推荐组件\n\timport tuijian from '@/components/tuijian/tuijian.vue'\n\n\n\t// 导入uni-load-more组件\n\timport uniLoadMore from '@/uni_modules/uni-load-more/components/uni-load-more/uni-load-more.vue'\n\t\n\n\t// 接受传递过来的数据 - 不需要导入 defineProps\n\tconst props = defineProps( {\n\t\tarticle_id: {\n\t\t\ttype: String,\n\t\t\tdefault: ''\n\t\t},\n\t\t\n\t\tuser_id: String\n\t} )\n\n\t// 在setup部分顶部添加userStore引用\n\tconst userStore = useUserInfoStore()\n\n\t// 在script setup顶部添加图片CDN处理函数（已禁用压缩）\n\tconst processCDNImage = (url) => {\n\t\tif (!url) return '';\n\t\t\n\t\t// 已禁用图片压缩功能，直接返回原始URL\n\t\t// 移除所有压缩参数，避免长URL导致的400错误\n\t\tif (url.includes('?')) {\n\t\t\t// 提取基础URL，去除所有参数\n\t\t\tconst baseUrl = url.split('?')[0];\n\t\t\tconsole.log('已移除图片压缩参数:', url, '->', baseUrl);\n\t\t\treturn baseUrl;\n\t\t}\n\t\t\n\t\treturn url;\n\t};\n\t\n\t// 添加登录状态跟踪，避免多次显示loading\n\tconst loginLoadingVisible = ref(false);\n\n\t// 手机号识别和拨号功能（小程序专用版本）\n\t// 添加手机号码识别和处理函数\n\tconst processPhoneNumbers = (text) => {\n\t\tif (!text) return text;\n\t\t\n\t\t// 手机号码正则表达式（支持多种格式）\n\t\t// 匹配：11位数字、带分隔符的手机号等\n\t\tconst phoneRegex = /(1[3-9]\\d{9}|1[3-9]\\d[-\\s]?\\d{4}[-\\s]?\\d{4})/g;\n\t\t\n\t\t// 替换手机号为可点击的链接格式（去除蓝色样式）\n\t\treturn text.replace(phoneRegex, function(match) {\n\t\t\t// 提取纯数字手机号\n\t\t\tvar cleanPhone = match.replace(/[-\\s]/g, '');\n\t\t\t// 验证是否为有效的11位手机号\n\t\t\tif (cleanPhone.length === 11 && /^1[3-9]\\d{9}$/.test(cleanPhone)) {\n\t\t\t\t// 使用普通样式，不显示蓝色和下划线\n\t\t\t\treturn '<span style=\"cursor: pointer; padding: 2rpx 4rpx; border-radius: 4rpx;\" data-phone=\"' + cleanPhone + '\" class=\"phone-link\">' + match + '</span>';\n\t\t\t}\n\t\t\treturn match;\n\t\t});\n\t};\n\t\n\t// 处理手机号点击事件（小程序环境优化）\n\tconst handlePhoneClick = function(phone) {\n\t\ttry {\n\t\t\tconsole.log('准备拨打电话:', phone);\n\t\t\t\n\t\t\t// 验证手机号格式\n\t\t\tif (!phone || phone.length !== 11 || !/^1[3-9]\\d{9}$/.test(phone)) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '手机号格式不正确',\n\t\t\t\t\ticon: 'none',\n\t\t\t\t\tduration: 2000\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// 检查登录状态\n\t\t\tcustomTestLogin().then(function(isLoggedIn) {\n\t\t\t\tif (!isLoggedIn) {\n\t\t\t\t\tconsole.log('用户未登录，无法拨打电话');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 添加确认弹窗\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '拨打电话',\n\t\t\t\t\tcontent: '是否拨打 ' + phone + '？',\n\t\t\t\t\tconfirmText: '拨打',\n\t\t\t\t\tcancelText: '取消',\n\t\t\t\t\tsuccess: function(res) {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tconsole.log('用户确认拨打电话');\n\t\t\t\t\t\t\t// 用户确认后调用拨号功能\n\t\t\t\t\t\t\tuni.makePhoneCall({\n\t\t\t\t\t\t\t\tphoneNumber: phone,\n\t\t\t\t\t\t\t\tsuccess: function() {\n\t\t\t\t\t\t\t\t\tconsole.log('成功调起拨号界面');\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfail: function(err) {\n\t\t\t\t\t\t\t\t\tconsole.error('拨打电话失败:', err);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// 根据错误类型给出不同提示\n\t\t\t\t\t\t\t\t\tvar errorMsg = '拨打电话失败';\n\t\t\t\t\t\t\t\t\tif (err.errMsg) {\n\t\t\t\t\t\t\t\t\t\tif (err.errMsg.indexOf('cancel') !== -1) {\n\t\t\t\t\t\t\t\t\t\t\terrorMsg = '用户取消拨打';\n\t\t\t\t\t\t\t\t\t\t} else if (err.errMsg.indexOf('fail') !== -1) {\n\t\t\t\t\t\t\t\t\t\t\terrorMsg = '设备不支持拨号功能';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: errorMsg,\n\t\t\t\t\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log('用户取消拨打电话');\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfail: function(err) {\n\t\t\t\t\t\tconsole.error('显示确认对话框失败:', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}).catch(function(err) {\n\t\t\t\tconsole.error('登录检查失败:', err);\n\t\t\t});\n\t\t\t\n\t\t} catch (err) {\n\t\t\tconsole.error('处理电话点击失败:', err);\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '操作失败，请重试',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2000\n\t\t\t});\n\t\t}\n\t};\n\t\n\t// 处理rich-text的点击事件（针对小程序环境优化）\n\tconst handleRichTextTap = function(e) {\n\t\tconsole.log('Rich text tap event:', e);\n\t\t\n\t\t// 在小程序环境中，rich-text的点击事件处理可能不同\n\t\t// 尝试多种方式获取点击的元素信息\n\t\tvar phoneNumber = null;\n\t\t\n\t\t// 方式1: 从target获取\n\t\tif (e.detail && e.detail.target && e.detail.target.dataset && e.detail.target.dataset.phone) {\n\t\t\tphoneNumber = e.detail.target.dataset.phone;\n\t\t}\n\t\t// 方式2: 从currentTarget获取\n\t\telse if (e.detail && e.detail.currentTarget && e.detail.currentTarget.dataset && e.detail.currentTarget.dataset.phone) {\n\t\t\tphoneNumber = e.detail.currentTarget.dataset.phone;\n\t\t}\n\t\t// 方式3: 检查是否有data-phone属性（兼容性处理）\n\t\telse if (e.detail && e.detail.target) {\n\t\t\t// 在小程序中，可能需要从文本内容中重新提取手机号\n\t\t\tvar targetText = e.detail.target.innerText || e.detail.target.textContent || '';\n\t\t\tif (targetText) {\n\t\t\t\tvar phoneMatch = targetText.match(/1[3-9]\\d{9}/);\n\t\t\t\tif (phoneMatch) {\n\t\t\t\t\tphoneNumber = phoneMatch[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (phoneNumber) {\n\t\t\tconsole.log('检测到手机号:', phoneNumber);\n\t\t\thandlePhoneClick(phoneNumber);\n\t\t} else {\n\t\t\tconsole.log('未检测到有效的手机号点击，尝试备用方案');\n\t\t\t// 备用方案：解析整个文本内容中的手机号\n\t\t\thandleTextPhoneDetection();\n\t\t}\n\t};\n\t\n\t// 备用的手机号检测方案\n\tconst handleTextPhoneDetection = function() {\n\t\tvar text = articleDetail.value && articleDetail.value.content ? articleDetail.value.content : '';\n\t\tif (!text) return;\n\t\t\n\t\tvar phoneRegex = /1[3-9]\\d{9}/g;\n\t\tvar matches = text.match(phoneRegex);\n\t\t\n\t\tif (matches && matches.length > 0) {\n\t\t\tif (matches.length === 1) {\n\t\t\t\t// 只有一个手机号，直接调用handlePhoneClick（内部已有确认机制）\n\t\t\t\thandlePhoneClick(matches[0]);\n\t\t\t} else {\n\t\t\t\t// 多个手机号，让用户选择\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: matches.map(function(phone) { return '拨打 ' + phone; }),\n\t\t\t\t\tsuccess: function(res) {\n\t\t\t\t\t\t// 选择后直接调用handlePhoneClick，内部已有确认机制\n\t\t\t\t\t\thandlePhoneClick(matches[res.tapIndex]);\n\t\t\t\t\t},\n\t\t\t\t\tfail: function(err) {\n\t\t\t\t\t\tconsole.error('显示手机号选择列表失败:', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log('文本中未找到有效的手机号');\n\t\t}\n\t};\n\t\n\t// 处理富文本内容，识别手机号\n\tconst processedContent = computed(() => {\n\t\tif (!articleDetail.value || !articleDetail.value.content) return '';\n\t\treturn processPhoneNumbers(articleDetail.value.content);\n\t});\n\n\t// 处理页面跳转逻辑\n\tconst handlePageNavigation = async () => {\n\t\ttry {\n\t\t\t// 获取当前页面栈\n\t\t\tconst pages = getCurrentPages()\n\t\t\t\n\t\t\t// 如果是直接进入详情页（页面栈长度为1）\n\t\t\tif (pages.length === 1) {\n\t\t\t\t// 先跳转到首页\n\t\t\t\tuni.switchTab({\n\t\t\t\t\turl: '/pages/index/index',\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t// 首页加载完成后，再跳转回文章详情页\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tuni.navigateTo({\n\t\t\t\t\t\t\t\turl: `/pages/article/articleDetail?article_id=${props.article_id}`,\n\t\t\t\t\t\t\t\tanimationType: 'slide-in-right', // 添加右侧滑入动画\n\t\t\t\t\t\t\t\tanimationDuration: 300, // 设置动画持续时间为300ms\n\t\t\t\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\t\t\t\tconsole.error('跳转回文章详情页失败:', err)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}, 300) // 减少首页加载时间，增加流畅度\n\t\t\t\t\t},\n\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\tconsole.error('跳转到首页失败:', err)\n\t\t\t\t\t\t// 如果跳转失败，仍然尝试加载首页数据\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst cateApi = uniCloud.importObject('cateWx', { customUI: true })\n\t\t\t\t\t\t\tcateApi.get().catch(err => {\n\t\t\t\t\t\t\t\tconsole.warn('预加载首页数据失败', err)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconsole.warn('初始化首页数据失败', err)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn true // 返回 true 表示需要跳转\n\t\t\t}\n\n\t\t\treturn false // 返回 false 表示无需跳转\n\t\t} catch (err) {\n\t\t\tconsole.error('页面导航错误：', err)\n\t\t\treturn false\n\t\t}\n\t}\n\t// 添加一个加载状态标记\n\tconst isLoading = ref( true )\n\tconst isSubmitting = ref( false )\n\tconst articleApi = uniCloud.importObject( 'articleWx', { customUI: true } )\n\n\tconst likeApi = uniCloud.importObject( 'likeRecord', { customUI: true } )\n\tconst userApi = uniCloud.importObject('userWx', { customUI: true }) // 使用userWx代替login\n\t// const loginApi = uniCloud.importObject('login', { customUI: true })\n\n\t// 文章详情\n\tconst articleDetail = ref( {} )\n\n\n\n\t// 增加一个标志位，避免重复登录检查\n\tconst isCheckingLogin = ref(false)\n\n\t// 添加当前图片索引的状态\n\tconst currentImageIndex = ref(0)\n\n\t// 添加图片懒加载状态跟踪\n\tconst imageLoadStatus = ref({})\n\tconst isAnyImageLoading = ref(true)\n\t\n\t// 添加视频相关状态\n\tconst videoLoadStatus = ref('loading')\n\tconst videoContext = ref(null)\n\t\n\t// 新增导航信息\n\tconst navInfo = ref(null)\n\n\n\t// 添加推荐组件的ref\n\tconst tuijianRef = ref(null)\n\n\t// 在script setup顶部添加ref引用\n\tconst likeButtonTop = ref(null)\n\tconst likeButtonBottom = ref(null)\n\tconst isLikeAnimating = ref(false)\n\n\t// 添加一个统一的媒体处理函数\n\tconst processMediaURL = (url, type = 'image') => {\n\t\tif (!url) return '';\n\t\t\n\t\t// 处理CDN域名\n\t\tif (url.includes('jingle0350.cn')) {\n\t\t\tif (type === 'image') {\n\t\t\t\treturn processCDNImage(url);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 处理可能的防盗链问题\n\t\tif (url.includes('ixigua.com') || url.includes('aly2.')) {\n\t\t\treturn url.includes('?') ? `${url}&referer=no_referer` : `${url}?referer=no_referer`;\n\t\t}\n\t\t\n\t\t// 对视频URL的特殊处理\n\t\tif (type === 'video' && url.includes('baidu.com')) {\n\t\t\t// 百度视频链接可能需要特殊处理\n\t\t\treturn url;\n\t\t}\n\t\t\n\t\treturn url;\n\t};\n\t\n\t// 添加验证图片URL的函数\n\tconst isValidImageUrl = (url) => {\n\t\tif (!url) return false;\n\t\t\n\t\t// 检查是否是合法的URL格式\n\t\treturn url.startsWith('http') || url.startsWith('https') || url.startsWith('/') || url.startsWith('data:image');\n\t};\n\t\n\t// 添加图片加载超时机制\n\tconst imageLoadTimeouts = ref({});\n\t// 增加加载超时时间，因为模拟器/真机可能较慢\n\tconst IMAGE_LOAD_TIMEOUT = 15000; // 15秒\n\t// 添加最大重试次数\n\tconst MAX_RETRY_COUNT = 3;\n\t// 添加图片重试计数\n\tconst imageRetryCount = ref({});\n\t\n\t// 添加分享信息\n\tconst shareInfo = ref({\n\t\ttitle: '',\n\t\tpath: '',\n\t\timageUrl: ''\n\t});\n\t\n\t// 更新分享信息\n\tconst updateShareInfo = () => {\n\t\ttry {\n\t\t\t// 处理分享标题，使用文章内容的前30个字符\n\t\t\tlet title = articleDetail.value.content \n\t\t\t\t? articleDetail.value.content.substring(0, 30) \n\t\t\t\t: '精彩内容';\n\t\t\t\n\t\t\t// 为所有标题添加分类名\n\t\t\tif (articleDetail.value.cate_name) {\n\t\t\t\ttitle = `【${articleDetail.value.cate_name}】 ${title}`;\n\t\t\t}\n\t\t\t\n\t\t\t// 设置分享图片URL（仅用于朋友圈分享）\n\t\t\tlet imageUrl = '';\n\t\t\t\n\t\t\t// 尝试获取文章的第一张图片作为朋友圈分享封面\n\t\t\tif (articleDetail.value.images && articleDetail.value.images.length > 0) {\n\t\t\t\t// 获取第一张图片\n\t\t\t\tconst firstImage = articleDetail.value.images[0];\n\t\t\t\t// 优先使用压缩图或缩略图，以提高加载速度\n\t\t\t\timageUrl = firstImage.compressedURL || firstImage.thumbnailURL || firstImage.url || '';\n\t\t\t}\n\t\t\t\n\t\t\t// 设置分享路径\n\t\t\tconst path = `/pages/article/articleDetail?article_id=${props.article_id}`;\n\t\t\t\n\t\t\t// 更新分享信息（朋友圈分享包含imageUrl，微信好友分享不包含）\n\t\t\tshareInfo.value = {\n\t\t\t\ttitle,\n\t\t\t\tpath,\n\t\t\t\timageUrl\n\t\t\t};\n\t\t\t\n\t\t\tconsole.log('分享信息已更新（朋友圈使用文章图片，微信好友使用页面截图）:', shareInfo.value);\n\t\t} catch (err) {\n\t\t\tconsole.error('更新分享信息失败:', err);\n\t\t}\n\t};\n\t\n\t// 分享到微信好友\n\tonShareAppMessage((res) => {\n\t\tupdateShareInfo();\n\t\treturn {\n\t\t\ttitle: shareInfo.value.title,\n\t\t\tpath: shareInfo.value.path\n\t\t\t// 微信好友分享不设置imageUrl，使用页面截图作为分享封面\n\t\t};\n\t});\n\t\n\t// 分享到朋友圈\n\tonShareTimeline(() => {\n\t\tupdateShareInfo();\n\t\treturn {\n\t\t\ttitle: shareInfo.value.title,\n\t\t\tpath: shareInfo.value.path,\n\t\t\timageUrl: shareInfo.value.imageUrl\n\t\t\t// 朋友圈分享使用文章第一张图片作为封面\n\t\t};\n\t});\n\t\n\t// 自定义按钮分享\n\tconst handleShareButtonClick = () => {\n\t\tupdateShareInfo();\n\t\t\n\t\t// 检查环境是否支持uni.share API\n\t\tif (typeof uni.share === 'function') {\n\t\t\tuni.share({\n\t\t\t\tprovider: 'weixin',\n\t\t\t\ttitle: shareInfo.value.title,\n\t\t\t\tscene: 'WXSceneSession', // WXSceneSession 微信好友，WXSceneTimeline 朋友圈\n\t\t\t\tsummary: shareInfo.value.title,\n\t\t\t\thref: shareInfo.value.path,\n\t\t\t\timageUrl: shareInfo.value.imageUrl,\n\t\t\t\tsuccess: () => {\n\t\t\t\t\tconsole.log('分享成功');\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '分享成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfail: (err) => {\n\t\t\t\t\tconsole.error('分享失败:', err);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '分享失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// 对于不支持 uni.share 的平台，提示用户使用右上角菜单分享\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '请使用右上角菜单分享',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t}\n\t};\n\t\n\t// 监听分享信息设置事件\n\tuni.$on('setShareInfo', (data) => {\n\t\tif (data) {\n\t\t\tshareInfo.value = {\n\t\t\t\ttitle: data.title || shareInfo.value.title,\n\t\t\t\tpath: data.path || shareInfo.value.path,\n\t\t\t\timageUrl: data.imageUrl || shareInfo.value.imageUrl\n\t\t\t};\n\t\t}\n\t});\n\n\t// 页面卸载时移除事件监听\n\tonBeforeUnmount(() => {\n\t\tuni.$off('setShareInfo');\n\t});\n\t\n\t// 获取文章详情\n\tconst getArticleDetail = async () => {\n\t\ttry {\n\t\t\t// 先检查是否需要处理页面导航\n\t\t\tconst needRedirect = await handlePageNavigation()\n\t\t\tif (needRedirect) {\n\t\t\t\treturn // 如果需要重定向，直接返回\n\t\t\t}\n\n\t\t\t// 检查文章ID是否存在\n\t\t\tif (!props.article_id) {\n\t\t\t\tthrow new Error('文章ID不能为空')\n\t\t\t}\n\n\t\t\t// 添加轻微延迟，确保页面动画完成\n\t\t\tawait new Promise(resolve => setTimeout(resolve, 50));\n\n\t\t\tconst res = await articleApi.getArticleDetal(props.article_id)\n\t\t\t\n\t\t\t// 检查返回的数据结构\n\t\t\tif (!res || !res.articleRes || !res.articleRes.data || !Array.isArray(res.articleRes.data)) {\n\t\t\t\tthrow new Error('获取文章详情失败：返回数据格式错误')\n\t\t\t}\n\n\t\t\t// 更新文章详情\n\t\t\tconst articleData = res.articleRes.data[0]\n\t\t\t\n\t\t\t// 确保文章内容不为空\n\t\t\tif (!articleData.content) {\n\t\t\t\tarticleData.content = '暂无内容'\n\t\t\t}\n\t\t\t\n\t\t\t// 处理视频资源\n\t\t\tif (articleData.videoURL) {\n\t\t\t\tarticleData.videoURL = processMediaURL(articleData.videoURL, 'video');\n\t\t\t\tvideoLoadStatus.value = 'loading';\n\t\t\t}\n\t\t\t\n\t\t\t// 处理图片资源，优化图片处理\n\t\t\tif (articleData.images && articleData.images.length) {\n\t\t\t\t// 清空之前的加载状态\n\t\t\t\timageLoadStatus.value = {};\n\t\t\t\timageRetryCount.value = {};\n\t\t\t\t\n\t\t\t\t// 清除之前的超时计时器\n\t\t\t\tObject.keys(imageLoadTimeouts.value).forEach(key => {\n\t\t\t\t\tclearTimeout(imageLoadTimeouts.value[key]);\n\t\t\t\t});\n\t\t\t\timageLoadTimeouts.value = {};\n\t\t\t\t\n\t\t\t\t// 处理图片资源，添加必要的处理逻辑\n\t\t\t\tarticleData.images = articleData.images.map((img, index) => {\n\t\t\t\t\t// 确保图片有压缩地址\n\t\t\t\t\tif (!img.compressedURL && img.url) {\n\t\t\t\t\t\timg.compressedURL = img.url;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 处理图片URL，使用统一的媒体处理函数\n\t\t\t\t\tif (img.compressedURL) {\n\t\t\t\t\t\timg.compressedURL = processMediaURL(img.compressedURL, 'image');\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 确保缩略图URL存在\n\t\t\t\t\tif (!img.thumbnailURL && img.compressedURL) {\n\t\t\t\t\t\timg.thumbnailURL = img.compressedURL;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 检查URL是否有效\n\t\t\t\t\tif (!isValidImageUrl(img.compressedURL) && !isValidImageUrl(img.thumbnailURL) && !isValidImageUrl(img.url)) {\n\t\t\t\t\t\tconsole.warn(`图片 ${index} 的URL无效:`, img);\n\t\t\t\t\t\t// 设置默认图片\n\t\t\t\t\t\timg.compressedURL = '/static/images/default.png';\n\t\t\t\t\t\timg.thumbnailURL = '/static/images/default.png';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 设置每张图片的初始加载状态\n\t\t\t\t\timageLoadStatus.value[index] = 'loading';\n\t\t\t\t\t\n\t\t\t\t\t// 为每张图片设置加载超时\n\t\t\t\t\timageLoadTimeouts.value[index] = setTimeout(() => {\n\t\t\t\t\t\tif (imageLoadStatus.value[index] === 'loading') {\n\t\t\t\t\t\t\tconsole.log(`图片 ${index} 加载超时`);\n\t\t\t\t\t\t\timageLoadStatus.value[index] = 'error';\n\t\t\t\t\t\t\tcheckAllImagesLoaded();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, IMAGE_LOAD_TIMEOUT);\n\t\t\t\t\t\n\t\t\t\t\treturn img;\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 设置加载状态\n\t\t\t\tisAnyImageLoading.value = true;\n\t\t\t\t\n\t\t\t\t// 设置全局超时，确保即使所有图片都加载失败，也能看到内容\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (isAnyImageLoading.value) {\n\t\t\t\t\t\tconsole.log('图片加载全局超时，强制显示内容');\n\t\t\t\t\t\tisAnyImageLoading.value = false;\n\t\t\t\t\t}\n\t\t\t\t}, IMAGE_LOAD_TIMEOUT + 2000);\n\t\t\t} else {\n\t\t\t\tisAnyImageLoading.value = false;\n\t\t\t}\n\t\t\t\n\t\t\t// 获取分类名称\n\t\t\tif (articleData.cate_id) {\n\t\t\t\ttry {\n\t\t\t\t\tconst cateApi = uniCloud.importObject('cateWx', { customUI: true })\n\t\t\t\t\tconst cateRes = await cateApi.get(articleData.cate_id)\n\t\t\t\t\tif (cateRes.data && cateRes.data[0]) {\n\t\t\t\t\t\tarticleData.cate_name = cateRes.data[0].cate_name\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error('获取分类名称失败:', err)\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// 确保文章对象有所有必要的属性\n\t\t\tarticleDetail.value = {\n\t\t\t\t_id: articleData._id || '',\n\t\t\t\tcontent: articleData.content || '',\n\t\t\t\tuser_id: articleData.user_id || '',\n\t\t\t\tuser_nickName: articleData.user_nickName || '',\n\t\t\t\tuser_avatarUrl: articleData.user_avatarUrl || '',\n\t\t\t\tuser_mobile: articleData.user_mobile || '',\n\t\t\t\tcate_id: articleData.cate_id || '',\n\t\t\t\tcate_name: articleData.cate_name || '',\n\t\t\t\tcreate_time: articleData.create_time || Date.now(),\n\t\t\t\tlook_count: articleData.look_count || 0,\n\t\t\t\tlike_count: articleData.like_count || 0,\n\t\t\t\taddress: articleData.address || '', // 添加地址字段\n\t\t\t\tdistrict: articleData.district || '', // 添加区域字段\n\t\t\t\timages: articleData.images || [],\n\t\t\t\tvideoURL: articleData.videoURL || null\n\t\t\t}\n\n\t\t\t// 添加调试信息，检查位置信息是否正确获取\n\t\t\tconsole.log('文章详情位置信息调试:', {\n\t\t\t\toriginalAddress: articleData.address,\n\t\t\t\toriginalDistrict: articleData.district,\n\t\t\t\tfinalAddress: articleDetail.value.address,\n\t\t\t\tfinalDistrict: articleDetail.value.district,\n\t\t\t\tgetSimplifiedLocationResult: getSimplifiedLocation()\n\t\t\t});\n\n\t\t} catch (err) {\n\t\t\tconsole.error('获取文章详情失败：', err)\n\t\t\t\n\t\t\t// 特别检查是否为抽奖相关错误\n\t\t\tif (err.message && (err.message.includes('lotteryVisibility') || err.message.includes('lottery') || err.message.includes('currentCommentPosition'))) {\n\t\t\t\tconsole.warn('检测到抽奖相关错误，已忽略：', err.message);\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '请清理缓存后重试',\n\t\t\t\t\ticon: 'none',\n\t\t\t\t\tduration: 3000\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '获取文章详情失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\n\n\t// 添加页面刷新方法\n\tconst refreshPage = async () => {\n\t\ttry {\n\t\t\t// 设置加载状态\n\t\t\tisLoading.value = true;\n\t\t\t\n\t\t\t// 清除所有图片超时计时器\n\t\t\tObject.keys(imageLoadTimeouts.value).forEach(key => {\n\t\t\t\tclearTimeout(imageLoadTimeouts.value[key]);\n\t\t\t});\n\t\t\t// 重置图片加载状态\n\t\t\timageLoadStatus.value = {};\n\t\t\timageLoadTimeouts.value = {};\n\t\t\timageRetryCount.value = {};\n\t\t\tisAnyImageLoading.value = true;\n\t\t\t\n\t\t\t// 重新加载文章详情\n\t\t\tawait getArticleDetail();\n\t\t\t\n\t\t\t// 更新浏览计数\n\t\t\tawait updatePageView();\n\t\t\t\n\t\t\tconsole.log('页面数据已刷新');\n\t\t} catch (error) {\n\t\t\tconsole.error('刷新页面数据失败:', error);\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '刷新数据失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t} finally {\n\t\t\t// 重置加载状态\n\t\t\tisLoading.value = false;\n\t\t\t\n\t\t\t// 停止下拉刷新动画（如果有）\n\t\t\tuni.stopPullDownRefresh();\n\t\t}\n\t}\n\n\t// 添加下拉刷新处理函数\n\tonPullDownRefresh(() => {\n\t\trefreshPage();\n\t});\n\n\n\n\n\n\n\n\t// 跳转到首页\n\tconst goToHome = ( ) => {\n\t\tuni.switchTab( {\n\t\t\turl: '/pages/index/index'\n\t\t} )\n\t}\n\n\t// 修改处理打电话的方法\n\tconst handleCall = async () => {\n\t\ttry {\n\t\t\t// 检查登录状态\n\t\t\tconst isLoggedIn = await customTestLogin()\n\t\t\tif (!isLoggedIn) {\n\t\t\t\t// customTestLogin 已经处理了登录跳转\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// 如果没有就给与提示\n\t\t\tif (articleDetail.value.user_mobile === '未填写') {\n\t\t\t\treturn uni.showToast({\n\t\t\t\t\ticon: 'none',\n\t\t\t\t\ttitle: '没有联系方式'\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// 如果有就拨打电话\n\t\t\tuni.makePhoneCall({\n\t\t\t\tphoneNumber: articleDetail.value.user_mobile,\n\t\t\t\tfail: (err) => {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '拨打电话失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t} catch (err) {\n\t\t\tconsole.error('拨打电话失败:', err)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '操作失败，请重试',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t}\n\t}\n\n\t// 修改 customTestLogin 方法，解决showLoading/hideLoading配对问题\n\tconst customTestLogin = async () => {\n\t\tif (isCheckingLogin.value) return false;\n\t\tisCheckingLogin.value = true;\n\n\t\ttry {\n\t\t\t// 如果已登录，直接返回true\n\t\t\tif (userStore.userInfo && userStore.userInfo.uid) {\n\t\t\t\t\n\t\t\t\t// 如果用户已登录但没有手机号，尝试获取手机号\n\t\t\t\tif (!userStore.userInfo.mobile) {\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// 尝试从本地存储获取\n\t\t\t\t\t\tconst localUserInfo = uni.getStorageSync('userInfo');\n\t\t\t\t\t\tif (localUserInfo && localUserInfo.mobile) {\n\t\t\t\t\t\t\t// 更新用户信息\n\t\t\t\t\t\t\tuserStore.setUserInfo({\n\t\t\t\t\t\t\t\t...userStore.userInfo,\n\t\t\t\t\t\t\t\tmobile: localUserInfo.mobile\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 尝试从服务器获取用户信息 - 使用userWx云函数代替userKs\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t// 使用userWx云函数获取用户信息\n\t\t\t\t\t\t\t\tconst userInfoApi = uniCloud.importObject('userWx', { customUI: true });\n\t\t\t\t\t\t\t\tconst userResult = await userInfoApi.getUserInfo(userStore.userInfo.uid);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (userResult && userResult.data && userResult.data.mobile) {\n\t\t\t\t\t\t\t\t\t// 更新用户信息\n\t\t\t\t\t\t\t\t\tuserStore.setUserInfo({\n\t\t\t\t\t\t\t\t\t\t...userStore.userInfo,\n\t\t\t\t\t\t\t\t\t\tmobile: userResult.data.mobile\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t// 保存到本地存储\n\t\t\t\t\t\t\t\t\tuni.setStorageSync('userInfo', {\n\t\t\t\t\t\t\t\t\t\t...userStore.userInfo,\n\t\t\t\t\t\t\t\t\t\tmobile: userResult.data.mobile\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// 继续执行，不阻止用户操作\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error('获取用户手机号失败:', err);\n\t\t\t\t\t\t// 继续执行，不阻止用户操作\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tisCheckingLogin.value = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\t// 检查是否已经显示loading，避免重复显示\n\t\t\tif (!loginLoadingVisible.value) {\n\t\t\t\tloginLoadingVisible.value = true;\n\t\t\t\t// 显示加载提示\n\t\t\t\tuni.showLoading({\n\t\t\t\t\ttitle: '登录中...',\n\t\t\t\t\tmask: true\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// 不再使用 loginApi.login()，直接跳转到登录页面\n\t\t\t// 获取当前页面路径和参数\n\t\t\tconst pages = getCurrentPages();\n\t\t\tconst currentPage = pages[pages.length - 1];\n\t\t\tconst currentRoute = currentPage.route;\n\t\t\tconst currentOptions = currentPage.options || {};\n\t\t\t\n\t\t\t// 构建完整的当前页面URL（包含参数）\n\t\t\t// 确保路径以斜杠开头\n\t\t\tlet redirectUrl = '/' + currentRoute;\n\t\t\tconst queryParams = [];\n\t\t\t\n\t\t\tfor (const key in currentOptions) {\n\t\t\t\tif (currentOptions.hasOwnProperty(key)) {\n\t\t\t\t\tqueryParams.push(`${key}=${encodeURIComponent(currentOptions[key])}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (queryParams.length > 0) {\n\t\t\t\tredirectUrl += '?' + queryParams.join('&');\n\t\t\t}\n\t\t\t\n\t\t\t// 隐藏加载提示\n\t\t\tif (loginLoadingVisible.value) {\n\t\t\t\tuni.hideLoading();\n\t\t\t\tloginLoadingVisible.value = false;\n\t\t\t}\n\t\t\t\n\t\t\t// 跳转到登录页面，并传递当前页面作为重定向参数\n\t\t\tuni.navigateTo({\n\t\t\t\turl: `/pages/login/login?redirect=${encodeURIComponent(redirectUrl)}`,\n\t\t\t\tcomplete: () => {\n\t\t\t\t\tisCheckingLogin.value = false;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturn false;\n\t\t} catch (err) {\n\t\t\tconsole.error('登录检查失败:', err);\n\t\t\t\n\t\t\t// 隐藏加载提示\n\t\t\tif (loginLoadingVisible.value) {\n\t\t\t\tuni.hideLoading();\n\t\t\t\tloginLoadingVisible.value = false;\n\t\t\t}\n\t\t\t\n\t\t\t// 显示提示\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '登录检查失败，请重试',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2000\n\t\t\t});\n\t\t\t\n\t\t\t// 发生错误时也跳转到登录页\n\t\t\tconst currentRoute = `/pages/article/articleDetail?article_id=${props.article_id}`;\n\t\t\tconst redirectUrl = encodeURIComponent(currentRoute);\n\t\t\t\n\t\t\t// 延迟跳转，让用户看到提示\n\t\t\tsetTimeout(() => {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: `/pages/login/login?redirect=${redirectUrl}`,\n\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\tisCheckingLogin.value = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 1500);\n\t\t\t\n\t\t\treturn false;\n\t\t} finally {\n\t\t\tisCheckingLogin.value = false;\n\t\t}\n\t};\n\n\t// 添加页面浏览量更新状态跟踪变量\n\tconst isUpdatingPageView = ref(false);\n\t\n\t// 更新页面浏览量\n\tconst updatePageView = async () => {\n\t\ttry {\n\t\t\t// 检查文章ID是否存在\n\t\t\tif (!props.article_id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// 添加锁机制防止重复增加浏览量\n\t\t\tif (isUpdatingPageView.value) {\n\t\t\t\tconsole.log('浏览量更新已在进行中，跳过重复操作');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// 设置锁定状态\n\t\t\tisUpdatingPageView.value = true;\n\t\t\t\n\t\t\t// 从本地存储中获取已浏览文章记录\n\t\t\tconst viewedKey = `viewed_${props.article_id}`;\n\t\t\tconst lastViewTime = uni.getStorageSync(viewedKey);\n\t\t\tconst currentTime = Date.now();\n\t\t\t\n\t\t\t// 如果在3秒钟内已经浏览过，不再增加浏览量\n\t\t\tif (lastViewTime && (currentTime - lastViewTime < 3 * 1000)) {\n\t\t\t\tconsole.log('3秒钟内已浏览过此文章，不增加浏览量');\n\t\t\t\tisUpdatingPageView.value = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// 更新最后浏览时间\n\t\t\tuni.setStorageSync(viewedKey, currentTime);\n\t\t\t\n\t\t\t// 直接调用API更新浏览量\n\t\t\tconst result = await articleApi.updateLookCount(props.article_id);\n\t\t\t\n\t\t\t// 如果更新成功，更新本地的浏览量数据\n\t\t\tif (result && result.code === 0) {\n\t\t\t\t// 获取服务器返回的浏览量\n\t\t\t\tconst updatedViewCount = result.data?.look_count || (articleDetail.value?.look_count || 0) + 1;\n\t\t\t\t\n\t\t\t\t// 更新文章详情中的浏览量\n\t\t\t\tif (articleDetail.value) {\n\t\t\t\t\tarticleDetail.value.look_count = updatedViewCount;\n\t\t\t\t\tconsole.log('文章浏览量已更新为:', articleDetail.value.look_count);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 发送全局浏览量更新事件，以便更新文章列表中的计数\n\t\t\t\tuni.$emit('articleViewCountUpdated', {\n\t\t\t\t\tarticleId: props.article_id,\n\t\t\t\t\tviewCount: updatedViewCount\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('更新浏览量失败:', err);\n\t\t\t\n\t\t\t// 即使API调用失败，也尝试在本地更新浏览量\n\t\t\tif (articleDetail.value) {\n\t\t\t\tconst localViewCount = (articleDetail.value.look_count || 0) + 1;\n\t\t\t\tarticleDetail.value.look_count = localViewCount;\n\t\t\t\t\n\t\t\t\t// 发送全局浏览量更新事件\n\t\t\t\tuni.$emit('articleViewCountUpdated', {\n\t\t\t\t\tarticleId: props.article_id,\n\t\t\t\t\tviewCount: localViewCount\n\t\t\t\t});\n\t\t\t}\n\t\t} finally {\n\t\t\t// 解除锁定状态\n\t\t\tisUpdatingPageView.value = false;\n\t\t}\n\t}\n\n\t// 添加保存浏览记录的方法\n\tconst saveViewedArticle = () => {\n\t\ttry {\n\t\t\tif (!articleDetail.value || !articleDetail.value._id) return\n\t\t\t\n\t\t\t// 获取当前文章的基本信息\n\t\t\tconst article = {\n\t\t\t\t_id: articleDetail.value._id,\n\t\t\t\ttitle: articleDetail.value.content ? articleDetail.value.content.substring(0, 30) : '无标题',\n\t\t\t\tcontent: articleDetail.value.content || '',\n\t\t\t\tcate_name: articleDetail.value.cate_name || '未分类',\n\t\t\t\tcreate_time: articleDetail.value.create_time,\n\t\t\t\tview_time: Date.now(), // 浏览时间\n\t\t\t\timages: articleDetail.value.images && articleDetail.value.images.length > 0 \n\t\t\t\t\t? [articleDetail.value.images[0]] // 只保存第一张图片信息\n\t\t\t\t\t: []\n\t\t\t}\n\t\t\t\n\t\t\t// 从本地存储获取已浏览文章列表\n\t\t\tlet viewedArticles = uni.getStorageSync('viewedArticles') || []\n\t\t\t\n\t\t\t// 检查是否已存在该文章\n\t\t\tconst existingIndex = viewedArticles.findIndex(item => item._id === article._id)\n\t\t\t\n\t\t\tif (existingIndex !== -1) {\n\t\t\t\t// 如果已存在，更新浏览时间并移到列表最前面\n\t\t\t\tviewedArticles.splice(existingIndex, 1)\n\t\t\t}\n\t\t\t\n\t\t\t// 将当前文章添加到列表最前面\n\t\t\tviewedArticles.unshift(article)\n\t\t\t\n\t\t\t// 限制保存的数量，最多保存50篇\n\t\t\tif (viewedArticles.length > 50) {\n\t\t\t\tviewedArticles = viewedArticles.slice(0, 50)\n\t\t\t}\n\t\t\t\n\t\t\t// 保存到本地存储\n\t\t\tuni.setStorageSync('viewedArticles', viewedArticles)\n\t\t} catch (err) {\n\t\t\tconsole.error('保存浏览记录失败:', err)\n\t\t}\n\t}\n\n\t// 修改页面加载逻辑\n\tonMounted(async () => {\n\t\ttry {\n\t\t\t// 初始化加载状态\n\t\t\tisLoading.value = true;\n\t\t\t\n\t\t\t// 从当前页面获取参数\n\t\t\tconst pages = getCurrentPages();\n\t\t\tconst currentPage = pages[pages.length - 1];\n\t\t\tconst options = currentPage.$page?.options || {};\n\t\t\t\n\t\t\t// 使用当前页面的 options 获取 article_id\n\t\t\tconst articleId = options.article_id || props.article_id;\n\t\t\t\n\t\t\tif (!articleId) {\n\t\t\t\tthrow new Error('文章ID不能为空');\n\t\t\t}\n\n\t\t\t// 先获取文章详情，让用户尽快看到内容\n\t\t\tawait getArticleDetail();\n\t\t\t\n\t\t\t// 文章详情加载完成后，就可以显示页面了\n\t\t\tisLoading.value = false;\n\t\t\t\n\t\t\t// 获取视频播放器上下文\n\t\t\tif (articleDetail.value.videoURL) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tvideoContext.value = uni.createVideoContext('articleVideo');\n\t\t\t\t}, 300);\n\t\t\t}\n\t\t\t\n\t\t\t// 更新浏览量\n\t\t\tupdatePageView().catch(err => {\n\t\t\t\tconsole.error('更新浏览量失败:', err);\n\t\t\t});\n\t\t\t\n\t\t\t// 添加文章到浏览记录\n\t\t\tsaveViewedArticle();\n\t\t\t\n\t\t} catch (err) {\n\t\t\tconsole.error('页面初始化失败:', err);\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '加载失败，请重试',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t} finally {\n\t\t\t// 确保在任何情况下都设置加载状态为false\n\t\t\tisLoading.value = false;\n\t\t}\n\t})\n\n\tonUnmounted(() => {\n\t\t// 清除定时器（评论相关代码已删除）\n\t})\n\n\t// 添加图片预览方法\n\tconst previewImage = (current) => {\n\t\tif (!articleDetail.value.images || !articleDetail.value.images.length) return\n\t\t\n\t\t// 只提取有效URL的图片\n\t\tconst validImages = articleDetail.value.images.filter(img => {\n\t\t\tconst url = img.compressedURL || img.thumbnailURL || img.url;\n\t\t\treturn url && (url.startsWith('http') || url.startsWith('/'));\n\t\t});\n\t\t\n\t\tif (validImages.length === 0) {\n\t\t\tconsole.log('没有有效的图片可以预览');\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '图片无法预览',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst urls = validImages.map(img => img.compressedURL || img.thumbnailURL || img.url);\n\t\t\n\t\t// 如果传入的current不是有效URL，则使用第一个有效URL\n\t\tif (!current || (typeof current === 'string' && !urls.includes(current))) {\n\t\t\tcurrent = urls[0];\n\t\t}\n\t\t\n\t\tconsole.log(`准备预览图片，有效图片数: ${urls.length}，当前图片: ${current}`);\n\t\t\n\t\tuni.previewImage({\n\t\t\tcurrent: current, // 当前显示图片的索引\n\t\t\turls: urls, // 需要预览的图片链接列表\n\t\t\tindicator: 'number',\n\t\t\tloop: true,\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.error('预览图片失败:', err)\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '预览图片失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\t\n\t// 位置信息处理函数\n\tconst getSimplifiedLocation = () => {\n\t\tif (!articleDetail.value) return '';\n\t\t\n\t\tconst { address, district } = articleDetail.value;\n\t\t\n\t\t// 如果有完整地址，优先显示地址\n\t\tif (address && address.trim()) {\n\t\t\t// 简化地址显示，去除过长的详细信息\n\t\t\tlet simplifiedAddress = address.trim();\n\t\t\t\n\t\t\t// 如果地址过长，进行截取\n\t\t\tif (simplifiedAddress.length > 50) {\n\t\t\t\tsimplifiedAddress = simplifiedAddress.substring(0, 47) + '...';\n\t\t\t}\n\t\t\t\n\t\t\treturn simplifiedAddress;\n\t\t}\n\t\t\n\t\t// 如果没有地址但有区域信息，显示区域\n\t\tif (district && district.trim()) {\n\t\t\treturn district.trim();\n\t\t}\n\t\t\n\t\t// 都没有则返回空字符串\n\t\treturn '';\n\t};\n\n\n\n\t// 添加文章点赞状态\n\tconst isArticleLiked = ref(false)\n\tconst likeCount = ref(0)\n\t\n\t// 获取文章点赞状态\n\tconst getArticleLikeStatus = async () => {\n\t\ttry {\n\t\t\tif (!props.article_id || !userStore.userInfo.uid) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// 先设置默认状态，确保即使请求失败也有基本显示\n\t\t\tif (articleDetail.value) {\n\t\t\t\tlikeCount.value = articleDetail.value.like_count || 0;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst result = await likeApi.getLikeRecord(props.article_id, userStore.userInfo.uid);\n\t\t\t\t\n\t\t\t\t// 更新点赞状态\n\t\t\t\tisArticleLiked.value = result.res.data && result.res.data.length > 0;\n\t\t\t\t\n\t\t\t\t// 更新点赞数\n\t\t\t\tif (articleDetail.value) {\n\t\t\t\t\tlikeCount.value = articleDetail.value.like_count || 0;\n\t\t\t\t} else {\n\t\t\t\t\tlikeCount.value = result.like_count || 0;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('获取点赞记录失败:', err);\n\t\t\t\t// 使用默认值继续执行\n\t\t\t\tisArticleLiked.value = false;\n\t\t\t}\n\t\t\t\n\t\t\t// 发送事件通知其他组件更新点赞状态\n\t\t\tuni.$emit('updateArticleLikeStatus', {\n\t\t\t\tarticleId: props.article_id,\n\t\t\t\tisLiked: isArticleLiked.value,\n\t\t\t\tlikeCount: likeCount.value\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('获取点赞状态失败:', err);\n\t\t\t// 使用默认值\n\t\t\tisArticleLiked.value = false;\n\t\t\tif (articleDetail.value) {\n\t\t\t\tlikeCount.value = articleDetail.value.like_count || 0;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// 添加处理轮播图变化的方法\n\tconst handleSwiperChange = (e) => {\n\t\tcurrentImageIndex.value = e.detail.current\n\t}\n\n\t// 添加图片加载完成的处理方法\n\tconst handleImageLoad = (index) => {\n\t\tconsole.log(`图片 ${index} 加载成功`);\n\t\t\n\t\t// 清除超时计时器\n\t\tif (imageLoadTimeouts.value[index]) {\n\t\t\tclearTimeout(imageLoadTimeouts.value[index]);\n\t\t\tdelete imageLoadTimeouts.value[index];\n\t\t}\n\t\t\n\t\t// 设置加载状态为已加载\n\t\timageLoadStatus.value[index] = 'loaded';\n\t\t\n\t\t// 检查所有图片加载状态\n\t\tcheckAllImagesLoaded();\n\t};\n\t\n\t// 修改图片加载失败的处理方法\n\tconst handleImageError = (index) => {\n\t\tconsole.error('图片加载失败:', index, articleDetail.value.images && articleDetail.value.images[index]);\n\t\t\n\t\t// 清除超时计时器\n\t\tif (imageLoadTimeouts.value[index]) {\n\t\t\tclearTimeout(imageLoadTimeouts.value[index]);\n\t\t\tdelete imageLoadTimeouts.value[index];\n\t\t}\n\t\t\n\t\t// 初始化或增加重试计数\n\t\tif (!imageRetryCount.value[index]) {\n\t\t\timageRetryCount.value[index] = 1;\n\t\t} else {\n\t\t\timageRetryCount.value[index]++;\n\t\t}\n\t\t\n\t\t// 确保文章详情和图片数组存在\n\t\tif (!articleDetail.value || !articleDetail.value.images || !articleDetail.value.images[index]) {\n\t\t\timageLoadStatus.value[index] = 'error';\n\t\t\tcheckAllImagesLoaded();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 检查图片是否存在且未超过最大重试次数\n\t\tif (imageRetryCount.value[index] <= MAX_RETRY_COUNT) {\n\t\t\tconst img = articleDetail.value.images[index];\n\t\t\tlet shouldRetry = false;\n\t\t\tlet newUrl = '';\n\t\t\t\n\t\t\ttry {\n\t\t\t\t// 尝试不同的加载策略\n\t\t\t\tif (imageRetryCount.value[index] === 1) {\n\t\t\t\t\t// 第一次重试：尝试使用原始URL替代压缩URL\n\t\t\t\t\tif (img.compressedURL !== img.url && img.url) {\n\t\t\t\t\t\tconsole.log('尝试使用原始URL加载图片:', img.url);\n\t\t\t\t\t\tnewUrl = img.url;\n\t\t\t\t\t\tshouldRetry = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (imageRetryCount.value[index] === 2) {\n\t\t\t\t\t// 第二次重试：添加时间戳避免缓存问题\n\t\t\t\t\tconst timestamp = new Date().getTime();\n\t\t\t\t\tconst baseUrl = img.url || img.compressedURL;\n\t\t\t\t\tif (baseUrl) {\n\t\t\t\t\t\tnewUrl = baseUrl.includes('?') \n\t\t\t\t\t\t\t? `${baseUrl}&t=${timestamp}` \n\t\t\t\t\t\t\t: `${baseUrl}?t=${timestamp}`;\n\t\t\t\t\t\tshouldRetry = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (imageRetryCount.value[index] === 3) {\n\t\t\t\t\t// 第三次重试：尝试使用图片代理服务\n\t\t\t\t\tconst baseUrl = img.url || img.compressedURL;\n\t\t\t\t\tif (baseUrl) {\n\t\t\t\t\t\t// 这里可以使用你自己的图片代理服务URL\n\t\t\t\t\t\t// 例如: newUrl = `https://your-proxy-service.com/proxy?url=${encodeURIComponent(baseUrl)}`;\n\t\t\t\t\t\t// 如果没有代理服务，就再次添加不同的时间戳\n\t\t\t\t\t\tconst timestamp = new Date().getTime() + 1000;\n\t\t\t\t\t\tnewUrl = baseUrl.includes('?') \n\t\t\t\t\t\t\t? `${baseUrl}&t=${timestamp}&retry=final` \n\t\t\t\t\t\t\t: `${baseUrl}?t=${timestamp}&retry=final`;\n\t\t\t\t\t\tshouldRetry = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (shouldRetry && newUrl) {\n\t\t\t\t\tconsole.log(`图片 ${index} 重试 (${imageRetryCount.value[index]}/${MAX_RETRY_COUNT}): ${newUrl}`);\n\t\t\t\t\t\n\t\t\t\t\t// 使用Vue的更新方法确保响应式更新\n\t\t\t\t\tarticleDetail.value.images[index] = {\n\t\t\t\t\t\t...articleDetail.value.images[index],\n\t\t\t\t\t\t\tcompressedURL: newUrl\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// 保持loading状态以允许重试\n\t\t\t\t\timageLoadStatus.value[index] = 'loading';\n\t\t\t\t\t\n\t\t\t\t\t// 再次设置超时，增加超时时间\n\t\t\t\t\tconst increasedTimeout = IMAGE_LOAD_TIMEOUT + (imageRetryCount.value[index] * 5000); // 每次重试增加5秒\n\t\t\t\t\tconsole.log(`图片 ${index} 设置加载超时: ${increasedTimeout}ms`);\n\t\t\t\t\t\n\t\t\t\t\timageLoadTimeouts.value[index] = setTimeout(() => {\n\t\t\t\t\t\tif (imageLoadStatus.value[index] === 'loading') {\n\t\t\t\t\t\t\tconsole.log(`图片 ${index} 重试后依然超时`);\n\t\t\t\t\t\t\timageLoadStatus.value[index] = 'error';\n\t\t\t\t\t\t\tcheckAllImagesLoaded();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, increasedTimeout);\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('处理图片重试失败:', err);\n\t\t\t\t// 如果重试过程出错，直接标记为错误状态\n\t\t\t\timageLoadStatus.value[index] = 'error';\n\t\t\t\tcheckAllImagesLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 如果多次尝试后仍然失败，标记为错误\n\t\timageLoadStatus.value[index] = 'error';\n\t\tconsole.log(`图片${index}加载失败，已标记为错误状态 (已重试${imageRetryCount.value[index]}次)`);\n\t\tcheckAllImagesLoaded();\n\t\t\n\t\t// 如果第一张图片加载失败，立即隐藏加载状态显示界面内容\n\t\tif (index === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tisAnyImageLoading.value = false;\n\t\t\t}, 300);\n\t\t}\n\t};\n\t\n\t// 检查所有图片是否已加载\n\tconst checkAllImagesLoaded = () => {\n\t\tif (!articleDetail.value || !articleDetail.value.images || !articleDetail.value.images.length) {\n\t\t\tisAnyImageLoading.value = false;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst imageCount = articleDetail.value.images.length;\n\t\tlet loadedCount = 0;\n\t\tlet errorCount = 0;\n\t\t\n\t\tfor (let i = 0; i < imageCount; i++) {\n\t\t\tif (imageLoadStatus.value[i] === 'loaded') {\n\t\t\t\tloadedCount++;\n\t\t\t} else if (imageLoadStatus.value[i] === 'error') {\n\t\t\t\terrorCount++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tconsole.log(`图片加载状态: 已加载 ${loadedCount}, 错误 ${errorCount}, 总数 ${imageCount}`);\n\t\t\n\t\t// 如果所有图片都已加载完成或标记为错误，显示内容\n\t\tif (loadedCount + errorCount >= imageCount) {\n\t\t\tisAnyImageLoading.value = false;\n\t\t}\n\t\t\n\t\t// 如果大部分图片(70%)都已加载，也可以显示内容\n\t\tif (loadedCount > imageCount * 0.7) {\n\t\t\tisAnyImageLoading.value = false;\n\t\t}\n\t};\n\n\t// 处理关注功能\n\tconst handleFollow = async (followedId) => {\n\t\t// ... existing code ...\n\t}\n\t\n\t// 处理客服会话\n\tconst handleContact = (e) => {\n\t\t// 记录客服会话事件\n\t\tconsole.log('客服会话事件:', e)\n\t\t\n\t\t// 使用新API获取应用基础信息和平台信息\n\t\tlet appInfo;\n\t\ttry {\n\t\t\t// 尝试使用新API\n\t\t\tappInfo = uni.getAppBaseInfo();\n\t\t} catch (error) {\n\t\t\t// 降级处理：如果新API不可用，使用其他方式判断\n\t\t\tconsole.warn('getAppBaseInfo不可用，尝试使用替代方法');\n\t\t\tappInfo = {};\n\t\t\ttry {\n\t\t\t\t// 尝试通过环境变量判断\n\t\t\t\tconst envInfo = uni.getEnv ? uni.getEnv() : {};\n\t\t\t\tappInfo.AppPlatform = envInfo.platform || '';\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('获取环境信息失败', err);\n\t\t\t}\n\t\t}\n\t\t\n\t\tconst isKuaishou = appInfo.AppPlatform === 'kwaishop' || \n\t\t\t\t\t\t   appInfo.host === 'Kuaishou' || \n\t\t\t\t\t\t   appInfo.hostName === 'Kuaishou'\n\t\t\n\t\t// 如果不在快手环境中，提供备选方案\n\t\tif (!isKuaishou) {\n\t\t\t// 检查是否支持客服会话\n\t\t\tif (e.detail && e.detail.errMsg && e.detail.errMsg.includes('fail')) {\n\t\t\t\t// 显示提示\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '联系客服',\n\t\t\t\t\tcontent: '请添加客服微信: customer_service_wx',\n\t\t\t\t\tconfirmText: '复制微信号',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tuni.setClipboardData({\n\t\t\t\t\t\t\t\tdata: 'customer_service_wx',\n\t\t\t\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: '微信号已复制',\n\t\t\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t// 文章点击跳转\n\tconst handleArticleClick = (articleId) => {\n\t\t// 如果点击的是当前文章，不做任何操作\n\t\tif (articleId === props.article_id) {\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// 跳转到新的文章详情页\n\t\tuni.navigateTo({\n\t\t\turl: `/pages/article/articleDetail?article_id=${articleId}`,\n\t\t\tsuccess: () => {\n\t\t\t},\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.error('跳转到文章详情页失败:', err)\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '跳转失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\t\n\t// 修改触底事件处理\n\tonReachBottom(() => {\n\t\t// 调用推荐组件的加载更多方法\n\t\tif (tuijianRef.value) {\n\t\t\ttuijianRef.value.loadMore()\n\t\t}\n\t})\n\n\t// 处理点赞变化\n\tconst handleLikeChange = async (data) => {\n\t\t// 检查用户是否登录\n\t\tconst isLoggedIn = await customTestLogin();\n\t\tif (!isLoggedIn) {\n\t\t\tconsole.log('用户未登录，无法点赞');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 确保有用户信息\n\t\tif (!userStore.userInfo || !userStore.userInfo.uid) {\n\t\t\tconsole.error('用户信息不完整，无法点赞');\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '登录信息异常，请重新登录',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 获取用户信息\n\t\tconst userInfo = {\n\t\t\tuid: userStore.userInfo.uid,\n\t\t\tnickName: userStore.userInfo.nickName || '匿名用户',\n\t\t\tavatarUrl: userStore.userInfo.avatarUrl || '/static/images/default-avatar.png'\n\t\t};\n\t\t\n\t\tconsole.log('点赞用户信息:', userInfo);\n\t\t\n\t\t// 更新文章详情中的点赞数\n\t\tif (articleDetail.value) {\n\t\t\tarticleDetail.value.like_count = data.likeCount;\n\t\t}\n\t\t\n\t\t// 更新点赞状态\n\t\tisArticleLiked.value = data.isLiked;\n\t\tlikeCount.value = data.likeCount;\n\t}\n\n\t// 添加视频事件处理\n\tconst handleVideoLoad = () => {\n\t\tvideoLoadStatus.value = 'loaded';\n\t};\n\t\n\tconst handleVideoError = () => {\n\t\tvideoLoadStatus.value = 'error';\n\t\tuni.showToast({\n\t\t\ttitle: '视频加载失败',\n\t\t\ticon: 'none'\n\t\t});\n\t};\n\n\n\t\n\t// 页面卸载时移除事件监听\n\tonUnmounted(() => {\n\t\t// 清除其他可能的监听器和定时器\n\t\tuni.$off('setShareInfo');\n\t\tuni.$off('viewCountUpdated');\n\t\tuni.$off('updateArticleLikeStatus');\n\t})\n\t\n\n\n\t// 页面加载时执行\n\tonLoad(async () => {\n\t\t// 重置图片加载状态\n\t\timageLoadStatus.value = {};\n\t\timageRetryCount.value = {};\n\t\t\n\t\t// 清除所有超时计时器\n\t\tObject.keys(imageLoadTimeouts.value).forEach(key => {\n\t\t\tclearTimeout(imageLoadTimeouts.value[key]);\n\t\t});\n\t\timageLoadTimeouts.value = {};\n\t\t\n\t\t// 初始化加载状态\n\t\tisLoading.value = true;\n\t\tisAnyImageLoading.value = true;\n\t\t\n\t\t// 注意：SharedArrayBuffer警告是Chrome M92+的一项安全措施\n\t\t// 在小程序环境中这个警告通常可以忽略，因为小程序有自己的安全机制\n\t\t// 详见: https://developer.chrome.com/blog/enabling-shared-array-buffer/\n\t\t\n\t\ttry {\n\t\t\t// 先获取文章详情\n\t\t\tawait getArticleDetail();\n\t\t\t\n\t\t\t// 更新浏览计数\n\t\t\tawait updatePageView();\n\t\t} catch (error) {\n\t\t\tconsole.error('页面加载失败:', error);\n\t\t} finally {\n\t\t\tisLoading.value = false;\n\t\t}\n\t});\n\t\n\t// 页面显示时执行\n\tonShow(() => {\n\t\t// 移除对不存在函数的调用\n\t\t// 之前: initNavigation();\n\t\tconsole.log('页面显示');\n\t});\n\n\t// 预加载图片\n\tconst preloadImages = (imageList, startIndex = 0) => {\n\t\tif (!imageList || !Array.isArray(imageList) || imageList.length === 0) {\n\t\t\tconsole.log('无图片可预加载');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 计算总数和已加载数\n\t\tconst totalCount = imageList.length;\n\t\tlet loadedCount = 0;\n\t\tlet errorCount = 0;\n\t\t\n\t\t// 更新加载状态\n\t\tconst updateLoadingStatus = () => {\n\t\t\tif (loadedCount + errorCount === totalCount) {\n\t\t\t\tisAnyImageLoading.value = false;\n\t\t\t\tconsole.log(`图片加载完成: 成功 ${loadedCount}, 失败 ${errorCount}`);\n\t\t\t} else {\n\t\t\t\tconsole.log(`图片加载状态: 已加载 ${loadedCount}, 错误 ${errorCount}, 总数 ${totalCount}`);\n\t\t\t}\n\t\t};\n\t\t\n\t\t// 逐个预加载图片\n\t\tconst loadNextImage = (index) => {\n\t\t\tif (index >= totalCount) {\n\t\t\t\tupdateLoadingStatus();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tconst img = imageList[index];\n\t\t\tif (!img) {\n\t\t\t\tconsole.log(`图片 ${index} 为空`);\n\t\t\t\terrorCount++;\n\t\t\t\tloadNextImage(index + 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// 获取图片URL\n\t\t\tlet url = img.compressedURL || img.thumbnailURL || img.url;\n\t\t\t\n\t\t\t// 如果仍然没有URL，标记为错误并继续\n\t\t\tif (!url) {\n\t\t\t\tconsole.log(`图片 ${index} 没有有效URL`);\n\t\t\t\terrorCount++;\n\t\t\t\tloadNextImage(index + 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// 直接设置为已加载状态，不进行实际预加载\n\t\t\t// 这样可以避免小程序环境下的getImageInfo错误\n\t\t\tloadedCount++;\n\t\t\tconsole.log(`标记图片 ${index} 为已加载，URL: ${url.substring(0, 50)}${url.length > 50 ? '...' : ''}`);\n\t\t\t\n\t\t\t// 立即加载下一张图片，不使用延时\n\t\t\tloadNextImage(index + 1);\n\t\t};\n\t\t\n\t\t// 开始预加载\n\t\tloadNextImage(startIndex);\n\t}\n\n\t// 处理图片加载完成后的操作\n\tconst handleArticleLoaded = () => {\n\t\t// 延迟处理图片，避免与初始渲染冲突\n\t\tsetTimeout(() => {\n\t\t\tif (articleDetail.value && articleDetail.value.images) {\n\t\t\t\t// 使用优化后的预加载方式\n\t\t\t\tpreloadImages(articleDetail.value.images);\n\t\t\t\t\n\t\t\t\t// 标记图片加载状态\n\t\t\t\tarticleDetail.value.images.forEach((img, index) => {\n\t\t\t\t\timageLoadStatus.value[index] = 'loaded';\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 设置为非加载状态，显示页面内容\n\t\t\t\tisAnyImageLoading.value = false;\n\t\t\t\tconsole.log('文章已加载完成，标记所有图片为已加载状态');\n\t\t\t}\n\t\t}, 300);\n\t};\n\n\t// 在文章详情加载完成后处理图片\n\twatch(() => articleDetail.value._id, (newVal) => {\n\t\tif (newVal) {\n\t\t\t// 文章ID变化时触发处理\n\t\t\tnextTick(() => {\n\t\t\t\thandleArticleLoaded();\n\t\t\t});\n\t\t}\n\t});\n\n\t// 监听加载状态变化\n\twatch(() => isLoading.value, (newVal, oldVal) => {\n\t\tif (oldVal === true && newVal === false) {\n\t\t\t// 从加载中变为加载完成时触发\n\t\t\thandleArticleLoaded();\n\t\t}\n\t});\n\n\t// 在 script setup 部分添加编辑相关的方法\n\tconst handleEdit = () => {\n\t\t// 检查是否是文章作者\n\t\tif (!userStore.userInfo || !userStore.userInfo.uid || userStore.userInfo.uid !== articleDetail.value.user_id) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '只能编辑自己的文章',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// 跳转到发布页面进行编辑\n\t\tuni.navigateTo({\n\t\t\turl: `/pages/fabu/fabu?mode=edit&article_id=${props.article_id}`,\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.error('跳转编辑页面失败:', err)\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '跳转失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n</script>\n\n<template>\n\t<view class=\"article-detail-container\">\n\t\t<!-- 替换原有的加载页面，使用与首页相同的加载样式 -->\n\t\t<view class=\"custom-loading-container\" v-if=\"isLoading && !articleDetail._id\">\n\t\t\t<view class=\"loading-spinner\">\n\t\t\t\t<uni-icons type=\"spinner-cycle\" size=\"48\" color=\"#399bfe\"></uni-icons>\n\t\t\t</view>\n\t\t\t<text class=\"loading-text\">内容加载中...</text>\n\t\t</view>\n\n\t\t<view class=\"article-detail-container\" v-show=\"articleDetail._id\">\n\t\t\t<scroll-view \n\t\t\t\tclass=\"article-detail-scroll\" \n\t\t\t\tscroll-y \n\t\t\t\t@scrolltolower=\"tuijianRef?.loadMore()\"\n\t\t\t\t:show-scrollbar=\"false\"\n\t\t\t\t:lower-threshold=\"150\"\n\t\t\t\tenable-back-to-top\n\t\t\t>\n\t\t\t\t<view class=\"article-detail fade-in-animation\">\n\t\t\t\t\t<!-- 头部文章内容 -->\n\t\t\t\t\t<view class=\"articleHead\">\n\t\t\t\t\t\t<!-- 视频和图片区域 -->\n\t\t\t\t\t\t<view class=\"media-container\">\n\t\t\t\t\t\t\t<!-- 视频区域 - 单独显示 -->\n\t\t\t\t\t\t\t<view class=\"articleVideo\" v-if=\"articleDetail.videoURL\">\n\t\t\t\t\t\t\t\t<!-- 视频加载状态 -->\n\t\t\t\t\t\t\t\t<view class=\"video-loading\" v-if=\"videoLoadStatus === 'loading'\">\n\t\t\t\t\t\t\t\t\t<uni-load-more status=\"loading\" :contentText=\"{ contentrefresh: '视频加载中...' }\"></uni-load-more>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<!-- 视频错误状态 -->\n\t\t\t\t\t\t\t\t<view class=\"video-error\" v-if=\"videoLoadStatus === 'error'\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"videocam-slash\" size=\"50\" color=\"#CCCCCC\"></uni-icons>\n\t\t\t\t\t\t\t\t\t<text>视频加载失败</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\t\tid=\"articleVideo\"\n\t\t\t\t\t\t\t\t\tclass=\"video-player\"\n\t\t\t\t\t\t\t\t\t:src=\"articleDetail.videoURL\"\n\t\t\t\t\t\t\t\t\tautoplay\n\t\t\t\t\t\t\t\t\tobject-fit=\"cover\"\n\t\t\t\t\t\t\t\t\t:poster=\"articleDetail.images && articleDetail.images[0] ? articleDetail.images[0].compressedURL : ''\"\n\t\t\t\t\t\t\t\t\tcontrols\n\t\t\t\t\t\t\t\t\t@error=\"handleVideoError\"\n\t\t\t\t\t\t\t\t\t@loadedmetadata=\"handleVideoLoad\"\n\t\t\t\t\t\t\t\t></video>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<!-- 图片显示区域 - 单独显示 -->\n\t\t\t\t\t\t\t<view class=\"articleImages\" v-if=\"articleDetail.images && articleDetail.images.length\">\n\t\t\t\t\t\t\t\t<!-- 图片网格 -->\n\t\t\t\t\t\t\t\t<view class=\"image-grid\">\n\t\t\t\t\t\t\t\t\t<view \n\t\t\t\t\t\t\t\t\t\tv-for=\"(item, index) in articleDetail.images.slice(0, articleDetail.images.length > 9 ? 9 : articleDetail.images.length)\" \n\t\t\t\t\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t\t\t\t\t:class=\"[\n\t\t\t\t\t\t\t\t\t\t\t'image-grid-item',\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t'single-image': articleDetail.images.length === 1,\n\t\t\t\t\t\t\t\t\t\t\t\t'double-image': articleDetail.images.length === 2,\n\t\t\t\t\t\t\t\t\t\t\t\t'triple-image': articleDetail.images.length === 3,\n\t\t\t\t\t\t\t\t\t\t\t\t'grid-image': articleDetail.images.length > 3\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t\t\t\t@click=\"previewImage(item.compressedURL || item.thumbnailURL || item.url)\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<!-- 图片加载失败占位符 -->\n\t\t\t\t\t\t\t\t\t\t<view class=\"image-placeholder\" v-if=\"imageLoadStatus[index] === 'error'\">\n\t\t\t\t\t\t\t\t\t\t\t<uni-icons type=\"image\" size=\"24\" color=\"#999999\"></uni-icons>\n\t\t\t\t\t\t\t\t\t\t\t<text>加载失败</text>\n\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<!-- 图片加载中占位符 -->\n\t\t\t\t\t\t\t\t\t\t<view class=\"image-placeholder loading\" v-else-if=\"imageLoadStatus[index] !== 'loaded'\">\n\t\t\t\t\t\t\t\t\t\t\t<uni-icons type=\"spinner-cycle\" size=\"24\" color=\"#666666\"></uni-icons>\n\t\t\t\t\t\t\t\t\t\t\t<text>加载中</text>\n\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<!-- 图片 -->\n\t\t\t\t\t\t\t\t\t\t<image \n\t\t\t\t\t\t\t\t\t\t\t:src=\"item.compressedURL || item.thumbnailURL || item.url || '/static/images/default.png'\" \n\t\t\t\t\t\t\t\t\t\t\tmode=\"aspectFill\" \n\t\t\t\t\t\t\t\t\t\t\t@load=\"handleImageLoad(index)\"\n\t\t\t\t\t\t\t\t\t\t\t@error=\"handleImageError(index)\"\n\t\t\t\t\t\t\t\t\t\t\t:style=\"{opacity: imageLoadStatus[index] === 'loaded' ? 1 : 0}\"\n\t\t\t\t\t\t\t\t\t\t></image>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<!-- 更多图片提示 -->\n\t\t\t\t\t\t\t\t\t\t<view class=\"more-images\" v-if=\"index === 8 && articleDetail.images.length > 9\">\n\t\t\t\t\t\t\t\t\t\t\t<text>+{{articleDetail.images.length - 9}}</text>\n\t\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<!-- 图片计数器 -->\n\t\t\t\t\t\t\t\t<view class=\"image-counter\" v-if=\"articleDetail.images.length > 1\">\n\t\t\t\t\t\t\t\t\t{{articleDetail.images.length}}张图片\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 操作功能区 - 移除了重复的时间和浏览量 -->\n\t\t\t\t\t<view class=\"article-info\" style=\"display: none;\">\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 新的元信息显示区域 -->\n\t\t\t\t\t<view class=\"article-meta-info\">\n\t\t\t\t\t\t<view class=\"meta-item date\">\n\t\t\t\t\t\t\t<uni-icons type=\"calendar\" size=\"18\" color=\"#666666\"></uni-icons>\n\t\t\t\t\t\t\t<text>{{formatTime(articleDetail.create_time)}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"meta-divider\"></view>\n\t\t\t\t\t\t<view class=\"meta-item views\">\n\t\t\t\t\t\t\t<uni-icons type=\"eye\" size=\"18\" color=\"#666666\"></uni-icons>\n\t\t\t\t\t\t\t<text>{{articleDetail.look_count || 0}}浏览</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"meta-divider\"></view>\n\t\t\t\t\t\t<view class=\"meta-item category\" v-if=\"articleDetail.cate_name\">\n\t\t\t\t\t\t\t<uni-icons type=\"tag\" size=\"18\" color=\"#399bfe\"></uni-icons>\n\t\t\t\t\t\t\t<text>{{articleDetail.cate_name}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 文章内容区域 -->\n\t\t\t\t\t<view class=\"articleContent\">\n\t\t\t\t\t\t<view class=\"articleText\" v-if=\"articleDetail.content\">\n\t\t\t\t\t\t\t<!-- 使用rich-text组件渲染包含手机号链接的内容（小程序优化版本） -->\n\t\t\t\t\t\t\t<rich-text \n\t\t\t\t\t\t\t\tclass=\"category-name rich-text-content\"\n\t\t\t\t\t\t\t\t:nodes=\"processedContent\"\n\t\t\t\t\t\t\t\t@tap=\"handleRichTextTap\"\n\t\t\t\t\t\t\t\tspace=\"nbsp\"\n\t\t\t\t\t\t\t></rich-text>\n\t\t\t\t\t\t\t<!-- 备用方案：如果rich-text无法正常工作，提供普通文本点击 -->\n\t\t\t\t\t\t\t<view class=\"phone-text-fallback\" v-if=\"!processedContent\" @tap=\"handleTextPhoneDetection\">\n\t\t\t\t\t\t\t\t<text class=\"category-name\">{{articleDetail.content}}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<!-- 详情图展示 - 在文章内容下方重复展示图片 -->\n\t\t\t\t\t<view class=\"article-detail-images\" v-if=\"articleDetail.images && articleDetail.images.length\" style=\"border-top: 0px solid #f5f5f5;\">\n\t\t\t\t\t\t<view class=\"detail-images-title\">\n\t\t\t\t\t\t\t<view class=\"line\"></view>\n\t\t\t\t\t\t\t<text>详情图片 ({{articleDetail.images.length}}张)</text>\n\t\t\t\t\t\t\t<view class=\"line\"></view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"detail-images-container\">\n\t\t\t\t\t\t\t<view class=\"detail-image-wrapper\" v-for=\"(item, index) in articleDetail.images\" :key=\"index\">\n\t\t\t\t\t\t\t\t<!-- 加载失败占位符 -->\n\t\t\t\t\t\t\t\t<view class=\"detail-image-placeholder\" v-if=\"imageLoadStatus[index] === 'error'\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"image\" size=\"32\" color=\"#cccccc\"></uni-icons>\n\t\t\t\t\t\t\t\t\t<text>图片加载失败</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<!-- 加载中占位符 -->\n\t\t\t\t\t\t\t\t<view class=\"detail-image-placeholder loading\" v-else-if=\"imageLoadStatus[index] !== 'loaded'\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"spinner-cycle\" size=\"32\" color=\"#666666\"></uni-icons>\n\t\t\t\t\t\t\t\t\t<text>加载中...</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<image \n\t\t\t\t\t\t\t\t\tclass=\"detail-image\"\n\t\t\t\t\t\t\t\t\t:src=\"item.compressedURL || item.thumbnailURL || item.url || '/static/images/default.png'\" \n\t\t\t\t\t\t\t\t\tmode=\"widthFix\"\n\t\t\t\t\t\t\t\t\t@click=\"previewImage(item.compressedURL || item.thumbnailURL || item.url)\"\n\t\t\t\t\t\t\t\t\t@load=\"handleImageLoad(index)\"\n\t\t\t\t\t\t\t\t\t@error=\"handleImageError(index)\"\n\t\t\t\t\t\t\t\t\t:style=\"{opacity: imageLoadStatus[index] === 'loaded' ? 1 : 0}\"\n\t\t\t\t\t\t\t\t></image>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 位置信息显示 - 在详情图片后面 -->\n\t\t\t\t\t<view class=\"location-info-section\" v-if=\"articleDetail.address || articleDetail.district\">\n\t\t\t\t\t\t<view class=\"location-header\">\n\t\t\t\t\t\t\t<uni-icons type=\"location\" size=\"16\" color=\"#399bfe\"></uni-icons>\n\t\t\t\t\t\t\t<text class=\"location-title\">位置信息</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"location-content\">\n\t\t\t\t\t\t\t<text class=\"location-address\">地址：{{ getSimplifiedLocation() }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 替换原有的推荐部分为新组件 -->\n\t\t\t\t\t<tuijian \n\t\t\t\t\t\tref=\"tuijianRef\"\n\t\t\t\t\t\t:current-article-id=\"article_id\"\n\t\t\t\t\t\t:cate_id=\"articleDetail.cate_id\"\n\t\t\t\t\t\t@click=\"handleArticleClick\"\n\t\t\t\t\t/>\n\t\t\t\t\t\n\n\t\t\t\t</view>\n\t\t\t</scroll-view>\n\n\t\t\t\n\t\t</view>\n\n\t\t<!-- 底部栏 -->\n\t\t<view class=\"footer\">\n\t\t\t<view class=\"footer-content\">\n\t\t\t\t<view class=\"action-item\" @click=\"goToHome\">\n\t\t\t\t\t<uni-icons type=\"home\" size=\"24\" color=\"#444444\"></uni-icons>\n\t\t\t\t\t<view class=\"text\">\n\t\t\t\t\t\t首页\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 添加编辑按钮 -->\n\t\t\t\t<view class=\"action-item\" v-if=\"userStore.userInfo && userStore.userInfo.uid === articleDetail.user_id\" @click=\"handleEdit\">\n\t\t\t\t\t<uni-icons type=\"compose\" size=\"24\" color=\"#444444\"></uni-icons>\n\t\t\t\t\t<view class=\"text\">\n\t\t\t\t\t\t编辑\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 转发按钮 -->\n\t\t\t\t<button open-type=\"share\" class=\"action-item\">\n\t\t\t\t\t<text class=\"icon lishuai-zhuanfa\" style=\"font-size: 24px; color: #444444;\"></text>\n\t\t\t\t\t<view class=\"text\">\n\t\t\t\t\t\t转发\n\t\t\t\t\t</view>\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t<view class=\"call-btn\" @click=\"handleCall\">\n\t\t\t\t\t打电话\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\n\t</view>\n</template>\n\n<style lang=\"scss\" scoped>\n\t.article-detail-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\theight: 100vh;\n\t\tbackground-color: #e2e2e2;\n\t\tpadding-bottom: 160rpx;\n\t\tborder: none;\n\t\tbox-sizing: border-box;\n\t}\n\n\t.article-detail-scroll {\n\t\tflex: 1;\n\t\theight: calc(100vh - 120rpx - env(safe-area-inset-bottom));\n\t\t-webkit-overflow-scrolling: touch;\n\t\tbackground-color: #e2e2e2;\n\t}\n\n\t.article-detail {\n\t\tpadding-top: 0;\n\t\tpadding-bottom: calc(120rpx + env(safe-area-inset-bottom));\n\t\tbackground-color: #e2e2e2;\n\t}\n\n\t.articleHead {\n\t\t.media-container {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tpadding: 24rpx 24rpx 0rpx 24rpx;\n\t\t\tbackground-color: #e2e2e2;\n\t\t\t// margin-bottom: 20rpx;\n\t\t\tborder-radius: 12rpx;\n\t\t\t\n\t\t\t// 视频播放区域\n\t\t\t.articleVideo {\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 422rpx;\n\t\t\t\tborder-radius: 8rpx;\n\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\tmargin-bottom: 20rpx;\n\t\t\t\toverflow: hidden;\n\t\t\t\t\n\t\t\t\t.video-player {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tobject-fit: contain;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 视频加载状态\n\t\t\t\t.video-loading {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tz-index: 2;\n\t\t\t\t\tbackground-color: rgba(0, 0, 0, 0.1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 视频错误状态\n\t\t\t\t.video-error {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tz-index: 2;\n\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\t\n\t\t\t\t\ttext {\n\t\t\t\t\t\tmargin-top: 20rpx;\n\t\t\t\t\t\tcolor: #999999;\n\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.articleImages {\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 100%;\n\t\t\t\tborder-radius: 8rpx;\n\t\t\t\toverflow: hidden;\n\t\t\t\tmargin-bottom: 20rpx;\n\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\n\t\t\t\t.image-grid {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-wrap: wrap;\n\t\t\t\t\tpadding: 4rpx;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t\n\t\t\t\t\t.image-grid-item {\n\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\toverflow: hidden;\n\t\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\t\tmargin: 4rpx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 单张图片\n\t\t\t\t\t\t&.single-image {\n\t\t\t\t\t\t\twidth: calc(100% - 8rpx);\n\t\t\t\t\t\t\theight: 400rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 两张图片\n\t\t\t\t\t\t&.double-image {\n\t\t\t\t\t\t\twidth: calc(50% - 8rpx);\n\t\t\t\t\t\t\theight: 300rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 三张图片\n\t\t\t\t\t\t&.triple-image {\n\t\t\t\t\t\t\twidth: calc(33.33% - 8rpx);\n\t\t\t\t\t\t\theight: 200rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 九宫格布局\n\t\t\t\t\t\t&.grid-image {\n\t\t\t\t\t\t\twidth: calc(33.33% - 8rpx);\n\t\t\t\t\t\t\theight: 200rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\t\tobject-fit: cover;\n\t\t\t\t\t\t\ttransition: opacity 0.3s ease;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.image-placeholder {\n\t\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\t\ttop: 0;\n\t\t\t\t\t\t\tleft: 0;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttext {\n\t\t\t\t\t\t\t\tmargin-top: 10rpx;\n\t\t\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\t\t\tcolor: #999;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.more-images {\n\t\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\t\ttop: 0;\n\t\t\t\t\t\t\tleft: 0;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\t\tbackground-color: rgba(0, 0, 0, 0.5);\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttext {\n\t\t\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\t\t\tfont-size: 32rpx;\n\t\t\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.image-counter {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tright: 20rpx;\n\t\t\t\t\tbackground-color: rgba(0, 0, 0, 0.5);\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tpadding: 4rpx 12rpx;\n\t\t\t\t\tborder-radius: 20rpx;\n\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.articleContent {\n\t\tpadding: 30rpx;\n\t\tfont-size: 28rpx;\n\t\tline-height: 1.8;\n\t\tbackground-color: #fff;\n\t\tmargin: 0 24rpx;\n\t\tborder-radius: 12rpx;\n\t\t\n\t\tmin-height: 24rpx; /* 添加最小高度，确保即使内容为空也有高度 */\n\t\tdisplay: block; /* 确保始终显示 */\n\t\t\n\t\t.articleText {\n\t\t\tpadding: 0;\n\t\t\tcolor: #333;\n\t\t\tword-break: break-word;\n\t\t\tmin-height: 1.8em; /* 添加最小高度 */\n\t\t\tpadding: 0 24rpx;\n\t\t\t\n\t\t\t.call-text-button {\n\t\t\t\tcolor: #0066cc;\n\t\t\t\tmargin-left: 10rpx;\n\t\t\t\tcursor: pointer;\n\t\t\t\tdisplay: inline-flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tgap: 4rpx;\n\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t/* 手机号链接样式（去除蓝色和下划线） */\n\t\t\t:deep(.phone-link) {\n\t\t\t\tcolor: inherit !important; /* 继承正常文本颜色 */\n\t\t\t\ttext-decoration: none !important; /* 去除下划线 */\n\t\t\t\tpadding: 2rpx 4rpx !important;\n\t\t\t\tborder-radius: 4rpx !important;\n\t\t\t\ttransition: all 0.2s ease !important;\n\t\t\t\tcursor: pointer !important;\n\t\t\t\t\t\t\t\t\n\t\t\t\t/* 点击时的反馈效果 */\n\t\t\t\t&:active {\n\t\t\t\t\tbackground-color: rgba(0, 0, 0, 0.05) !important; /* 淡灰色背景 */\n\t\t\t\t\ttransform: scale(0.98) !important;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t/* rich-text组件样式优化 */\n\t\t\t.rich-text-content {\n\t\t\t\tword-break: break-word;\n\t\t\t\tline-height: 1.6;\n\t\t\t\t/* 小程序中确保点击事件能正常触发 */\n\t\t\t\tpointer-events: auto;\n\t\t\t\t\t\t\t\t\n\t\t\t\t/* 确保span元素可以正常点击 */\n\t\t\t\t:deep(span) {\n\t\t\t\t\t-webkit-tap-highlight-color: rgba(57, 155, 254, 0.2);\n\t\t\t\t\ttap-highlight-color: rgba(57, 155, 254, 0.2);\n\t\t\t\t\tpointer-events: auto;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t/* 备用方案样式 */\n\t\t\t.phone-text-fallback {\n\t\t\t\tcursor: pointer;\n\t\t\t\tpadding: 4rpx;\n\t\t\t\tborder-radius: 4rpx;\n\t\t\t\t\t\t\t\t\n\t\t\t\t&:active {\n\t\t\t\t\tbackground-color: rgba(57, 155, 254, 0.1);\n\t\t\t\t\topacity: 0.8;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\n\n\t.footer {\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground-color: #fff;\n\t\tborder-top: 1px solid $pyq-border-color-translucent;\n\t\tpadding-bottom: env(safe-area-inset-bottom);\n\n\t\t.footer-content {\n\t\t\tdisplay: flex;\n\t\t\tpadding: 16rpx 24rpx;\n\t\t\theight: 120rpx;\n\t\t\tfont-size: 24rpx;\n\t\t\tcolor: $pyq-text-color-body;\n\n\t\t\t.action-item {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\t//左边间距\n\t\t\t\tmargin-left: 28rpx;\n\n\t\t\t\t.text {\n\t\t\t\t\tmargin-top: 8rpx;\n\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t}\n\n\t\t\t\t&:active {\n\t\t\t\t\topacity: 0.7;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* 添加组件之间的间距 */\n\t\t\t:deep(fenxiang-zujian) {\n\t\t\t\tmargin-right: 48rpx;\n\t\t\t}\n\n\t\t\t.call-btn {\n\t\t\t\tflex: 1;\n\t\t\t\theight: 80rpx;\n\t\t\t\tline-height: 80rpx;\n\t\t\t\ttext-align: center;\n\t\t\t\tbackground-color: $pyq-vi-color;\n\t\t\t\tcolor: #fff;\n\t\t\t\tborder-radius: 8rpx;\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tfont-weight: 500;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tmargin: auto 0; /* 添加上下外边距为auto，实现垂直居中 */\n\n\t\t\t\t&:active {\n\t\t\t\t\topacity: 0.8;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.custom-play-pause {\n\t\tposition: absolute;\n\t\t\t\t\ttop: 20rpx;\n\t\tright: 20rpx;\n\t\tbackground-color: rgba(0, 0, 0, 0.6);\n\t\tcolor: white;\n\t\tz-index: 10;\n\t\twidth: auto;\n\t\tmin-width: 120rpx;\n\t\tpadding: 8rpx 20rpx;\n\t\tborder-radius: 30rpx;\n\t\tfont-size: 26rpx;\n\t\ttext-align: center;\n\t\tborder: 1px solid rgba(255,255,255,0.2);\n\t\t\n\t\t&:active {\n\t\t\tbackground-color: rgba(0, 0, 0, 0.8);\n\t\t}\n\t}\n\n\t.article-info {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 0rpx 24rpx 15rpx;\n\t\tbackground-color: #fff;\n\t\tmargin: 0;\n\t\tborder-radius: 0;\n\t\tbox-shadow: none;\n\t\tjustify-content: flex-start; /* 修改为靠左对齐 */\n\t\tflex-wrap: wrap; /* 添加换行显示 */\n\t\t\n\t\t.info-item {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tmargin-right: 20rpx; /* 统一使用margin-right */\n\t\t\t\n\t\t\t&:first-child {\n\t\t\t\tmargin-left: 0;\n\t\t\t}\n\t\t\t\n\t\t\t&:last-child {\n\t\t\t\tmargin-right: 0;\n\t\t\t}\n\t\t\t\n\t\t\t.info-text {\n\t\t\t\tmargin-left: 8rpx;\n\t\t\t\tfont-size: 26rpx;\n\t\t\t\tcolor: #999;\n\t\t\t}\n\t\t}\n\t}\n\n\t.caozuo {\n\t\tdisplay: none;\n\t}\n\n\t.image-counter {\n\t\tposition: absolute;\n\t\tright: 20rpx;\n\t\ttop: 20rpx;\n\t\tbackground-color: rgba(0, 0, 0, 0.6);\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tpadding: 8rpx 20rpx;\n\t\t\t\t\tborder-radius: 30rpx;\n\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\tz-index: 2;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.2);\n\t\t\n\t\t&::before {\n\t\t\tcontent: '';\n\t\t\tdisplay: inline-block;\n\t\t\twidth: 24rpx;\n\t\t\theight: 24rpx;\n\t\t\tbackground-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/></svg>');\n\t\t\tbackground-size: contain;\n\t\t\tmargin-right: 8rpx;\n\t\t}\n\t}\n\n\t.manual-mode-indicator {\n\t\tposition: absolute;\n\t\tleft: 20rpx;\n\t\ttop: 20rpx;\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\n\t\tcolor: #fff;\n\t\tpadding: 6rpx 16rpx;\n\t\tborder-radius: 20rpx;\n\t\tfont-size: 24rpx;\n\t\tz-index: 2;\n\t\tdisplay: none; /* 隐藏手动模式提示 */\n\t\talign-items: center;\n\t\tgap: 6rpx;\n\t\tanimation: pulse 1.5s infinite;\n\t}\n\t\n\t@keyframes pulse {\n\t\t0% {\n\t\t\topacity: 0.7;\n\t\t}\n\t\t50% {\n\t\t\topacity: 1;\n\t\t}\n\t\t100% {\n\t\t\topacity: 0.7;\n\t\t}\n\t}\n\n\t// 添加旋转动画\n\t@keyframes spin {\n\t\t0% {\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\t\n\t// 客服按钮样式\n\t.customer-service-btn {\n\t\tposition: fixed;\n\t\tright: 30rpx;\n\t\tbottom: 180rpx;\n\t\tz-index: 100;\n\t\tbackground-color: #FF4D4F; // 红色背景\n\t\tcolor: #ffffff;\n\t\tborder-radius: 50rpx;\n\t\tpadding: 16rpx 30rpx;\n\t\tfont-size: 28rpx;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\tbox-shadow: 0 4rpx 12rpx rgba(255, 77, 79, 0.3);\n\t\tborder: none;\n\t\tline-height: 1.5;\n\t\t\n\t\t&::after {\n\t\t\tborder: none;\n\t\t}\n\t\t\n\t\ttext {\n\t\t\tmargin-left: 10rpx;\n\t\t}\n\t\t\n\t\t&:active {\n\t\t\ttransform: scale(0.95);\n\t\t\topacity: 0.9;\n\t\t}\n\t}\n\n\n\n\t/* 添加类目信息样式 */\n\t.category-info {\n\t\tpadding: 20rpx 24rpx 16rpx;\n\t\tbackground-color: #fff;\n\t\t\n\t\t.category-tag {\n\t\t\tdisplay: inline-flex;\n\t\t\talign-items: center;\n\t\t\tpadding: 8rpx 20rpx;\n\t\t\tbackground-color: rgba(57, 155, 254, 0.1);\n\t\t\tborder-radius: 24rpx;\n\t\t\t\n\t\t\ttext {\n\t\t\t\tfont-size: 26rpx;\n\t\t\t\tcolor: #399bfe;\n\t\t\t\tmargin-left: 8rpx;\n\t\t\t\tfont-weight: 500;\n\t\t\t}\n\t\t}\n\t}\n\n\t\n\n\t.category-name {\n\t\tfont-size: 32rpx;\n\t}\n\n\t.category-name1 {\n\t\tcolor: #399bfe;\n\t}\n\n\t.load-more {\n\t\tpadding: 20rpx 0;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\t\n\t/* 点赞相关样式 */\n\t.like-item {\n\t\tcursor: pointer;\n\t\ttransition: all 0.2s;\n\t\tposition: relative;\n\t\t\n\t\t&:active {\n\t\t\ttransform: scale(1.1);\n\t\t}\n\t}\n\t\n\t.info-text.liked {\n\t\tcolor: #ff6b6b;\n\t}\n\t\n\t.liked-text {\n\t\tcolor: #ff6b6b;\n\t}\n\t\n\t/* 点赞动画 */\n\t@keyframes like-animation {\n\t\t0% {\n\t\t\ttransform: scale(1);\n\t\t}\n\t\t25% {\n\t\t\ttransform: scale(1.2);\n\t\t}\n\t\t50% {\n\t\t\ttransform: scale(0.95);\n\t\t}\n\t\t75% {\n\t\t\ttransform: scale(1.1);\n\t\t}\n\t\t100% {\n\t\t\ttransform: scale(1);\n\t\t}\n\t}\n\t\n\t.like-animation {\n\t\tanimation: like-animation 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\t}\n\t\n\t/* 点赞图标动画 */\n\t@keyframes heart-beat {\n\t\t0% {\n\t\t\ttransform: scale(1);\n\t\t}\n\t\t15% {\n\t\t\ttransform: scale(1.3);\n\t\t}\n\t\t30% {\n\t\t\ttransform: scale(1);\n\t\t}\n\t\t45% {\n\t\t\ttransform: scale(1.2);\n\t\t}\n\t\t60% {\n\t\t\ttransform: scale(1);\n\t\t}\n\t\t100% {\n\t\t\ttransform: scale(1);\n\t\t}\n\t}\n\t\n\t.action-item[data-action=\"like\"] uni-icons,\n\t.like-item uni-icons {\n\t\ttransition: transform 0.2s ease;\n\t}\n\t\n\t.action-item[data-action=\"like\"]:active uni-icons,\n\t.like-item:active uni-icons {\n\t\ttransform: scale(1.2);\n\t}\n\t\n\t.action-item[data-action=\"like\"].like-animation uni-icons,\n\t.like-item.like-animation uni-icons {\n\t\tanimation: heart-beat 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\t}\n\n\t.custom-rate-control {\n\t\tposition: absolute;\n\t\ttop: 20rpx;\n\t\tleft: 20rpx;\n\t\tbackground-color: rgba(0, 0, 0, 0.6);\n\t\tcolor: white;\n\t\tz-index: 10;\n\t\twidth: auto;\n\t\tmin-width: 120rpx;\n\t\tpadding: 8rpx 20rpx;\n\t\tborder-radius: 30rpx;\n\t\tfont-size: 26rpx;\n\t\ttext-align: center;\n\t\tborder: 1px solid rgba(255,255,255,0.2);\n\t\t\n\t\t&:active {\n\t\t\tbackground-color: rgba(0, 0, 0, 0.8);\n\t\t}\n\t}\n\n\t/* 底部操作栏样式 */\n\t.article-actions {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 20rpx 30rpx;\n\t\tborder-top: 1px solid #f0f0f0;\n\t\tbackground-color: #fff;\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tz-index: 100;\n\t\tbox-shadow: 0 -2rpx 10rpx rgba(0, 0, 0, 0.05);\n\t}\n\n\t.left-actions, .right-actions {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.left-actions {\n\t\tflex: 1;\n\t}\n\n\t.info-item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-right: 0rpx;\n\t\tcolor: #999;\n\t}\n\n\t.info-text {\n\t\tfont-size: 24rpx;\n\t\tmargin-left: 8rpx;\n\t}\n\n\t.right-actions {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.action-item {\n\t\tmargin-right: 20rpx;\n\t}\n\n\t.call-btn {\n\t\tbackground-color: #399bfe;\n\t\tcolor: #fff;\n\t\tpadding: 10rpx 30rpx;\n\t\tborder-radius: 30rpx;\n\t\tfont-size: 28rpx;\n\t}\n\n\t/* 在组件的<style>部分的末尾添加 */\n\t:deep(.icon) {\n\t\tfont-family: \"icon\" !important;\n\t}\n\n\t/* 添加图片底部信息栏样式 */\n\t.image-info-bar {\n\t\tposition: absolute;\n\t\tbottom: 20rpx;\n\t\tright: 20rpx;\n\t\tbackground-color: rgba(0, 0, 0, 0.5);\n\t\tdisplay: inline-table;\n\t\twidth: auto;\n\t\ttext-align: right;\n\t\tpadding: 10rpx 20rpx;\n\t\tcolor: #fff;\n\t\tz-index: 2;\n\t\tborder-radius: 8rpx;\n\t\t\n\t\t.info-item {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: flex-end;\n\t\t\tmargin-bottom: 10rpx;\n\t\t\t\n\t\t\t&:last-child {\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\t\t\t\n\t\t\t.info-label {\n\t\t\t\tfont-size: 22rpx;\n\t\t\t\tcolor: #ffffff;\n\t\t\t\tmargin-right: 4rpx;\n\t\t\t}\n\t\t\t\n\t\t\t.info-text {\n\t\t\t\tfont-size: 22rpx;\n\t\t\t\tcolor: #ffffff;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* 添加图片网格样式 */\n\t.image-grid {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\twidth: 100%;\n\t\tz-index: 1;\n\t\tposition: relative;\n\t\t\n\t\t.image-grid-item {\n\t\t\tposition: relative;\n\t\t\twidth: calc(33.33% - 4rpx);\n\t\t\theight: 240rpx;\n\t\t\tmargin: 2rpx;\n\t\t\toverflow: hidden;\n\t\t\tbackground-color: #f5f5f5;\n\t\t\t\n\t\t\t// 特殊处理单图的情况\n\t\t\t&:first-child:last-child {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 500rpx;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\t\n\t\t\timage {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\ttransition: opacity 0.5s ease;\n\t\t\t}\n\t\t\t\n\t\t\t.image-placeholder {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\n\t\t\t\ttext {\n\t\t\t\t\tmargin-top: 20rpx;\n\t\t\t\t\tcolor: #999999;\n\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* 更多图片指示器 */\n\t\t\t.more-images {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\talign-items: center;\n\t\t\t\tbackground-color: rgba(0, 0, 0, 0.5);\n\t\t\t\t\n\t\t\t\ttext {\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tfont-size: 40rpx;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/* 新的元信息显示区域 */\n\t.article-meta-info {\n\t\tdisplay: flex;\n\t\tflex-wrap: nowrap;\n\t\tpadding: 24rpx 24rpx 24rpx 24rpx;\n\t\tbackground-color: #fff;\n\t\tborder-bottom: 1px solid #eaeaea;\n\t\tposition: relative;\n\t\tjustify-content: flex-start;\n\t\talign-items: center;\n\t\toverflow-x: auto;\n\t\t-webkit-overflow-scrolling: touch;\n\t\tmargin: 0 24rpx 0rpx 24rpx;\n\t\tborder-radius: 12rpx;\n\t\t\n\t\t/* 左侧蓝色指示条 */\n\t\t&::before {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\ttop: 50%;\n\t\t\ttransform: translateY(-50%);\n\t\t\twidth: 6rpx;\n\t\t\theight: 32rpx;\n\t\t\tbackground-color: #399bfe;\n\t\t\tborder-radius: 0 4rpx 4rpx 0;\n\t\t\tmargin-left: 20rpx;\n\t\t}\n\t\t\n\t\t.meta-item {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\twhite-space: nowrap;\n\t\t\tpadding: 0 16rpx;\n\t\t\tflex-shrink: 0;\n\t\t\theight: 50rpx;\n\t\t\tline-height: 50rpx; /* 添加行高确保文字垂直居中 */\n\t\t\t\n\t\t\tuni-icons {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\theight: 36rpx; /* 固定图标容器高度 */\n\t\t\t}\n\t\t\t\n\t\t\ttext {\n\t\t\t\tfont-size: 26rpx;\n\t\t\t\tcolor: #666;\n\t\t\t\tmargin-left: 10rpx;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tvertical-align: middle; /* 确保文本垂直居中 */\n\t\t\t\tline-height: 1; /* 重置文本行高 */\n\t\t\t}\n\t\t\t\n\t\t\t&.date {\n\t\t\t\tpadding-left: 20rpx;\n\t\t\t}\n\t\t\t\n\t\t\t&.category {\n\t\t\t\tbackground-color: rgba(57, 155, 254, 0.1);\n\t\t\t\tpadding: 0 16rpx;\n\t\t\t\tborder-radius: 24rpx;\n\t\t\t\theight: 44rpx; /* 调整高度与其他项一致 */\n\t\t\t\tmargin-left: 8rpx;\n\t\t\t\talign-self: center;\n\t\t\t\tborder: 1px solid rgba(57, 155, 254, 0.2);\n\t\t\t\t\n\t\t\t\ttext {\n\t\t\t\t\tcolor: #399bfe;\n\t\t\t\t\tfont-weight: 500;\n\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\tline-height: 44rpx; /* 确保文本在分类标签中居中 */\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* 添加分隔符 */\n\t\t.meta-divider {\n\t\t\twidth: 1px;\n\t\t\theight: 24rpx;\n\t\t\tbackground-color: #ddd;\n\t\t\tflex-shrink: 0;\n\t\t\tmargin: 0 8rpx; /* 增加左右间距 */\n\t\t}\n\t\t\n\t\t/* 添加滚动条样式 */\n\t\t&::-webkit-scrollbar {\n\t\t\tdisplay: none; /* 隐藏滚动条 */\n\t\t}\n\t}\n\n\t/* 详情图样式 */\n\t.article-detail-images {\n\t\tmargin: 20rpx 24rpx;\n\t\tpadding: 30rpx 10rpx;\n\t\tbackground-color: #fff;\n\t\tborder-radius: 12rpx;\n\t\t\n\t\t.detail-images-title {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tmargin-bottom: 30rpx;\n\t\t\tpadding: 0 40rpx;\n\t\t\t\n\t\t\ttext {\n\t\t\t\tfont-size: 30rpx;\n\t\t\t\tcolor: #333;\n\t\t\t\tmargin: 0 30rpx;\n\t\t\t\tfont-weight: 500;\n\t\t\t}\n\t\t\t\n\t\t\t.line {\n\t\t\t\theight: 1px;\n\t\t\t\tflex: 0.8;\n\t\t\t\tmax-width: 120rpx;\n\t\t\t\tbackground-color: #ccc;\n\t\t\t}\n\t\t}\n\t\t\n\t\t.detail-images-container {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\t\n\t\t\t.detail-image-wrapper {\n\t\t\t\tmargin-bottom: 1rpx;\n\t\t\t\tposition: relative;\n\t\t\t\tbackground-color: #f9f9f9;\n\t\t\t\tborder-radius: 0; /* Changed from 8rpx to 0 */\n\t\t\t\toverflow: hidden;\n\t\t\t\t\n\t\t\t\t&:last-child {\n\t\t\t\t\tmargin-bottom: 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.detail-image {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tborder-radius: 0; /* Changed from 8rpx to 0 */\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/* 浮动分享按钮 */\n\t.float-share-btn {\n\t\tdisplay: none;\n\t}\n\t\n\t/* 分享面板 */\n\t.float-share-panel {\n\t\tdisplay: none;\n\t}\n\n\t/* 添加分享按钮样式 */\n\t.share-button {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tmargin-right: 48rpx;\n\t\tbackground: transparent;\n\t\tborder: none;\n\t\tpadding: 0;\n\t\tline-height: normal;\n\t\theight: auto;\n\t\tfont-size: inherit;\n\t\tcolor: inherit;\n\n\t\t&::after {\n\t\t\tborder: none;\n\t\t}\n\n\t\t.text {\n\t\t\tmargin-top: 8rpx;\n\t\t\tfont-size: 24rpx;\n\t\t}\n\n\t\t&:active {\n\t\t\topacity: 0.7;\n\t\t}\n\t}\n\t\n\t/* 更新action-item按钮样式，适用于普通按钮和open-type按钮 */\n\tbutton.action-item {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tmargin-right: 48rpx;\n\t\tbackground: transparent;\n\t\tborder: none;\n\t\tpadding: 0;\n\t\tline-height: normal;\n\t\theight: auto;\n\t\tfont-size: inherit;\n\t\tcolor: inherit;\n\t\t\n\t\t&::after {\n\t\t\tborder: none;\n\t\t}\n\t\t\n\t\t.text {\n\t\t\tmargin-top: 8rpx;\n\t\t\tfont-size: 24rpx;\n\t\t}\n\t\t\n\t\t&:active {\n\t\t\topacity: 0.7;\n\t\t}\n\t}\n\n\n\t\n\n\n\t\t\t\n\n\n\t// 添加补充的加载组件样式\n\t.video-loading :deep(.uni-load-more) {\n\t\tbackground-color: transparent;\n\t}\n\n\t.video-loading :deep(.uni-load-more__text) {\n\t\tcolor: #fff;\n\t\ttext-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);\n\t}\n\n\t/* 添加渐显动画 */\n\t.fade-in-animation {\n\t\tanimation: fadeIn 0.4s ease-in-out;\n\t}\n\t\n\t@keyframes fadeIn {\n\t\tfrom { opacity: 0; }\n\t\tto { opacity: 1; }\n\t}\n\n\t/* 添加自定义加载动画样式与首页一致 */\n\t.custom-loading-container {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground-color: #e2e2e2;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tz-index: 9999;\n\t\t\n\t\t.loading-spinner {\n\t\t\tanimation: rotate 1.5s linear infinite;\n\t\t}\n\t\t\n\t\t.loading-text {\n\t\t\tmargin-top: 30rpx;\n\t\t\tcolor: #666;\n\t\t\tfont-size: 28rpx;\n\t\t}\n\t}\n\t\n\t@keyframes rotate {\n\t\tfrom { transform: rotate(0deg); }\n\t\tto { transform: rotate(360deg); }\n\t}\n\n\n\n\t.image-grid .image-grid-item .image-placeholder {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: #f5f5f5;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tborder-radius: 8rpx;\n\t\tz-index: 2;\n\t}\n\n\t.image-grid .image-grid-item .image-placeholder.loading uni-icons {\n\t\tanimation: spin 1.5s linear infinite;\n\t}\n\n\t@keyframes spin {\n\t\t0% { transform: rotate(0deg); }\n\t\t100% { transform: rotate(360deg); }\n\t}\n\n\t.image-grid .image-grid-item .image-placeholder text {\n\t\tfont-size: 22rpx;\n\t\tcolor: #999;\n\t\tmargin-top: 8rpx;\n\t}\n\n\t.detail-image-placeholder {\n\t\twidth: 100%;\n\t\tmin-height: 300rpx;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbackground-color: #f5f5f5;\n\t\tborder-radius: 0; /* Changed from 8rpx to 0 */\n\t\t\n\t\ttext {\n\t\t\tmargin-top: 20rpx;\n\t\t\tcolor: #999;\n\t\t\tfont-size: 26rpx;\n\t\t}\n\t\t\n\t\t&.loading {\n\t\t\tuni-icons {\n\t\t\t\tanimation: spin 1.5s linear infinite;\n\t\t\t}\n\t\t}\n\t}\n\n\t.detail-image {\n\t\twidth: 100%;\n\t\tborder-radius: 0; /* Changed from 8rpx to 0 */\n\t\tdisplay: block;\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.1);\n\t}\n\t\n\t/* 位置信息显示样式 */\n\t.location-info-section {\n\t\tmargin: 20rpx 24rpx;\n\t\tpadding: 24rpx 30rpx;\n\t\tbackground-color: #fff;\n\t\tborder-radius: 12rpx;\n\t\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.05);\n\t\tborder: 1px solid #f0f0f0;\n\t\t\n\t\t.location-header {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tmargin-bottom: 12rpx;\n\t\t\t\n\t\t\t.location-title {\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: #333;\n\t\t\t\tfont-weight: 500;\n\t\t\t\tmargin-left: 8rpx;\n\t\t\t}\n\t\t}\n\t\t\n\t\t.location-content {\n\t\t\t.location-address {\n\t\t\t\tfont-size: 26rpx;\n\t\t\t\tcolor: #666;\n\t\t\t\tline-height: 1.5;\n\t\t\t\tword-break: break-all;\n\t\t\t}\n\t\t}\n\t}\n</style>\n","import MiniProgramPage from 'D:/代码测试/wx2/pages/article/articleDetail.vue'\nwx.createPage(MiniProgramPage)"],"names":["useUserInfoStore","uni","ref","computed","uniCloud","err","onShareAppMessage","onShareTimeline","onBeforeUnmount","onPullDownRefresh","onMounted","onUnmounted","onReachBottom","onLoad","onShow","watch","nextTick"],"mappings":"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"}