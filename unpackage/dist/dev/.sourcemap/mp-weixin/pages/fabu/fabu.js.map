{"version":3,"file":"fabu.js","sources":["pages/fabu/fabu.vue","../../软件/HBuilderX/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvZmFidS9mYWJ1LnZ1ZQ"],"sourcesContent":["<script>\nexport default {\n\tname: 'Fabu'\n}\n</script>\n\n<script setup>\n\timport { ref, onMounted, nextTick, computed } from 'vue'\n\timport { useUserInfoStore } from '@/store/user.js'\n\timport { onLoad } from '@dcloudio/uni-app'  // 添加这一行\n\timport { fixImageUrl, getDefaultImage, getCurrentDomain } from '@/utils/domainConfig.js'  // 添加域名配置\n\n\t// Store & API\n\tconst userStore = useUserInfoStore( )\n\tconst articleApi = uniCloud.importObject( 'articleWx', { customUI: true })\n\tconst extStorageCo = uniCloud.importObject('fabuWx', { customUI: true })\n\t// 页面初始数据\n\tconst articleData = ref( null )\n\tconst categoryList = ref( [ ] )\n\tconst cateIndex = ref( 0 )\n\tconst imageList = ref([])\n\tconst uploadingCount = ref(0)\n\tconst locationInfo = ref( null )\n\tconst content = ref( '' )\n\tconst selectedCategory = ref( null )\n\tconst videoInfo = ref(null)\n\tconst textareaFocus = ref(false)\n\tconst contentTextarea = ref(null)\n\tconst payAmount = ref(0)\n\tconst videoLink = ref('')\n\tconst inputHeight = ref(170)\n\tconst selectionStart = ref(0)\n\tconst selectionEnd = ref(0)\n\tconst textareaElement = ref(null) // 记录DOM元素\n\tconst isInSelectionMode = ref(false) // 文本选择模式状态\n\t// 添加图片预览相关变量\n\tconst showImagePreview = ref(false)\n\tconst currentPreviewImage = ref('')\n\tconst previewImageIndex = ref(0)\n\t\n\t// 域名状态显示相关变量\n\tconst showDomainInfo = ref(false)\n\tconst domainStatus = ref({\n\t\tcurrentDomain: '',\n\t\timageCount: 0,\n\t\tfixedCount: 0\n\t})\n\n\t// 添加精确位置信息变量\n\tconst preciseLocationInfo = ref({\n\t\tlatitude: null,\n\t\tlongitude: null,\n\t\taccuracy: null,\n\t\taltitude: null,\n\t\tspeed: null,\n\t\ttimestamp: null,\n\t\tprovince: '',\n\t\tcity: '',\n\t\tdistrict: '',\n\t\tstreet: '',\n\t\tstreetNumber: '',\n\t\tpoiName: ''\n\t})\n\n\t// 计算选择的字符数\n\tconst selectedCharsCount = computed(() => {\n\t\treturn selectionEnd.value - selectionStart.value\n\t})\n\n\t// 图标生成相关\n\tconst iconCustomizing = ref(false)\n\tconst textOffsetX = ref(0)  // 文字X轴偏移量\n\tconst textOffsetY = ref(0)  // 文字Y轴偏移量\n\tconst textSize = ref(100)   // 文字大小百分比\n\tconst previewImageUrl = ref('') // 预览图URL\n\n\t// 当前正在编辑的分类\n\tlet currentEditingCategory = null;\n\n\t// 添加以下常用文本功能相关的变量\n\tconst commonPhrases = ref([\n\t\t'欢迎咨询',\n\t\t'全新产品',\n\t\t'限时优惠',\n\t\t'诚信交易',\n\t\t'支持自提'\n\t])\n\n\t// 添加表情符号相关的变量\n\tconst showEmojiPanel = ref(false)\n\tconst emojiGroups = ref([\n\t\t{\n\t\t\tname: '常用',\n\t\t\temojis: ['😊', '👍', '❤️', '👋', '🙏', '🔥', '💯', '👏', '🎉', '✨', '🌹', '💪', '🤝']\n\t\t},\n\t\t{\n\t\t\tname: '表情',\n\t\t\temojis: ['😀', '😄', '😁', '😆', '😅', '😂', '🤣', '😊', '😇', '🙂', '😉', '😌', '😍']\n\t\t},\n\t\t{\n\t\t\tname: '手势',\n\t\t\temojis: ['👍', '👎', '👌', '✌️', '🤞', '🤟', '🤙', '🤛', '🤜', '👊', '✊', '🤝', '👏']\n\t\t}\n\t])\n\tconst currentEmojiGroupIndex = ref(0)\n\n\t// 添加快捷输入常用词功能\n\t// 删除以下内容\n\t// const quickPhrases = ref([\n\t//   '欢迎咨询',\n\t//   '有现货',\n\t//   '支持自提',\n\t//   '全新正品',\n\t//   '包邮到家'\n\t// ])\n\t// const showQuickPhrases = ref(false)\n\t// const toggleQuickPhrases = () => {...}\n\t// const insertQuickPhrase = (phrase) => {...}\n\n\t// 显示快捷短语面板的状态\n\t// 删除以下内容\n\t// const showQuickPhrases = ref(false)\n\n\t// 切换快捷短语面板\n\t// 删除以下内容\n\t// const toggleQuickPhrases = () => {...}\n\n\t// 插入快捷短语\n\t// 删除以下内容\n\t// const insertQuickPhrase = (phrase) => {...}\n\n\t// 获取位置和分类\n\tconst getLocaAndCate = async ( ) => {\n\t\ttry {\n\t\t\t// 显示加载提示\n\t\t\tuni.showLoading({\n\t\t\t\ttitle: '加载中...',\n\t\t\t\tmask: false\n\t\t\t})\n\t\t\t\n\t\t\t// 获取高精度位置信息\n\t\t\tlet locationRes = await uni.getLocation({\n\t\t\t\ttype: 'gcj02',\n\t\t\t\thighAccuracyExpireTime: 10000, // 10秒超时\n\t\t\t\tisHighAccuracy: true, // 启用高精度定位\n\t\t\t\taltitude: true // 获取高度信息\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.error('获取位置失败:', err)\n\t\t\t\t// 如果获取位置失败，使用默认坐标\n\t\t\t\treturn { longitude: 116.397428, latitude: 39.90923 }\n\t\t\t})\n\t\t\t\n\t\t\t// 保存精确位置信息\n\t\t\tpreciseLocationInfo.value = {\n\t\t\t\tlatitude: locationRes.latitude,\n\t\t\t\tlongitude: locationRes.longitude,\n\t\t\t\taccuracy: locationRes.accuracy || 0,\n\t\t\t\taltitude: locationRes.altitude || 0,\n\t\t\t\tspeed: locationRes.speed || 0,\n\t\t\t\ttimestamp: Date.now(),\n\t\t\t\tprovince: '',\n\t\t\t\tcity: '',\n\t\t\t\tdistrict: '',\n\t\t\t\tstreet: '',\n\t\t\t\tstreetNumber: '',\n\t\t\t\tpoiName: ''\n\t\t\t}\n\t\t\t\n\t\t\t// 调用API获取分类和地址信息\n\t\t\tconst res = await articleApi.addReady(`${locationRes.longitude},${locationRes.latitude}`)\n\t\t\tconsole.log('获取分类和地址信息成功:', res)\n\t\t\t\n\t\t\t// 设置位置信息\n\t\t\tlocationInfo.value = {\n\t\t\t\taddress: res.address || '未知地址',\n\t\t\t\tdistrict: res.district || '未知区域'\n\t\t\t}\n\t\t\t\n\t\t\t// 解析详细地址信息\n\t\t\tif (res.address && res.address !== '未知地址') {\n\t\t\t\tparseDetailedAddress(res.address, res.district)\n\t\t\t}\n\t\t\t\n\t\t\t// 如果获取到了区域信息，则尝试根据区域创建或获取分类\n\t\t\tif (res.district && res.district !== '未知区域') {\n\t\t\t\ttry {\n\t\t\t\t\t// 调用云函数创建或获取基于区域的分类\n\t\t\t\t\tconst categoryResult = await extStorageCo.processCategoryFromDistrict(res.district)\n\t\t\t\t\tconsole.log('区域分类处理结果:', categoryResult)\n\t\t\t\t\t\n\t\t\t\t\t// 如果成功创建或获取了基于位置的分类，重新获取分类列表\n\t\t\t\t\tif (categoryResult.code === 0 && categoryResult.data) {\n\t\t\t\t\t\t// 重新获取最新的分类列表\n\t\t\t\t\t\tconst updatedCateRes = await articleApi.addReady(`${locationRes.longitude},${locationRes.latitude}`)\n\t\t\t\t\t\tif (updatedCateRes.cateList && updatedCateRes.cateList.length > 0) {\n\t\t\t\t\t\t\tres.cateList = updatedCateRes.cateList\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (categoryError) {\n\t\t\t\t\tconsole.error('处理区域分类失败:', categoryError)\n\t\t\t\t\t// 继续使用原有分类列表，不中断流程\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// 设置分类列表 - 只保留当前位置的分类\n\t\t\tif (res.cateList && res.cateList.length > 0) {\n\t\t\t\t// 筛选出当前区域的位置分类\n\t\t\t\tconst locationBasedCategories = res.cateList.filter(cate => \n\t\t\t\t\tcate.is_location_based && cate.location_district === res.district\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\t// 如果有本地区分类，则只显示它们\n\t\t\t\tif (locationBasedCategories.length > 0) {\n\t\t\t\t\tcategoryList.value = locationBasedCategories.map(cate => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...cate,\n\t\t\t\t\t\t\ticon: cate.cate_img || getDefaultCategoryIcon(cate.cate_name)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 选择第一个位置分类\n\t\t\t\t\tselectedCategory.value = categoryList.value[0]._id\n\t\t\t\t\tcateIndex.value = 0\n\t\t\t\t\t\n\t\t\t\t\t// 自动为位置分类生成图标（如果需要）\n\t\t\t\t\tconst firstCategory = categoryList.value[0]\n\t\t\t\t\tif (!firstCategory.cate_img || firstCategory.cate_img.includes('default')) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconsole.log('为位置分类自动生成图标:', firstCategory.cate_name)\n\t\t\t\t\t\t\tconst iconResult = await generateCategoryIcon(firstCategory.cate_name, firstCategory._id)\n\t\t\t\t\t\t\tif (iconResult && iconResult.iconURL) {\n\t\t\t\t\t\t\t\t// 更新UI中的图标\n\t\t\t\t\t\t\t\tfirstCategory.icon = iconResult.iconURL\n\t\t\t\t\t\t\t\t// 确保分类列表中的图标也被更新\n\t\t\t\t\t\t\t\tcategoryList.value[0].icon = iconResult.iconURL\n\t\t\t\t\t\t\t\tcategoryList.value[0].cate_img = iconResult.iconURL\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (iconError) {\n\t\t\t\t\t\t\tconsole.error('自动生成位置分类图标失败:', iconError)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 如果没有位置分类，尝试创建一个\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (res.district && res.district !== '未知区域') {\n\t\t\t\t\t\t\t// 创建当前位置的分类\n\t\t\t\t\t\t\tconst createResult = await extStorageCo.createLocationCategory({\n\t\t\t\t\t\t\t\tdistrict: res.district,\n\t\t\t\t\t\t\t\taddress: res.address\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (createResult && createResult.categoryId) {\n\t\t\t\t\t\t\t\t// 创建成功，添加到分类列表\n\t\t\t\t\t\t\t\tconst newCategory = {\n\t\t\t\t\t\t\t\t\t_id: createResult.categoryId,\n\t\t\t\t\t\t\t\t\tcate_name: res.district,\n\t\t\t\t\t\t\t\t\tis_location_based: true,\n\t\t\t\t\t\t\t\t\tlocation_district: res.district,\n\t\t\t\t\t\t\t\t\ticon: getDefaultCategoryIcon(res.district)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcategoryList.value = [newCategory]\n\t\t\t\t\t\t\t\tselectedCategory.value = newCategory._id\n\t\t\t\t\t\t\t\tcateIndex.value = 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 为新分类生成图标\n\t\t\t\t\t\t\t\thandleGenerateIcon(newCategory)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// 创建失败，使用默认分类\n\t\t\t\t\t\t\t\tsetDefaultCategory()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// 没有位置信息，使用默认分类\n\t\t\t\t\t\t\tsetDefaultCategory()\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('创建位置分类失败:', e)\n\t\t\t\t\t\tsetDefaultCategory()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn('未获取到分类列表或分类列表为空')\n\t\t\t\tsetDefaultCategory()\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('获取位置和分类失败:', error)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '获取分类失败，请重试',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2000\n\t\t\t})\n\t\t\t\n\t\t\t// 设置默认值\n\t\t\tlocationInfo.value = {\n\t\t\t\taddress: '未知地址',\n\t\t\t\tdistrict: '未知区域'\n\t\t\t}\n\t\t\tsetDefaultCategory()\n\t\t} finally {\n\t\t\tuni.hideLoading()\n\t\t}\n\t}\n\t\n\t// 设置默认分类的辅助函数\n\tconst setDefaultCategory = () => {\n\t\tcategoryList.value = [{ \n\t\t\t_id: 'default', \n\t\t\tcate_name: '默认分类',\n\t\t\ticon: '/static/images/category/default.png'\n\t\t}]\n\t\tselectedCategory.value = 'default'\n\t\tcateIndex.value = 0\n\t}\n\n\t// 解析详细地址信息\n\tconst parseDetailedAddress = (address, district) => {\n\t\ttry {\n\t\t\t// 使用正则表达式解析地址\n\t\t\tconst addressParts = {\n\t\t\t\tprovince: '',\n\t\t\t\tcity: '',\n\t\t\t\tdistrict: district || '',\n\t\t\t\tstreet: '',\n\t\t\t\tstreetNumber: '',\n\t\t\t\tpoiName: ''\n\t\t\t}\n\t\t\t\n\t\t\t// 提取省份信息\n\t\t\tconst provinceMatch = address.match(/(中国)?(.+?省|中国.+?自治区|中国.+?市)/)\n\t\t\tif (provinceMatch) {\n\t\t\t\taddressParts.province = provinceMatch[2] || provinceMatch[1]\n\t\t\t}\n\t\t\t\n\t\t\t// 提取城市信息\n\t\t\tconst cityMatch = address.match(/(省|市|自治区)(.+?市)/)\n\t\t\tif (cityMatch) {\n\t\t\t\taddressParts.city = cityMatch[2]\n\t\t\t}\n\t\t\t\n\t\t\t// 提取街道信息\n\t\t\tconst streetMatch = address.match(/(区|县)(.+?)(街道|镇|乡)/)\n\t\t\tif (streetMatch) {\n\t\t\t\taddressParts.street = streetMatch[2] + streetMatch[3]\n\t\t\t}\n\t\t\t\n\t\t\t// 提取POI信息（具体地名）\n\t\t\tconst poiMatch = address.match(/(街道|镇|乡)(.+)/)\n\t\t\tif (poiMatch) {\n\t\t\t\taddressParts.poiName = poiMatch[2].trim()\n\t\t\t}\n\t\t\t\n\t\t\t// 更新精确位置信息\n\t\t\tpreciseLocationInfo.value = {\n\t\t\t\t...preciseLocationInfo.value,\n\t\t\t\t...addressParts\n\t\t\t}\n\t\t\t\n\t\t\tconsole.log('解析的详细地址信息:', addressParts)\n\t\t} catch (error) {\n\t\t\tconsole.error('解析地址信息失败:', error)\n\t\t}\n\t}\n\n\t// 重新定位\n\tconst relocate = async () => {\n\t\tuni.showToast({\n\t\t\ttitle: '正在重新定位...',\n\t\t\ticon: 'loading'\n\t\t})\n\t\t\n\t\ttry {\n\t\t\tawait getLocaAndCate()\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '定位成功',\n\t\t\t\ticon: 'success'\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '定位失败',\n\t\t\t\ticon: 'error'\n\t\t\t})\n\t\t}\n\t}\n\n\t// 简化地址显示\n\tconst getSimplifiedAddress = (address) => {\n\t\tif (!address || address === '未知地址') {\n\t\t\treturn ''\n\t\t}\n\t\t\n\t\t// 移除省份信息，保留主要地名\n\t\tlet simplified = address\n\t\t\n\t\t// 移除省份前缀\n\t\tsimplified = simplified.replace(/^.*?省/, '')\n\t\tsimplified = simplified.replace(/^.*?市/, '')\n\t\tsimplified = simplified.replace(/^.*?自治区/, '')\n\t\t\n\t\t// 如果地址过长，只保留前部分\n\t\tif (simplified.length > 20) {\n\t\t\t// 找到适合的截断点（按照行政区划或地标截断）\n\t\t\tconst breakPoints = ['县', '区', '镇', '街道', '乡']\n\t\t\tfor (const breakPoint of breakPoints) {\n\t\t\t\tconst index = simplified.indexOf(breakPoint)\n\t\t\t\tif (index !== -1 && index < 15) {\n\t\t\t\t\tsimplified = simplified.substring(0, index + breakPoint.length)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// 如果仍然过长，直接截断\n\t\t\tif (simplified.length > 20) {\n\t\t\t\tsimplified = simplified.substring(0, 18) + '...'\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn simplified\n\t}\n\n\t// 根据分类名称获取默认图标\n\tconst getDefaultCategoryIcon = (cateName) => {\n\t\t// 定义常见分类的默认图标映射\n\t\tconst iconMap = {\n\t\t\t'宠物用品': '/static/images/category/pet.png',\n\t\t\t'水杯餐具': '/static/images/category/tableware.png',\n\t\t\t'日用百货': '/static/images/category/daily.png',\n\t\t\t'清洁工具': '/static/images/category/cleaning.png',\n\t\t\t'收纳整理': '/static/images/category/storage.png',\n\t\t\t'文具教具': '/static/images/category/stationery.png',\n\t\t\t'畜牧农资': '/static/images/category/agriculture.png',\n\t\t\t'纸品湿巾': '/static/images/category/tissue.png',\n\t\t\t'个人护理': '/static/images/category/personal.png',\n\t\t\t'厨房烹饪': '/static/images/category/kitchen.png',\n\t\t\t'节庆礼品': '/static/images/category/gift.png',\n\t\t\t'图书乐器': '/static/images/category/book.png',\n\t\t\t'家庭清洁': '/static/images/category/home.png',\n\t\t\t'花卉园艺': '/static/images/category/garden.png',\n\t\t\t'锅具水壶': '/static/images/category/pot.png'\n\t\t}\n\t\t\n\t\t// 返回对应的图标，如果没有匹配项则返回默认图标\n\t\treturn iconMap[cateName] || getDefaultImage('default') // 使用域名配置中的默认图片路径\n\t}\n\n\t// 修改图片选择和上传方法\n\tconst chooseAndUploadImage = async () => {\n\t\ttry {\n\t\t\t// 移除图片数量限制检查\n\t\t\t// 选择图片，设置 sizeType 只包含 original 来选择原图\n\t\t\tconst chooseRes = await uni.chooseImage({\n\t\t\t\tcount: 9, // 保留此参数但不再做前置检查\n\t\t\t\tsizeType: ['original'], // 只使用原图\n\t\t\t\tsourceType: ['album', 'camera'],\n\t\t\t\tmediaType: ['image'] // 只选择图片，隐藏视频\n\t\t\t})\n\n\t\t\t// 上传所有选中的图片\n\t\t\tconst uploadPromises = chooseRes.tempFilePaths.map(async (filePath, index) => {\n\t\t\t\t// 创建临时图片对象并添加到预览列表\n\t\t\t\tconst newIndex = imageList.value.length\n\t\t\t\timageList.value.push({\n\t\t\t\t\tfileURL: '',\n\t\t\t\t\tthumbnailURL: filePath,\n\t\t\t\t\tprogress: 0\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t// 获取图片信息（宽高）用于水印大小调整\n\t\t\t\t\tconst imageInfo = await uni.getImageInfo({\n\t\t\t\t\t\tsrc: filePath\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\tconsole.error('获取图片尺寸信息失败:', err)\n\t\t\t\t\t\treturn { width: 0, height: 0 } // 失败时使用默认值\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 获取上传配置\n\t\t\t\t\tconst uploadOptions = await extStorageCo.getUploadFileOptions({\n\t\t\t\t\t\tcloudPath: `images/${userStore.userInfo.uid}/${Date.now()}-${newIndex}.jpg`,\n\t\t\t\t\t\tfileType: 'image',\n\t\t\t\t\t\tisOriginal: true,\n\t\t\t\t\t\tuserNickName: userStore.userInfo.nickName,\n\t\t\t\t\t\timageWidth: imageInfo.width, // 传递图片宽度\n\t\t\t\t\t\timageHeight: imageInfo.height // 传递图片高度\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 创建备用进度定时器（如果onProgressUpdate不工作）\n\t\t\t\t\tlet fallbackTimer = null;\n\t\t\t\t\tlet fallbackActive = true;\n\t\t\t\t\t\n\t\t\t\t\t// 启动备用进度动画 - 仅当实际进度回调未工作时使用\n\t\t\t\t\tfallbackTimer = setTimeout(function setupFallback() {\n\t\t\t\t\t\tif (!fallbackActive) return;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 获取当前进度\n\t\t\t\t\t\tconst currentProgress = imageList.value[newIndex]?.progress || 0;\n\t\t\t\t\t\tif (currentProgress >= 98) {\n\t\t\t\t\t\t\tfallbackActive = false;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 计算下一个进度值 - 缓慢上升，避免超过实际进度过多\n\t\t\t\t\t\tlet nextProgress;\n\t\t\t\t\t\tif (currentProgress < 30) {\n\t\t\t\t\t\t\tnextProgress = currentProgress + 5;\n\t\t\t\t\t\t} else if (currentProgress < 70) {\n\t\t\t\t\t\t\tnextProgress = currentProgress + 3;\n\t\t\t\t\t\t} else if (currentProgress < 90) {\n\t\t\t\t\t\t\tnextProgress = currentProgress + 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnextProgress = currentProgress + 0.5;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 更新进度，最大98%\n\t\t\t\t\t\timageList.value[newIndex].progress = Math.min(98, nextProgress);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 继续下一个更新\n\t\t\t\t\t\tfallbackTimer = setTimeout(setupFallback, 800);\n\t\t\t\t\t}, 500);\n\t\t\t\t\t\n\t\t\t\t\t// 执行上传\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\tconst uploadTask = uni.uploadFile({\n\t\t\t\t\t\t\t...uploadOptions.uploadFileOptions,\n\t\t\t\t\t\t\tfilePath: filePath,\n\t\t\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t\t\t// 取消备用定时器\n\t\t\t\t\t\t\t\tfallbackActive = false;\n\t\t\t\t\t\t\t\tclearTimeout(fallbackTimer);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 更新上传成功后的文件信息，使用域名修复函数\n\t\t\t\t\t\t\t\timageList.value[newIndex].progress = 100;\n\t\t\t\t\t\t\t\timageList.value[newIndex].fileURL = fixImageUrl(uploadOptions.fileURL);\n\t\t\t\t\t\t\t\timageList.value[newIndex].compressedURL = fixImageUrl(uploadOptions.compressedURL);\n\t\t\t\t\t\t\t\timageList.value[newIndex].thumbnailURL = fixImageUrl(uploadOptions.thumbnailURL);\n\t\t\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\t\t\t// 取消备用定时器\n\t\t\t\t\t\t\t\tfallbackActive = false;\n\t\t\t\t\t\t\t\tclearTimeout(fallbackTimer);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconsole.error(\"上传失败\", err);\n\t\t\t\t\t\t\t\timageList.value.splice(newIndex, 1);\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 尝试使用实际上传进度更新（如果平台支持）\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tuploadTask.onProgressUpdate((res) => {\n\t\t\t\t\t\t\t\tif (res && typeof res.progress === 'number') {\n\t\t\t\t\t\t\t\t\t// 收到实际进度，停用备用进度\n\t\t\t\t\t\t\t\t\tfallbackActive = false;\n\t\t\t\t\t\t\t\t\tclearTimeout(fallbackTimer);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// 更新实际进度，最大99%（保留1%给服务器处理阶段）\n\t\t\t\t\t\t\t\t\tconst actualProgress = Math.min(99, res.progress);\n\t\t\t\t\t\t\t\t\timageList.value[newIndex].progress = actualProgress;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (progressErr) {\n\t\t\t\t\t\t\tconsole.log('进度更新回调不可用，使用备用进度显示', progressErr);\n\t\t\t\t\t\t\t// 继续使用备用进度定时器\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// 处理单个图片上传错误\n\t\t\t\t\timageList.value.splice(newIndex, 1);\n\t\t\t\t\tconsole.error('上传图片错误:', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t// 等待所有上传完成\n\t\t\tawait Promise.all(uploadPromises);\n\t\t} catch (err) {\n\t\t\t// 仅在出错时显示提示\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '上传失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\tconsole.error('图片上传过程错误:', err);\n\t\t}\n\t}\n\n\t// 删除图片方法\n\tconst deleteImage = (index) => {\n\t\timageList.value.splice(index, 1)\n\t}\n\n\t// 修改视频选择方法，添加自动保存功能\n\tconst handleVideoLinkInput = (e) => {\n\t  // 在输入时自动验证并保存链接\n\t  const currentLink = videoLink.value.trim();\n\t  \n\t  // 如果链接为空，则清空视频信息\n\t  if (!currentLink) {\n\t    videoInfo.value = null;\n\t    return;\n\t  }\n\t  \n\t  // 简单验证链接格式，但不显示错误提示\n\t  const urlPattern = /^(https?:\\/\\/)?([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?$/;\n\t  if (!urlPattern.test(currentLink)) {\n\t    return; // 不符合链接格式，不保存\n\t  }\n\t  \n\t  // 设置视频链接\n\t  videoInfo.value = currentLink;\n\t  \n\t  // 提供轻微的反馈（可选）\n\t  uni.vibrateShort && uni.vibrateShort({ type: 'light' });\n\t}\n\n\t// 添加视频链接\n\tconst addVideoLink = () => {\n\t\tif (!validateVideoLink()) return\n\t\t\n\t\t// 如果已有视频，不允许再次添加\n\t\tif (videoInfo.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '只能添加一个视频',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2000\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// 设置视频链接\n\t\tvideoInfo.value = videoLink.value.trim()\n\t\t\n\t\t// 清空输入框\n\t\tvideoLink.value = ''\n\t\t\n\t\tuni.showToast({\n\t\t\ttitle: '视频链接已添加',\n\t\t\ticon: 'success',\n\t\t\tduration: 1500\n\t\t})\n\t}\n\n\t// 添加删除视频的方法\n\tconst deleteVideo = () => {\n\t\tvideoInfo.value = null\n\t}\n\n\t// 添加编辑模式相关变量\n\tconst isEditMode = ref(false)\n\tconst editArticleId = ref('')\n\n\t// 添加onLoad生命周期\n\tonLoad((options) => {\n\t\tconsole.log('页面加载参数:', options)\n\t\t// 检查是否是编辑模式\n\t\tif (options.mode === 'edit' && options.article_id) {\n\t\t\tisEditMode.value = true\n\t\t\teditArticleId.value = options.article_id\n\t\t\t// 先获取分类，再加载文章数据\n\t\t\tgetLocaAndCate().then(() => {\n\t\t\t\tloadArticleData()\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.error('获取分类失败:', err)\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '获取分类失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\t// 非编辑模式，只获取分类\n\t\t\tgetLocaAndCate().catch(err => {\n\t\t\t\tconsole.error('获取分类失败:', err)\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '获取分类失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t})\n\n\t// 加载文章数据\n\tconst loadArticleData = async () => {\n\t\ttry {\n\t\t\tuni.showLoading({\n\t\t\t\ttitle: '加载中...',\n\t\t\t\tmask: true\n\t\t\t})\n\t\t\t\n\t\t\tconst res = await articleApi.getArticleDetal(editArticleId.value)\n\t\t\t\n\t\t\tif (!res || !res.articleRes || !res.articleRes.data || !res.articleRes.data[0]) {\n\t\t\t\tthrow new Error('获取文章数据失败')\n\t\t\t}\n\t\t\t\n\t\t\tconst articleData = res.articleRes.data[0]\n\t\t\t\n\t\t\t// 设置文章内容\n\t\t\tcontent.value = articleData.content || ''\n\t\t\t\n\t\t\t// 设置分类\n\t\t\tif (articleData.cate_id) {\n\t\t\t\tselectedCategory.value = articleData.cate_id\n\t\t\t\tconst categoryIndex = categoryList.value.findIndex(cate => cate._id === articleData.cate_id)\n\t\t\t\tif (categoryIndex !== -1) {\n\t\t\t\t\tcateIndex.value = categoryIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// 设置图片列表，使用域名修复函数\n\t\t\tif (articleData.images && articleData.images.length > 0) {\n\t\t\t\timageList.value = articleData.images.map(img => ({\n\t\t\t\t\tfileURL: fixImageUrl(img.url || img),\n\t\t\t\t\tthumbnailURL: fixImageUrl(img.thumbnailURL || img.compressedURL || img.url || img),\n\t\t\t\t\tcompressedURL: fixImageUrl(img.compressedURL || img.url || img),\n\t\t\t\t\tprogress: 100\n\t\t\t\t}))\n\t\t\t}\n\t\t\t\n\t\t\t// 设置视频信息\n\t\t\tif (articleData.videoURL) {\n\t\t\t\tvideoInfo.value = articleData.videoURL\n\t\t\t}\n\t\t\t\n\t\t\t// 设置位置信息\n\t\t\tlocationInfo.value = {\n\t\t\t\taddress: articleData.address || '未知地址',\n\t\t\t\tdistrict: articleData.district || '未知区域'\n\t\t\t}\n\t\t\t\n\t\t} catch (err) {\n\t\t\tconsole.error('加载文章数据失败:', err)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '加载文章数据失败',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t} finally {\n\t\t\tuni.hideLoading()\n\t\t}\n\t}\n\n\t// 修改提交表单方法\n\tconst submitForm = async () => {\n\t\tif (!content.value.trim()) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '请输入内容',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\tif (!selectedCategory.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '请选择分类',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\t// 如果没有分类，尝试重新获取\n\t\t\tif (!categoryList.value.length || categoryList.value[0]._id === 'default') {\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '未能获取到分类信息，是否重新获取？',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tretryGetCategories()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tif (!locationInfo.value || !locationInfo.value.address) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '未能获取位置信息',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\tuni.showLoading({\n\t\t\ttitle: isEditMode.value ? '更新中...' : '发布中...',\n\t\t\tmask: false\n\t\t})\n\n\t\ttry {\n\t\t\t\t\t// 获取所有已上传完成的图片URL，使用域名修复函数\n\t\t\tconst uploadedImages = imageList.value\n\t\t\t\t.filter(img => img.fileURL && img.progress === 100)\n\t\t\t\t.map(img => ({\n\t\t\t\t\turl: fixImageUrl(img.fileURL),\n\t\t\t\t\tcompressedURL: fixImageUrl(img.compressedURL),\n\t\t\t\t\tthumbnailURL: fixImageUrl(img.thumbnailURL)\n\t\t\t\t}))\n\n\t\t\t// 直接使用videoURL字段\n\t\t\tconst videoURL = videoInfo.value || null\n\t\t\t\n\t\t\t// 获取选中的分类信息\n\t\t\tconst selectedCategoryInfo = categoryList.value.find(cate => cate._id === selectedCategory.value) || null\n\t\t\t// 检查是否是基于位置的分类\n\t\t\tconst isLocationBasedCategory = selectedCategoryInfo && selectedCategoryInfo.is_location_based === true\n\n\t\t\tconst params = {\n\t\t\t\tuser_id: userStore.userInfo.uid,\n\t\t\t\tcontent: content.value.trim(),\n\t\t\t\timages: uploadedImages,\n\t\t\t\tvideoURL: videoURL,\n\t\t\t\tcate_id: selectedCategory.value,\n\t\t\t\taddress: locationInfo.value.address || '未知地址',\n\t\t\t\tdistrict: locationInfo.value.district || '未知区域',\n\t\t\t\tuser_nickName: userStore.userInfo.nickName,\n\t\t\t\tuser_avatarUrl: userStore.userInfo.avatarUrl,\n\t\t\t\tuser_mobile: userStore.userInfo.mobile,\n\t\t\t\tpay_amount: payAmount.value || 0,\n\t\t\t\tis_location_based_category: isLocationBasedCategory,\n\t\t\t\tcategory_info: selectedCategoryInfo ? {\n\t\t\t\t\tname: selectedCategoryInfo.cate_name,\n\t\t\t\t\tis_location_based: selectedCategoryInfo.is_location_based || false,\n\t\t\t\t\tlocation_district: selectedCategoryInfo.location_district || null,\n\t\t\t\t\ticon: selectedCategoryInfo.icon || null,\n\t\t\t\t\tcate_img: selectedCategoryInfo.cate_img || selectedCategoryInfo.icon || null\n\t\t\t\t} : null\n\t\t\t}\n\n\t\t\tlet res\n\t\t\tif (isEditMode.value) {\n\t\t\t\t// 更新文章\n\t\t\t\tres = await articleApi.updateArticle(editArticleId.value, params)\n\t\t\t} else {\n\t\t\t\t// 发布新文章\n\t\t\t\tres = await articleApi.addArticle(params)\n\t\t\t}\n\n\t\t\tif (res.id || res.code === 0) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: isEditMode.value ? '更新成功' : '发布成功',\n\t\t\t\t\ticon: 'success',\n\t\t\t\t\tduration: 1500,\n\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tuni.navigateBack({\n\t\t\t\t\t\t\t\tdelta: 1,\n\t\t\t\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t\t\t\tuni.$emit('globalRefresh', { \n\t\t\t\t\t\t\t\t\t\ttimestamp: Date.now(),\n\t\t\t\t\t\t\t\t\t\tpages: ['index', 'userArticleList', 'articleDetail']\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tconsole.log('触发全局刷新事件');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthrow new Error(res.message || (isEditMode.value ? '更新失败' : '发布失败'))\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(isEditMode.value ? '更新失败:' : '发布失败:', err)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: err.message || (isEditMode.value ? '更新失败，请重试' : '发布失败，请重试'),\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t} finally {\n\t\t\tuni.hideLoading()\n\t\t}\n\t}\n\n\t// 选择分类\n\tconst bindPickerChange = ( e ) => {\n\t\tconsole.log( e, '分类' )\n\t\tcateIndex.value = e.detail.value\n\t\tselectedCategory.value = categoryList.value[ e.detail.value ]._id\n\t}\n\n\t// 直接选择分类\n\tconst selectCategory = (index) => {\n\t\tcateIndex.value = index\n\t\tselectedCategory.value = categoryList.value[index]._id\n\t\tconsole.log('选择分类:', categoryList.value[index].cate_name)\n\t}\n\n\t// 使用 uni-app API 控制键盘\n\tconst focusTextarea = () => {\n\t\t// 先隐藏键盘，再延迟显示，避免闪烁问题\n\t\tuni.hideKeyboard && uni.hideKeyboard()\n\t\t\n\t\tsetTimeout(() => {\n\t\t\ttextareaFocus.value = true\n\t\t\t\n\t\t\t// 添加光标位置设置 - 默认光标移到内容末尾\n\t\t\tif (content.value) {\n\t\t\t\tselectionStart.value = content.value.length\n\t\t\t\tselectionEnd.value = content.value.length\n\t\t\t}\n\t\t\t\n\t\t\t// 滚动到可视区域，确保输入区域在键盘上方\n\t\t\tadjustScrollPosition()\n\t\t}, 50)\n\t}\n\n\t// 选择支付金额\n\tconst onSelectPayAmount = (e) => {\n\t\tpayAmount.value = e.target.dataset.amount\n\t}\n\n\t// 生成分类图标\n\tconst handleGenerateIcon = async (category) => {\n\t\ttry {\n\t\t\tuni.showLoading({\n\t\t\t\ttitle: '生成图标中...',\n\t\t\t\tmask: false\n\t\t\t})\n\t\t\t\n\t\t\t// 生成临时图标\n\t\t\tconst tempResult = await generateTempCategoryIcon(category.cate_name)\n\t\t\tif (tempResult && tempResult.tempFilePath) {\n\t\t\t\t// 直接上传和保存图标，跳过自定义调整面板\n\t\t\t\tcurrentEditingCategory = category\n\t\t\t\tpreviewImageUrl.value = tempResult.tempFilePath\n\t\t\t\t\n\t\t\t\t// 直接保存图标\n\t\t\t\tawait saveCustomIcon()\n\t\t\t} else {\n\t\t\t\tthrow new Error('生成临时图标失败')\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('生成图标失败:', error)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '生成图标失败',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t} finally {\n\t\t\tuni.hideLoading()\n\t\t}\n\t}\n\t\n\t// 生成临时预览图标\n\tconst generateTempCategoryIcon = async (categoryName) => {\n\t\ttry {\n\t\t\t// 显示加载中提示\n\t\t\tuni.showLoading({\n\t\t\t\ttitle: '生成预览中...',\n\t\t\t\tmask: false\n\t\t\t})\n\t\t\t\n\t\t\t// 1. 根据分类名称生成背景色和前景色（保持原有代码）\n\t\t\tconst getColorFromName = (name) => {\n\t\t\t\t// 简单哈希算法生成颜色\n\t\t\t\tlet hash = 0;\n\t\t\t\tfor (let i = 0; i < name.length; i++) {\n\t\t\t\t\thash = name.charCodeAt(i) + ((hash << 5) - hash);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 生成柔和的背景色 - 使用HSL颜色模型，保持较高亮度和低饱和度\n\t\t\t\tconst h = Math.abs(hash) % 360; // 色相\n\t\t\t\tconst s = 40 + (Math.abs(hash) % 30); // 饱和度 40-70%\n\t\t\t\tconst l = 75 + (Math.abs(hash) % 15); // 亮度 75-90%\n\t\t\t\t\n\t\t\t\t// 前景色 - 根据背景色明暗程度选择黑或白文本\n\t\t\t\tconst foregroundColor = l > 65 ? '#333333' : '#FFFFFF';\n\t\t\t\t\n\t\t\t\treturn {\n\t\t\t\t\tbackground: `hsl(${h}, ${s}%, ${l}%)`,\n\t\t\t\t\tforeground: foregroundColor\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\t// 2. 创建Canvas绘制图标\n\t\t\tconst colors = getColorFromName(categoryName);\n\t\t\tconst canvasSize = 200; // 画布大小\n\t\t\tconst iconSize = canvasSize;\n\t\t\t\n\t\t\t// 创建离屏Canvas (App和小程序)\n\t\t\tconst canvas = uni.createOffscreenCanvas({\n\t\t\t\ttype: '2d',\n\t\t\t\twidth: iconSize, \n\t\t\t\theight: iconSize\n\t\t\t})\n\t\t\tconst ctx = canvas.getContext('2d');\n\t\t\t\n\t\t\t// 绘制背景\n\t\t\tctx.fillStyle = colors.background;\n\t\t\tctx.fillRect(0, 0, iconSize, iconSize);\n\t\t\t\n\t\t\t// 绘制边框\n\t\t\tctx.strokeStyle = 'rgba(0,0,0,0.1)';\n\t\t\tctx.lineWidth = 2;\n\t\t\tctx.strokeRect(2, 2, iconSize-4, iconSize-4);\n\t\t\t\n\t\t\t// 绘制文字 - 应用当前偏移和大小设置\n\t\t\tconst firstChar = categoryName.charAt(0);\n\t\t\tctx.fillStyle = colors.foreground;\n\t\t\tconst fontSize = iconSize/2 * (textSize.value / 100);\n\t\t\tctx.font = `bold ${fontSize}px sans-serif`;\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\t\n\t\t\t// 应用偏移量，默认位置是中心点(iconSize/2, iconSize/2)\n\t\t\tconst textX = iconSize/2 + (textOffsetX.value * iconSize / 100);\n\t\t\tconst textY = iconSize/2 + (textOffsetY.value * iconSize / 100);\n\t\t\tctx.fillText(firstChar, textX, textY);\n\t\t\t\n\t\t\t// 3. 将Canvas转为临时图片\n\t\t\tconst tempFilePath = await new Promise((resolve, reject) => {\n\t\t\t\t// 导出图片\n\t\t\t\tconst buffer = canvas.toDataURL('image/png')\n\t\t\t\t\n\t\t\t\t// 将Base64转为本地临时文件\n\t\t\t\tconst fs = uni.getFileSystemManager();\n\t\t\t\tconst tempFilePath = `${uni.env.USER_DATA_PATH}/temp_category_icon_${Date.now()}.png`;\n\t\t\t\t\n\t\t\t\t// 保存Base64为临时文件\n\t\t\t\tconst base64Data = buffer.replace(/^data:image\\/\\w+;base64,/, '');\n\t\t\t\tfs.writeFile({\n\t\t\t\t\tfilePath: tempFilePath,\n\t\t\t\t\tdata: base64Data,\n\t\t\t\t\tencoding: 'base64',\n\t\t\t\t\tsuccess: () => resolve(tempFilePath),\n\t\t\t\t\tfail: (err) => reject(new Error(`保存临时文件失败: ${JSON.stringify(err)}`))\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\tuni.hideLoading();\n\t\t\t\n\t\t\t// 返回临时文件路径和颜色信息\n\t\t\treturn { \n\t\t\t\ttempFilePath,\n\t\t\t\tcolors\n\t\t\t};\n\t\t\t\n\t\t} catch (error) {\n\t\t\tuni.hideLoading();\n\t\t\tconsole.error('生成临时图标失败:', error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// 添加重试获取分类的方法\n\tconst retryGetCategories = () => {\n\t\tuni.showToast({\n\t\t\ttitle: '正在重新获取分类...',\n\t\t\ticon: 'loading',\n\t\t\tduration: 2000\n\t\t})\n\t\tsetTimeout(() => {\n\t\t\tgetLocaAndCate()\n\t\t}, 1000)\n\t}\n\n\t// 组件加载时获取位置\n\tonMounted(() => {\n\t\tconsole.log('组件已挂载')\n\t\tisInSelectionMode.value = false\n\t\t\n\t\t// 如果不是编辑模式，则获取分类\n\t\tif (!isEditMode.value) {\n\t\t\tgetLocaAndCate().catch(err => {\n\t\t\t\tconsole.error('onMounted获取分类失败:', err)\n\t\t\t\tuni.showModal({\n\t\t\t\t\ttitle: '提示',\n\t\t\t\t\tcontent: '获取分类失败，是否重试？',\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\tretryGetCategories()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t})\n\n\t// 添加创建新分类图标的方法\n\tconst createNewCategoryIcon = () => {\n\t\tif (categoryList.value.length === 0) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '没有可用分类',\n\t\t\t\t\ticon: 'none',\n\t\t\t\t\tduration: 2000\n\t\t\t\t})\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// 如果已选择分类，为该分类生成图标\n\t\tif (categoryList.value[cateIndex.value]) {\n\t\t\thandleGenerateIcon(categoryList.value[cateIndex.value])\n\t\t} else {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '请先选择一个分类',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2000\n\t\t\t})\n\t\t}\n\t}\n\n\t// 检查URL是否有效图片URL\n\tconst isValidImageUrl = (url) => {\n\t\t// 如果URL为空或为空字符串，不是有效URL\n\t\tif (!url || url.trim() === '') return false;\n\t\t\n\t\t// 检查是否是默认图片\n\t\tif (url.includes('default.png')) return false;\n\t\t\n\t\t// 检查是否是本地静态资源路径（非有效的远程URL）\n\t\tif (url.startsWith('/static/')) return false;\n\t\t\n\t\ttry {\n\t\t\t// 尝试解析URL，检查是否有效\n\t\t\tconst parsedUrl = new URL(url);\n\t\t\t// 检查是否是HTTP/HTTPS协议\n\t\t\treturn parsedUrl.protocol === 'http:' || parsedUrl.protocol === 'https:';\n\t\t} catch (e) {\n\t\t\t// 解析失败，不是有效URL\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// 处理文本框焦点事件\n\tconst handleTextareaFocus = () => {\n\t\ttextareaFocus.value = true\n\t\t// 调整滚动位置确保输入区域可见\n\t\tadjustScrollPosition()\n\t}\n\n\t// 处理文本框行数变化\n\tconst handleLineChange = (e) => {\n\t\t// 获取当前行数\n\t\tconst lineCount = e.detail.lineCount || 1;\n\t\tconst minHeight = 170; // 最小高度 170rpx\n\t\tconst lineHeight = 40; // 每行大约40rpx\n\t\tconst maxHeight = 800; // 最大高度限制\n\t\t\n\t\t// 计算理想高度：每行40rpx，加上上下padding各20rpx\n\t\tlet idealHeight = Math.max(minHeight, (lineCount * lineHeight) + 40);\n\t\t\n\t\t// 限制最大高度\n\t\tidealHeight = Math.min(idealHeight, maxHeight);\n\t\t\n\t\t// 只有当高度变化显著时才调整位置\n\t\tif (Math.abs(inputHeight.value - idealHeight) > 10) {\n\t\t\tinputHeight.value = idealHeight;\n\t\t\t\n\t\t\t// 使用节流函数延迟调用adjustScrollPosition\n\t\t\tclearTimeout(window.scrollAdjustTimer);\n\t\t\twindow.scrollAdjustTimer = setTimeout(() => {\n\t\t\t\tadjustScrollPosition();\n\t\t\t}, 100);\n\t\t}\n\t}\n\t\n\t// 启用光标拖动模式\n\tconst enableCursorDrag = (e) => {\n\t\t// 确保文本区域获得焦点\n\t\ttextareaFocus.value = true\n\t\t\n\t\t// 设置为选择模式\n\t\tisInSelectionMode.value = true\n\t\t\n\t\t// 简单提示用户\n\t\tuni.showToast({\n\t\t\ttitle: '长按选择文本进行编辑',\n\t\t\ticon: 'none',\n\t\t\tduration: 1500\n\t\t})\n\t\t\n\t\t// 阻止默认行为，防止虚拟键盘弹出\n\t\tsetTimeout(() => {\n\t\t\tuni.hideKeyboard && uni.hideKeyboard()\n\t\t}, 100)\n\t}\n\n\t// 更新图标预览\n\tconst updateIconPreview = async () => {\n\t\tif (!currentEditingCategory) return;\n\t\t\n\t\ttry {\n\t\t\tconst tempResult = await generateTempCategoryIcon(currentEditingCategory.cate_name);\n\t\t\tif (tempResult && tempResult.tempFilePath) {\n\t\t\t\tpreviewImageUrl.value = tempResult.tempFilePath;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('更新预览失败:', error);\n\t\t}\n\t}\n\t\n\t// 保存自定义图标\n\tconst saveCustomIcon = async () => {\n\t\tif (!currentEditingCategory || !previewImageUrl.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '没有可保存的图标',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\ttry {\n\t\t\tuni.showLoading({\n\t\t\t\ttitle: '保存中...',\n\t\t\t\tmask: false\n\t\t\t});\n\t\t\t\n\t\t\t// 上传到云存储\n\t\t\tconst uploadResult = await extStorageCo.getUploadFileOptions({\n\t\t\t\tcloudPath: `categories/${currentEditingCategory._id || Date.now()}.png`,\n\t\t\t\tfileType: 'image',\n\t\t\t\tisOriginal: true\n\t\t\t});\n\t\t\t\n\t\t\t// 执行上传\n\t\t\tconst uploadRes = await uni.uploadFile({\n\t\t\t\t...uploadResult.uploadFileOptions,\n\t\t\t\tfilePath: previewImageUrl.value,\n\t\t\t\tname: 'file'\n\t\t\t});\n\t\t\t\n\t\t\tif (uploadRes.statusCode !== 200) {\n\t\t\t\tthrow new Error(`上传失败: ${uploadRes.statusCode}`);\n\t\t\t}\n\t\t\t\n\t\t\t\t\t// 获取图片URL，使用域名修复函数\n\t\t\tconst iconURL = fixImageUrl(uploadResult.fileURL);\n\t\t\tconst thumbnailURL = fixImageUrl(uploadResult.thumbnailURL);\n\t\t\t\n\t\t\t// 更新数据库中的分类图标URL\n\t\t\tif (currentEditingCategory._id) {\n\t\t\t\ttry {\n\t\t\t\t\t// 尝试调用云函数更新图标\n\t\t\t\t\tconst updateResult = await extStorageCo.updateCategoryIcon({\n\t\t\t\t\t\tcategoryId: currentEditingCategory._id, \n\t\t\t\t\t\ticonURL,\n\t\t\t\t\t\tthumbnailURL\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\tconsole.warn('云函数updateCategoryIcon可能未部署或不可用:', err);\n\t\t\t\t\t\treturn { updated: false, error: err.message };\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// 如果云函数调用成功\n\t\t\t\t\tif (updateResult && updateResult.updated) {\n\t\t\t\t\t\tconsole.log('更新分类图标结果:', updateResult);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 更新本地分类图标，使用域名修复函数\n\t\t\t\t\t\tcurrentEditingCategory.icon = fixImageUrl(iconURL);\n\t\t\t\t\t\tcurrentEditingCategory.cate_img = fixImageUrl(iconURL);\n\t\t\t\t\t\tcurrentEditingCategory.cate_img_thumbnail = fixImageUrl(thumbnailURL);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 关闭自定义面板\n\t\t\t\t\t\ticonCustomizing.value = false;\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '图标保存成功',\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 云函数未能正确执行，但我们仍然更新本地图标\n\t\t\t\t\t\tconsole.warn('更新分类图标未成功，但图标已生成:', {iconURL, thumbnailURL});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 更新本地分类图标，使用域名修复函数\n\t\t\t\t\t\tcurrentEditingCategory.icon = fixImageUrl(iconURL);\n\t\t\t\t\t\tcurrentEditingCategory.cate_img = fixImageUrl(iconURL);\n\t\t\t\t\t\tcurrentEditingCategory.cate_img_thumbnail = fixImageUrl(thumbnailURL);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 关闭自定义面板\n\t\t\t\t\t\ticonCustomizing.value = false;\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '图标已生成',\n\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (updateError) {\n\t\t\t\t\t// 更新数据库失败，但图标已上传成功\n\t\t\t\t\tconsole.error('更新分类图标数据库记录失败:', updateError);\n\t\t\t\t\t\n\t\t\t\t\t// 更新本地分类图标，使用域名修复函数\n\t\t\t\t\tcurrentEditingCategory.icon = fixImageUrl(iconURL);\n\t\t\t\t\tcurrentEditingCategory.cate_img = fixImageUrl(iconURL);\n\t\t\t\t\tcurrentEditingCategory.cate_img_thumbnail = fixImageUrl(thumbnailURL);\n\t\t\t\t\t\n\t\t\t\t\t// 关闭自定义面板\n\t\t\t\t\ticonCustomizing.value = false;\n\t\t\t\t\t\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '图标已生成，但未更新数据库',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('保存图标失败:', error);\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '保存图标失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t} finally {\n\t\t\tuni.hideLoading();\n\t\t}\n\t}\n\t\n\t// 取消自定义\n\tconst cancelCustomize = () => {\n\t\ticonCustomizing.value = false;\n\t\tcurrentEditingCategory = null;\n\t\tpreviewImageUrl.value = '';\n\t}\n\n\t// 调整滚动位置\n\tconst adjustScrollPosition = () => {\n\t\tnextTick(() => {\n\t\t\ttry {\n\t\t\t\t// 获取当前设备信息\n\t\t\t\tconst systemInfo = uni.getSystemInfoSync();\n\t\t\t\tconst windowHeight = systemInfo.windowHeight;\n\t\t\t\tconst keyboardHeight = systemInfo.windowHeight * 0.4; // 键盘高度约为屏幕高度的40%\n\t\t\t\t\n\t\t\t\t// 获取输入区域信息\n\t\t\t\tuni.createSelectorQuery()\n\t\t\t\t\t.select('.content-area')\n\t\t\t\t\t.boundingClientRect(rect => {\n\t\t\t\t\t\tif (!rect) return;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 计算输入区域底部到屏幕顶部的距离\n\t\t\t\t\t\tconst inputBottom = rect.top + rect.height;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 计算理想的输入区域位置\n\t\t\t\t\t\t// 让输入区域底部位于键盘上方，留出一定空间(100rpx)\n\t\t\t\t\t\tconst idealPosition = inputBottom - (windowHeight - keyboardHeight) + (100 * (systemInfo.windowWidth / 750));\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 只有当输入区域被键盘遮挡时才滚动\n\t\t\t\t\t\tif (idealPosition > 0) {\n\t\t\t\t\t\t\t// 获取当前页面滚动位置\n\t\t\t\t\t\t\tlet currentScrollTop = 0;\n\t\t\t\t\t\t\tconst pages = getCurrentPages();\n\t\t\t\t\t\t\tconst currentPage = pages[pages.length - 1];\n\t\t\t\t\t\t\tif (currentPage && currentPage.$page) {\n\t\t\t\t\t\t\t\tcurrentScrollTop = currentPage.$page.scrollTop || 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 计算新的滚动位置，确保平滑过渡\n\t\t\t\t\t\t\tconst newScrollTop = currentScrollTop + idealPosition;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 执行滚动，使用较短的动画时间\n\t\t\t\t\t\t\tuni.pageScrollTo({\n\t\t\t\t\t\t\t\tscrollTop: newScrollTop,\n\t\t\t\t\t\t\t\tduration: 200, // 减少动画时间提高响应速度\n\t\t\t\t\t\t\t\tsuccess: () => {\n\t\t\t\t\t\t\t\t\t// 滚动完成后，确保光标可见\n\t\t\t\t\t\t\t\t\tnextTick(() => {\n\t\t\t\t\t\t\t\t\t\t// 如果需要，微调滚动位置\n\t\t\t\t\t\t\t\t\t\tconst finalAdjustment = 50; // 额外的微调距离\n\t\t\t\t\t\t\t\t\t\tif (idealPosition > windowHeight / 3) {\n\t\t\t\t\t\t\t\t\t\t\tuni.pageScrollTo({\n\t\t\t\t\t\t\t\t\t\t\t\tscrollTop: newScrollTop + finalAdjustment,\n\t\t\t\t\t\t\t\t\t\t\t\tduration: 100\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.exec();\n\t\t\t\t\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('调整滚动位置失败:', err);\n\t\t\t}\n\t\t});\n\t}\n\n\t// 插入文本到光标位置\n\tconst insertTextAtCursor = (textToInsert) => {\n\t\tif (!content.value) content.value = ''\n\t\t\n\t\t// 插入文本\n\t\tconst before = content.value.substring(0, selectionStart.value)\n\t\tconst after = content.value.substring(selectionEnd.value)\n\t\tcontent.value = before + textToInsert + after\n\t\t\n\t\t// 更新光标位置 - 移动到插入的文本之后\n\t\tconst newPosition = selectionStart.value + textToInsert.length\n\t\t\n\t\t// 延迟更新光标位置，确保内容已更新\n\t\tnextTick(() => {\n\t\t\tselectionStart.value = newPosition\n\t\t\tselectionEnd.value = newPosition\n\t\t\t\n\t\t\t// 确保文本区域仍然具有焦点\n\t\t\ttextareaFocus.value = true\n\t  \n\t\t\t// 触发输入高度变化检测\n\t\t\thandleLineChange({ detail: { lineCount: content.value.split('\\n').length } })\n\t\t})\n\t}\n\t\n\t// 添加一个保存光标位置的处理函数\n\tconst handleSelectionChange = (e) => {\n\t\tif (e.detail) {\n\t\t\t// 记录选区位置\n\t\t\tselectionStart.value = e.detail.selectionStart || 0\n\t\t\tselectionEnd.value = e.detail.selectionEnd || 0\n\t\t\t\n\t\t\t// 如果有选中内容，显示字数\n\t\t\tif (selectionStart.value !== selectionEnd.value) {\n\t\t\t\t// 已经显示在界面中\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// 应用自定义选择样式 - 例如在选择的文本下方添加细线\n\tconst applyCustomSelectionStyle = () => {\n\t\t// 为了更好地兼容性，这只是一个占位函数\n\t\t// 实际样式通过CSS和class控制\n\t\t\n\t\t// 在微信小程序环境中，可以考虑使用覆盖层或其他视觉指示\n\t\t\n\t\t// 注意：某些平台可能不支持复杂的DOM操作或CSS自定义\n\t\t\n\t\t// 在这里，我们主要依赖于CSS和类来添加视觉区分\n\t\tconsole.log('应用自定义选择样式')\n\t}\n\n\t// 插入常用短语\n\tconst insertCommonPhrase = (phrase) => {\n\t\tinsertTextAtCursor(phrase)\n\t\t// 插入后自动关闭工具栏\n\t\tshowFormatToolbar.value = false\n\t}\n\n\t// 清空全部内容\n\tconst clearContent = () => {\n\t\tuni.showModal({\n\t\t\ttitle: '提示',\n\t\t\tcontent: '确定要清空全部内容吗？',\n\t\t\tsuccess: (res) => {\n\t\t\t\tif (res.confirm) {\n\t\t\t\t\tcontent.value = ''\n\t\t\t\t\t// 聚焦到输入框\n\t\t\t\t\ttextareaFocus.value = true\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\t// 切换表情面板显示\n\tconst toggleEmojiPanel = () => {\n\t\tshowEmojiPanel.value = !showEmojiPanel.value\n\t\tif (showEmojiPanel.value) {\n\t\t\t// 关闭格式工具栏\n\t\t\tshowFormatToolbar.value = false\n\t\t}\n\t}\n\n\t// 插入表情符号\n\tconst insertEmoji = (emoji) => {\n\t\tinsertTextAtCursor(emoji)\n\t}\n\n\t// 选择表情分组\n\tconst selectEmojiGroup = (index) => {\n\t\tcurrentEmojiGroupIndex.value = index\n\t}\n\n\t// 增强文本选择的焦点和选择控制\n\tconst enhanceTextareaSelection = (e) => {\n\t  try {\n\t    // 确保内容区域可见\n\t    adjustScrollPosition()\n\t    \n\t    // 判断是否需要显示键盘\n\t    const shouldShowKeyboard = e && e.type === 'click'\n\t    \n\t    if (shouldShowKeyboard) {\n\t      textareaFocus.value = true\n\t    }\n\t    \n\t    // 记录文本区域位置用于后续精确选择\n\t    if (e && (e.type === 'touchstart' || e.type === 'click')) {\n\t      // 在小程序中获取元素信息\n\t      uni.createSelectorQuery()\n\t        .select('.content-input')\n\t        .boundingClientRect(data => {\n\t          if (data) {\n\t            // 记录文本区域的位置和尺寸信息\n\t            textAreaRect.value = {\n\t              left: data.left,\n\t              top: data.top,\n\t              width: data.width,\n\t              height: data.height\n\t            }\n\t          }\n\t        })\n\t        .exec()\n\t    }\n\t  } catch (err) {\n\t    console.log('增强文本选择失败', err)\n\t  }\n\t}\n\n\t// 将长按变成精确选择模式\n\tconst enablePreciseSelection = (e) => {\n\t  // 防止默认长按菜单\n\t  e.preventDefault && e.preventDefault()\n\t  \n\t  // 显示自定义菜单\n\t  uni.showActionSheet({\n\t    itemList: ['全选', '复制', '粘贴', '清空'],\n\t    success: (res) => {\n\t      switch(res.tapIndex) {\n\t        case 0: // 全选\n\t          // 选择全部文本\n\t          selectionStart.value = 0\n\t          selectionEnd.value = content.value.length\n\t          \n\t          // 确保文本区域获得焦点\n\t          textareaFocus.value = true\n\t          \n\t          uni.showToast({\n\t            title: '已全选',\n\t            icon: 'none',\n\t            duration: 1000\n\t          })\n\t          break\n\t          \n\t        case 1: // 复制\n\t          if (selectionStart.value !== selectionEnd.value) {\n\t            // 复制选中内容到剪贴板\n\t            const selectedText = content.value.substring(selectionStart.value, selectionEnd.value)\n\t            uni.setClipboardData({\n\t              data: selectedText,\n\t              success: () => {\n\t                uni.showToast({\n\t                  title: '已复制',\n\t                  icon: 'success',\n\t                  duration: 1000\n\t                })\n\t              }\n\t            })\n\t          } else if (content.value) {\n\t            // 全部复制\n\t            uni.setClipboardData({\n\t              data: content.value,\n\t              success: () => {\n\t                uni.showToast({\n\t                  title: '已复制全部内容',\n\t                  icon: 'success',\n\t                  duration: 1000\n\t                })\n\t              }\n\t            })\n\t          } else {\n\t            uni.showToast({\n\t              title: '无内容可复制',\n\t              icon: 'none',\n\t              duration: 1000\n\t            })\n\t          }\n\t          break\n\t          \n\t        case 2: // 粘贴\n\t          // 从剪贴板获取内容并粘贴\n\t          uni.getClipboardData({\n\t            success: (res) => {\n\t              if (res.data) {\n\t                // 在当前光标位置插入剪贴板内容\n\t                insertTextAtCursor(res.data)\n\t                \n\t                uni.showToast({\n\t                  title: '已粘贴',\n\t                  icon: 'success',\n\t                  duration: 1000\n\t                })\n\t              } else {\n\t                uni.showToast({\n\t                  title: '剪贴板为空',\n\t                  icon: 'none',\n\t                  duration: 1000\n\t                })\n\t              }\n\t            }\n\t          })\n\t          break\n\t          \n\t        case 3: // 清空\n\t          // 清空确认\n\t          uni.showModal({\n\t            title: '提示',\n\t            content: '确定要清空全部内容吗？',\n\t            success: (res) => {\n\t              if (res.confirm) {\n\t                content.value = ''\n\t                \n\t                // 重新获取焦点\n\t                setTimeout(() => {\n\t                  textareaFocus.value = true\n\t                }, 100)\n\t              }\n\t            }\n\t          })\n\t          break\n\t      }\n\t    }\n\t  })\n\t}\n\n\t// 退出选择模式\n\tconst exitSelectionMode = () => {\n\t  // 清除选择模式标志\n\t  isInSelectionMode.value = false\n\t  \n\t  // 通知用户\n\t  uni.showToast({\n\t    title: '选择已完成',\n\t    icon: 'none',\n\t    duration: 1500\n\t  })\n\t}\n\n\t// 根据点击位置计算光标位置\n\tconst getCursorPositionFromPoint = (x, y, text) => {\n\t  // uni-app环境中可能没有直接访问document对象\n\t  // 创建临时元素来估算光标位置\n\t  try {\n\t    // 通过selectQuery获取textarea元素\n\t    uni.createSelectorQuery()\n\t      .select('.content-input')\n\t      .node(res => {\n\t        if (!res || !res.node) return 0\n\t        \n\t        // 获取容器节点作为参考\n\t        const textNode = res.node\n\t        \n\t        // 创建临时文本计算工具\n\t        const getPositionFromText = (text, relX, relY) => {\n\t          // 文本不存在则返回0\n\t          if (!text) return 0\n\t          \n\t          // 使用字符平均宽度进行估算\n\t          const avgCharWidth = 14 // 假设的平均字符宽度，28rpx约等于14px\n\t          const lineHeight = 21 // 1.5行高 * 14px\n\t          \n\t          // 计算点击位置大致对应的字符索引\n\t          const approxLine = Math.floor(relY / lineHeight)\n\t          const lineWidth = textNode.offsetWidth || 300 // 假设宽度\n\t          const charsPerLine = Math.floor(lineWidth / avgCharWidth)\n\t          \n\t          // 基于行数和相对X位置计算索引\n\t          let approxIndex = (approxLine * charsPerLine) + Math.floor(relX / avgCharWidth)\n\t          \n\t          // 确保索引在有效范围内\n\t          approxIndex = Math.max(0, Math.min(approxIndex, text.length))\n\t          \n\t          // 尝试找到最接近的字符边界\n\t          // 特别是对于CJK文字，可能需要更复杂的逻辑\n\t          return approxIndex\n\t        }\n\t        \n\t        // 获取相对于文本区的坐标\n\t        uni.createSelectorQuery()\n\t          .select('.content-input')\n\t          .boundingClientRect(data => {\n\t            if (data) {\n\t              const relX = x - data.left\n\t              const relY = y - data.top\n\t              \n\t              // 计算估算位置\n\t              const position = getPositionFromText(text, relX, relY)\n\t              \n\t              // 设置选中位置\n\t              selectionStart.value = position\n\t              selectionEnd.value = position\n\t              \n\t              // 直接应用到文本区\n\t              if (textNode.setSelectionRange) {\n\t                textNode.setSelectionRange(position, position)\n\t                // 保存引用\n\t                textareaElement.value = textNode\n\t              }\n\t            }\n\t          })\n\t          .exec()\n\t      })\n\t      .exec()\n\t    \n\t    // 如果没法获取到正确位置，返回一个估计值\n\t    return Math.min(text.length, Math.max(0, selectionStart.value))\n\t  } catch (e) {\n\t    console.error('光标位置计算失败:', e)\n\t    return 0 // 失败时返回开始位置\n\t  }\n\t}\n\n\t// 打开文本精确选择模式\n\tconst openPreciseTextSelection = () => {\n\t  try {\n\t    // 使用微信小程序/uni提供的可能API\n\t    uni.showActionSheet({\n\t      itemList: ['精确选择文本'],\n\t      success: () => {\n\t        // 启用精确选择模式\n\t        uni.showToast({\n\t          title: '已启用精确选择',\n\t          icon: 'none',\n\t          duration: 1500\n\t        })\n\t        \n\t        // 设置系统选择模式为可选择\n\t        setTimeout(() => {\n\t          textareaFocus.value = true\n\t          \n\t          // 使用更专业的方法设置光标可选择模式\n\t          if (typeof plus !== 'undefined' && plus.webview) {\n\t            const currentWebview = plus.webview.currentWebview()\n\t            if (currentWebview.setStyle) {\n\t              currentWebview.setStyle({\n\t                softinputMode: 'adjustResize', // 确保软键盘不遮挡\n\t                userSelect: 'text' // 允许用户选择文本\n\t              })\n\t            }\n\t          }\n\t        }, 100)\n\t      }\n\t    })\n\t  } catch (e) {\n\t    console.error('无法启用精确文本选择:', e)\n\t    // 回退到基本选择方式\n\t    textareaFocus.value = true\n\t  }\n\t}\n\n\t// 记录文本区域位置的响应式变量\n\tconst textAreaRect = ref({ left: 0, top: 0, width: 0, height: 0 })\n\n\t// 添加图片预览方法，使用域名修复\n\tconst previewImage = (index) => {\n\t\tif (!imageList.value[index]) return\n\t\t\n\t\t// 使用域名修复函数处理图片URL\n\t\tconst images = imageList.value.map(img => fixImageUrl(img.thumbnailURL))\n\t\tpreviewImageIndex.value = index\n\t\t\n\t\t// 使用uni-app的预览图片API\n\t\tuni.previewImage({\n\t\t\tcurrent: index,\n\t\t\turls: images,\n\t\t\tindicator: 'number',\n\t\t\tloop: true,\n\t\t\tsuccess: () => {\n\t\t\t\tconsole.log('图片预览成功')\n\t\t\t},\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.error('图片预览失败', err)\n\t\t\t\t// 预览失败时的备选方案，使用域名修复\n\t\t\t\tshowImagePreview.value = true\n\t\t\t\tcurrentPreviewImage.value = fixImageUrl(images[index])\n\t\t\t}\n\t\t})\n\t}\n\t\n\t\n\t\t\n\t// 关闭图片预览\n\tconst closeImagePreview = () => {\n\t\tshowImagePreview.value = false\n\t\tcurrentPreviewImage.value = ''\n\t}\n</script>\n\n<template>\n\t<view class=\"add\">\n\n\t\t<!-- 分类选择 -->\n\t\t<view class=\"category\">\n\t\t\t<view class=\"category-header\">\n\t\t\t\t<text class=\"label\">所属地区</text>\n\t\t\t\t<text class=\"location-address-inline\" v-if=\"locationInfo && locationInfo.address\">（{{ getSimplifiedAddress(locationInfo.address) }}）</text>\n\t\t\t</view>\n\t\t\t\n\t\t\t<picker @change=\"bindPickerChange\" :range=\"categoryList\" :value=\"cateIndex\"\n\t\t\t\trange-key=\"cate_name\" v-if=\"false\">\n\t\t\t\t<view class=\"picker\">\n\t\t\t\t\t<text>\n\t\t\t\t\t\t{{categoryList[cateIndex]?.cate_name}}\n\t\t\t\t\t</text>\n\t\t\t\t\t<uni-icons type=\"bottom\" size=\"14\" color=\"#999999\"></uni-icons>\n\t\t\t\t</view>\n\t\t\t</picker>\n\t\t\t\n\t\t\t<!-- 添加网格布局的分类选择 -->\n\t\t\t<view class=\"category-grid\">\n\t\t\t\t<!-- 生成图标按钮，仅在当前选择的分类没有缩略图时显示 -->\n\t\t\t\t<view \n\t\t\t\t\tv-if=\"categoryList.length > 0 && categoryList[cateIndex] && !categoryList[cateIndex].cate_img_thumbnail\" \n\t\t\t\t\tclass=\"category-item generate-icon-item\" \n\t\t\t\t\t@click=\"createNewCategoryIcon\"\n\t\t\t\t>\n\t\t\t\t\t<view class=\"category-icon\">\n\t\t\t\t\t\t<uni-icons type=\"plus\" size=\"30\" color=\"#2196F3\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"category-name-container\">\n\t\t\t\t\t\t<text class=\"category-name\">生成图标</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view \n\t\t\t\t\tv-for=\"(item, index) in categoryList\" \n\t\t\t\t\t:key=\"index\" \n\t\t\t\t\tclass=\"category-item\" \n\t\t\t\t\t:class=\"{ 'active': index === cateIndex, 'location-based': item.is_location_based }\"\n\t\t\t\t\t@click=\"selectCategory(index)\"\n\t\t\t\t>\n\t\t\t\t\t<view class=\"category-icon\">\n\t\t\t\t\t\t<!-- 使用分类图标，应用域名修复 -->\n\t\t\t\t\t\t<image :src=\"fixImageUrl(item.icon)\" mode=\"aspectFit\" class=\"category-image\"></image>\n\t\t\t\t\t\t<!-- 选中状态指示器 -->\n\t\t\t\t\t\t<view class=\"selected-indicator\" v-if=\"index === cateIndex\">\n\t\t\t\t\t\t\t<uni-icons type=\"checkmarkempty\" size=\"16\" color=\"#fff\"></uni-icons>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"category-name-container\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- 修改位置标记，移除图标只显示文本 -->\n\t\t\t\t\t\t<view class=\"location-badge\" v-if=\"item.is_location_based\">\n\t\t\t\t\t\t\t<!-- 移除图标 -->\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<text class=\"category-name\">{{ item.cate_name }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 添加重试按钮 -->\n\t\t\t<view v-if=\"categoryList.length === 0 || categoryList[0]._id === 'default'\" \n\t\t\t\t  class=\"retry-btn\" @click=\"retryGetCategories\">\n\t\t\t\t<uni-icons type=\"refresh\" size=\"16\" color=\"#ff6600\"></uni-icons>\n\t\t\t\t<text class=\"retry-text\">重试</text>\n\t\t\t</view>\n\t\t\t\n\t\t</view>\n\n\t\t<!-- 优化文本输入区域 -->\n\t\t<view class=\"content-wrapper\">\n\t\t\t<view class=\"content-area\" :style=\"{ minHeight: inputHeight + 'rpx' }\">\n\t\t\t\t\n\t\t\t\t<textarea \n\t\t\t\t\tv-model=\"content\" \n\t\t\t\t\tplaceholder=\"分享新鲜事...\" \n\t\t\t\t\tclass=\"content-input\"\n\t\t\t\t\tmaxlength=\"2000\"\n\t\t\t\t\tauto-height\n\t\t\t\t\t:adjust-position=\"false\"\n\t\t\t\t\tshow-confirm-bar=\"false\"\n\t\t\t\t\tconfirm-type=\"done\"\n\t\t\t\t\tcursor-spacing=\"120\"\n\t\t\t\t\t:focus=\"textareaFocus\"\n\t\t\t\t\tref=\"contentTextarea\"\n\t\t\t\t\t@blur=\"textareaFocus = false\"\n\t\t\t\t\t@focus=\"handleTextareaFocus\"\n\t\t\t\t\t:disable-default-padding=\"true\"\n\t\t\t\t\t:hold-keyboard=\"false\"\n\t\t\t\t\t:selection-start=\"selectionStart\"\n\t\t\t\t\t:selection-end=\"selectionEnd\"\n\t\t\t\t\t@confirm=\"() => {}\"\n\t\t\t\t\t@linechange=\"handleLineChange\"\n\t\t\t\t\t@input=\"handleLineChange\"\n\t\t\t\t\t@selectionchange=\"handleSelectionChange\"\n\t\t\t\t\t@longpress=\"enablePreciseSelection\"\n\t\t\t\t\t@touchstart=\"enhanceTextareaSelection\"\n\t\t\t\t\t@click=\"enhanceTextareaSelection\"\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<!-- 底部字数统计和功能按钮 -->\n\t\t\t\t<view class=\"content-footer\">\n\t\t\t\t\t<text class=\"word-count\">{{ content.length }}/2000</text>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 文本操作工具栏 -->\n\t\t\t\t\t<view class=\"text-toolbar\">\n\t\t\t\t\t\t<view class=\"toolbar-btn\" @click=\"enablePreciseSelection\">\n\t\t\t\t\t\t\t<uni-icons type=\"more-filled\" size=\"16\" color=\"#666\"></uni-icons>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 修改媒体上传区域 -->\n\t\t<view class=\"media-section\">\n\t\t\t<!-- 图片上传区域 -->\n\t\t\t<view class=\"images\">\n\t\t\t\t\n\t\t\t\t<view class=\"image-list\">\n\t\t\t\t\t<view v-for=\"(image, index) in imageList\" :key=\"index\" class=\"image-item\">\n\t\t\t\t\t\t<image :src=\"fixImageUrl(image.thumbnailURL)\" mode=\"aspectFill\" @click=\"previewImage(index)\" />\n\t\t\t\t\t\t<view class=\"delete-btn\" @click=\"deleteImage(index)\">\n\t\t\t\t\t\t\t<uni-icons type=\"close\" size=\"20\" color=\"#fff\"></uni-icons>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"progress-overlay\" v-if=\"image.progress < 100\">\n\t\t\t\t\t\t\t<view class=\"progress-text\">{{image.progress.toFixed(0)}}%</view>\n\t\t\t\t\t\t\t<view class=\"progress-bar\">\n\t\t\t\t\t\t\t\t<view class=\"progress\" :style=\"{width: image.progress + '%'}\"></view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"upload-btn\" @click=\"chooseAndUploadImage\">\n\t\t\t\t\t\t<uni-icons type=\"plusempty\" size=\"30\" color=\"#999\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"tip\">可无限上传图片，点击图片可放大查看</text>\n\t\t\t</view>\n\n\t\t\t<!-- 视频链接区域 -->\n\t\t\t<view class=\"video\">\n\t\t\t\t<view v-if=\"videoInfo\" class=\"video-link-preview\">\n\t\t\t\t\t<view class=\"link-container\">\n\t\t\t\t\t\t<text class=\"link-text\">{{videoInfo}}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"delete-btn\" @click=\"deleteVideo\">\n\t\t\t\t\t\t<uni-icons type=\"close\" size=\"20\" color=\"#fff\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<view v-else class=\"video-link-input\">\n\t\t\t\t\t<view class=\"input-container\">\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tv-model=\"videoLink\" \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tplaceholder=\"输入视频链接后自动保存\" \n\t\t\t\t\t\t\tclass=\"link-input\"\n\t\t\t\t\t\t\tconfirm-type=\"done\"\n\t\t\t\t\t\t\tmaxlength=\"5000\"\n\t\t\t\t\t\t\t@input=\"handleVideoLinkInput\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"tip\">输入.mp4格式的链接，在详情页显示视频</text>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 发布按钮 -->\n\t\t<view class=\"publish\">\n\t\t\t<button class=\"publish-btn\" @click=\"submitForm\">{{isEditMode ? '更新' : '发布'}}</button>\n\t\t</view>\n\n\t\t<!-- 图标自定义面板 -->\n\t\t<view class=\"icon-customize-overlay\" v-if=\"iconCustomizing\">\n\t\t\t<view class=\"icon-customize-panel\">\n\t\t\t\t<view class=\"icon-customize-header\">\n\t\t\t\t\t<text class=\"panel-title\">调整图标</text>\n\t\t\t\t\t<view class=\"close-btn\" @click=\"cancelCustomize\">\n\t\t\t\t\t\t<uni-icons type=\"close\" size=\"20\" color=\"#666\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view class=\"icon-preview\">\n\t\t\t\t\t<image :src=\"fixImageUrl(previewImageUrl)\" mode=\"aspectFit\" class=\"preview-image\"></image>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view class=\"customize-controls\">\n\t\t\t\t\t<!-- 文字X轴位置调整 -->\n\t\t\t\t\t<view class=\"control-item\">\n\t\t\t\t\t\t<text class=\"control-label\">水平位置</text>\n\t\t\t\t\t\t<slider \n\t\t\t\t\t\t\t:value=\"textOffsetX + 50\" \n\t\t\t\t\t\t\tmin=\"0\" \n\t\t\t\t\t\t\tmax=\"100\" \n\t\t\t\t\t\t\tshow-value \n\t\t\t\t\t\t\t@change=\"(e) => { textOffsetX = e.detail.value - 50; updateIconPreview(); }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 文字Y轴位置调整 -->\n\t\t\t\t\t<view class=\"control-item\">\n\t\t\t\t\t\t<text class=\"control-label\">垂直位置</text>\n\t\t\t\t\t\t<slider \n\t\t\t\t\t\t\t:value=\"textOffsetY + 50\" \n\t\t\t\t\t\t\tmin=\"0\" \n\t\t\t\t\t\t\tmax=\"100\" \n\t\t\t\t\t\t\tshow-value \n\t\t\t\t\t\t\t@change=\"(e) => { textOffsetY = e.detail.value - 50; updateIconPreview(); }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 文字大小调整 -->\n\t\t\t\t\t<view class=\"control-item\">\n\t\t\t\t\t\t<text class=\"control-label\">文字大小</text>\n\t\t\t\t\t\t<slider \n\t\t\t\t\t\t\t:value=\"textSize\" \n\t\t\t\t\t\t\tmin=\"50\" \n\t\t\t\t\t\t\tmax=\"150\" \n\t\t\t\t\t\t\tshow-value \n\t\t\t\t\t\t\t@change=\"(e) => { textSize = e.detail.value; updateIconPreview(); }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<view class=\"customize-buttons\">\n\t\t\t\t\t<button class=\"cancel-btn\" @click=\"cancelCustomize\">取消</button>\n\t\t\t\t\t<button class=\"save-btn\" @click=\"saveCustomIcon\">保存</button>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 表情符号面板 -->\n\t\t<view class=\"emoji-panel\" v-if=\"showEmojiPanel\">\n\t\t\t<view class=\"emoji-header\">\n\t\t\t\t<text class=\"emoji-title\">插入表情</text>\n\t\t\t\t<view class=\"emoji-close\" @click=\"showEmojiPanel = false\">\n\t\t\t\t\t<uni-icons type=\"close\" size=\"20\" color=\"#666\"></uni-icons>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view class=\"emoji-tabs\">\n\t\t\t\t<view \n\t\t\t\t\tv-for=\"(group, index) in emojiGroups\" \n\t\t\t\t\t:key=\"index\" \n\t\t\t\t\tclass=\"emoji-tab\" \n\t\t\t\t\t:class=\"{'active': currentEmojiGroupIndex === index}\"\n\t\t\t\t\t@click=\"selectEmojiGroup(index)\"\n\t\t\t\t>\n\t\t\t\t\t{{ group.name }}\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view class=\"emoji-content\">\n\t\t\t\t<view class=\"emoji-list\">\n\t\t\t\t\t<view \n\t\t\t\t\t\tv-for=\"emoji in emojiGroups[currentEmojiGroupIndex].emojis\" \n\t\t\t\t\t\t:key=\"emoji\" \n\t\t\t\t\t\tclass=\"emoji-item\"\n\t\t\t\t\t\t@click.stop=\"insertEmoji(emoji)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ emoji }}\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 添加图片预览弹窗 (备用方案) -->\n\t\t<view class=\"image-preview-overlay\" v-if=\"showImagePreview\" @click=\"closeImagePreview\">\n\t\t\t<view class=\"image-preview-container\" @click.stop>\n\t\t\t\t<image :src=\"fixImageUrl(currentPreviewImage)\" mode=\"widthFix\" class=\"preview-image\" />\n\t\t\t\t<view class=\"preview-close\" @click=\"closeImagePreview\">\n\t\t\t\t\t<uni-icons type=\"close\" size=\"24\" color=\"#fff\"></uni-icons>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<style lang=\"scss\" scoped>\n\t.add {\n\t\tmin-height: 100vh;\n\t\tpadding: 20rpx 30rpx;\n\t\tbackground-color: #fff;\n\n\t\t// 位置信息显示区域样式\n\t\t// 已移除位置信息显示相关样式\n\n\t\t.category {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\n\t\t\t.category-header {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tmargin-bottom: 16rpx;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t\tgap: 8rpx;\n\t\t\t}\n\n\t\t\t.label {\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: $pyq-text-color-body;\n\t\t\t}\n\t\t\t\n\t\t\t.location-address-inline {\n\t\t\t\tfont-size: 24rpx;\n\t\t\t\tcolor: #666;\n\t\t\t\tmargin-left: 8rpx;\n\t\t\t\tfont-weight: normal;\n\t\t\t\tline-height: 1.3;\n\t\t\t}\n\n\t\t\t.picker {\n\t\t\t\tflex: 1;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\tpadding: 16rpx 24rpx;\n\t\t\t\tbackground-color: #f7f7f7;\n\t\t\t\tborder-radius: 3rpx;\n\t\t\t}\n\t\t\t\n\t\t\t/* 分类网格布局样式 */\n\t\t\t.category-grid {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t\tmargin: 0 -10rpx;\n\t\t\t\tpadding: 10rpx 0;\n\t\t\t}\n\t\t\t\n\t\t\t.category-item {\n\t\t\t\twidth: 20%; /* 每行5个 */\n\t\t\t\tpadding: 10rpx;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tmargin-bottom: 20rpx;\n\t\t\t\t\n\t\t\t\t.category-icon {\n\t\t\t\t\twidth: 100rpx;\n\t\t\t\t\theight: 100rpx;\n\t\t\t\t\tbackground-color: #f8f8f8;\n\t\t\t\t\tborder-radius: 20rpx;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tmargin-bottom: 10rpx;\n\t\t\t\t\tborder: 2rpx solid transparent;\n\t\t\t\t\ttransition: all 0.3s;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\tbox-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.05);\n\t\t\t\t\t\n\t\t\t\t\t.category-image {\n\t\t\t\t\t\twidth: 70%;\n\t\t\t\t\t\theight: 70%;\n\t\t\t\t\t\tobject-fit: contain;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.selected-indicator {\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tright: 0;\n\t\t\t\t\t\tbottom: 0;\n\t\t\t\t\t\tbackground-color: $pyq-vi-color;\n\t\t\t\t\t\twidth: 36rpx;\n\t\t\t\t\t\theight: 36rpx;\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\tborder-top-left-radius: 12rpx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.category-name-container {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tflex-wrap: wrap;\n\t\t\t\t\tgap: 4rpx;\n\t\t\t\t\t\n\t\t\t\t\t.category-name {\n\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\tline-height: 1.2;\n\t\t\t\t\t\theight: 2.4em;\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.location-badge {\n\t\t\t\t\t\tmargin-left: 4rpx;\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\n\t\t\t\t\t\t.uni-icons {\n\t\t\t\t\t\t\twidth: 16rpx;\n\t\t\t\t\t\t\theight: 16rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&.active {\n\t\t\t\t\t.category-icon {\n\t\t\t\t\t\tbackground-color: rgba(255, 102, 0, 0.08);\n\t\t\t\t\t\tborder-color: $pyq-vi-color;\n\t\t\t\t\t\tbox-shadow: 0 6rpx 16rpx rgba(255, 102, 0, 0.25);\n\t\t\t\t\t\ttransform: translateY(-4rpx);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.category-name {\n\t\t\t\t\t\tcolor: $pyq-vi-color;\n\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&.location-based {\n\t\t\t\t\t.category-icon {\n\t\t\t\t\t\tbackground-color: rgba(33, 150, 243, 0.05);\n\t\t\t\t\t\tborder: 2rpx dashed #2196F3;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.category-name {\n\t\t\t\t\t\tcolor: #2196F3;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t&.active {\n\t\t\t\t\t\t.category-icon {\n\t\t\t\t\t\t\tbackground-color: rgba(33, 150, 243, 0.1);\n\t\t\t\t\t\t\tborder: 2rpx solid #2196F3;\n\t\t\t\t\t\t\tbox-shadow: 0 6rpx 16rpx rgba(33, 150, 243, 0.25);\n\t\t\t\t\t\t\ttransform: translateY(-4rpx);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.category-name {\n\t\t\t\t\t\t\tcolor: #2196F3;\n\t\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&.generate-icon-item {\n\t\t\t\t\t.category-icon {\n\t\t\t\t\t\tbackground-color: rgba(33, 150, 243, 0.05);\n\t\t\t\t\t\tborder: 2rpx dashed #2196F3;\n\t\t\t\t\t\t\n\t\t\t\t\t\t&:active {\n\t\t\t\t\t\t\tbackground-color: rgba(33, 150, 243, 0.2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.category-name {\n\t\t\t\t\t\tcolor: #2196F3;\n\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t&:active {\n\t\t\t\t\t\topacity: 0.7;\n\t\t\t\t\t\ttransform: scale(0.95);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t// 重试按钮样式\n\t\t.retry-btn {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tpadding: 20rpx;\n\t\t\tmargin-top: 20rpx;\n\t\t\tbackground-color: rgba(255, 102, 0, 0.08);\n\t\t\tborder-radius: 12rpx;\n\t\t\tborder: 1px dashed $pyq-vi-color;\n\n\t\t\t.retry-text {\n\t\t\t\tfont-size: 26rpx;\n\t\t\t\tcolor: $pyq-vi-color;\n\t\t\t\tmargin-left: 8rpx;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\n\t\t\t&:active {\n\t\t\t\tbackground-color: rgba(255, 102, 0, 0.15);\n\t\t\t\topacity: 0.8;\n\t\t\t}\n\t\t}\n\n\t\t.content-wrapper {\n\t\t\tposition: relative;\n\t\t\tmargin-bottom: 20rpx;\n\t\t}\n\n\t\t.format-toolbar {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbackground-color: #fff;\n\t\t\tborder-radius: 12rpx;\n\t\t\tbox-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.1);\n\t\t\tpadding: 20rpx;\n\t\t\tz-index: 100;\n\t\t\ttransform: translateY(-10rpx);\n\t\t\topacity: 0;\n\t\t\tpointer-events: none;\n\t\t\ttransition: all 0.3s ease;\n\t\t\t\n\t\t\t&.format-toolbar-visible {\n\t\t\t\topacity: 1;\n\t\t\t\ttransform: translateY(0);\n\t\t\t\tpointer-events: auto;\n\t\t\t}\n\t\t\t\n\t\t\t.toolbar-section {\n\t\t\t\tpadding-bottom: 20rpx;\n\t\t\t\tmargin-bottom: 20rpx;\n\t\t\t\tborder-bottom: 1px solid #f0f0f0;\n\t\t\t\t\n\t\t\t\t&:last-child {\n\t\t\t\t\tmargin-bottom: 0;\n\t\t\t\t\tpadding-bottom: 0;\n\t\t\t\t\tborder-bottom: none;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.toolbar-title {\n\t\t\t\tfont-size: 24rpx;\n\t\t\t\tcolor: #999;\n\t\t\t\tmargin-bottom: 12rpx;\n\t\t\t}\n\t\t\t\n\t\t\t.format-actions {\n\t\t\t\tdisplay: flex;\n\t\t\t\tgap: 20rpx;\n\t\t\t\t\n\t\t\t\t.format-btn {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tpadding: 10rpx;\n\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\t\n\t\t\t\t\t&:active {\n\t\t\t\t\t\tbackground-color: #e0e0e0;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.format-icon {\n\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\tcolor: #333;\n\t\t\t\t\t\tmargin-bottom: 4rpx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.format-label {\n\t\t\t\t\t\tfont-size: 22rpx;\n\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.phrase-list {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t\tgap: 16rpx;\n\t\t\t\t\n\t\t\t\t.phrase-item {\n\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\tborder-radius: 30rpx;\n\t\t\t\t\tpadding: 8rpx 20rpx;\n\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\tcolor: #666;\n\t\t\t\t\t\n\t\t\t\t\t&:active {\n\t\t\t\t\t\tbackground-color: #e0e0e0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.clear-btn {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tbackground-color: rgba(255, 59, 48, 0.1);\n\t\t\t\tborder-radius: 8rpx;\n\t\t\t\tpadding: 12rpx;\n\t\t\t\t\n\t\t\t\ttext {\n\t\t\t\t\tcolor: #ff3b30;\n\t\t\t\t\tfont-size: 26rpx;\n\t\t\t\t\tmargin-left: 8rpx;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&:active {\n\t\t\t\t\tbackground-color: rgba(255, 59, 48, 0.2);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.toolbar-close {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 12rpx;\n\t\t\t\tright: 12rpx;\n\t\t\t\twidth: 40rpx;\n\t\t\t\theight: 40rpx;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\t\n\t\t\t\t&:active {\n\t\t\t\t\tbackground-color: #f0f0f0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.action-btns {\n\t\t\t\tdisplay: flex;\n\t\t\t\tgap: 20rpx;\n\t\t\t\t\n\t\t\t\t.action-btn {\n\t\t\t\t\tflex: 1;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tpadding: 16rpx;\n\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\t\n\t\t\t\t\ttext {\n\t\t\t\t\t\tmargin-left: 8rpx;\n\t\t\t\t\t\tfont-size: 26rpx;\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t&.primary {\n\t\t\t\t\t\tbackground-color: $pyq-vi-color;\n\t\t\t\t\t\t\n\t\t\t\t\t\t&:active {\n\t\t\t\t\t\t\topacity: 0.8;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t&.danger {\n\t\t\t\t\t\tbackground-color: #ff3b30;\n\t\t\t\t\t\t\n\t\t\t\t\t\t&:active {\n\t\t\t\t\t\t\topacity: 0.8;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.content-area {\n\t\t\tposition: relative;\n\t\t\tborder: 1px solid #e0e0e0;\n\t\t\tborder-radius: 12rpx;\n\t\t\tbackground-color: #fff;\n\t\t\tmin-height: 170rpx;\n\t\t\tmax-height: 800rpx;\n\t\t\tpadding: 0;\n\t\t\tbox-sizing: border-box;\n\t\t\toverflow: hidden;\n\t\t\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.05);\n\t\t\ttransition: height 0.2s ease-out;\n\t\t\t\n\t\t\t.content-input {\n\t\t\t\twidth: 100%;\n\t\t\t\tmin-height: 120rpx;\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tline-height: 1.5;\n\t\t\t\tcolor: #333;\n\t\t\t\tpadding: 20rpx;\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder: none;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tword-break: break-word;\n\t\t\t\twhite-space: pre-wrap;\n\t\t\t\toverflow-wrap: break-word;\n\t\t\t\ttext-align: left;\n\t\t\t\tuser-select: text;\n\t\t\t\tcaret-color: $pyq-vi-color;\n\t\t\t\tletter-spacing: 0.5px;\n\t\t\t\ttouch-action: manipulation;\n\t\t\t\t-webkit-user-select: text;\n\t\t\t\ttransition: all 0.2s ease-out;\n\t\t\t\tz-index: 1;\n\t\t\t\tposition: relative;\n\t\t\t\t\n\t\t\t\t&:focus {\n\t\t\t\t\toutline: none;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.content-footer {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\talign-items: center;\n\t\t\t\tpadding: 8rpx 16rpx;\n\t\t\t\tbackground-color: #f9f9f9;\n\t\t\t\tborder-top: 1px solid #eee;\n\t\t\t\t\n\t\t\t\t.word-count {\n\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\tcolor: #999;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.text-toolbar {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tgap: 20rpx;\n\t\t\t\t\t\n\t\t\t\t\t.toolbar-btn {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t// background-color: #f0f0f0;\n\t\t\t\t\t\tpadding: 6rpx 12rpx;\n\t\t\t\t\t\tborder-radius: 30rpx;\n\t\t\t\t\t\t\n\t\t\t\t\t\ttext {\n\t\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t\t\tmargin-left: 4rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t&:active {\n\t\t\t\t\t\t\tbackground-color: #e0e0e0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t&:focus-within {\n\t\t\t\tborder-color: $pyq-vi-color;\n\t\t\t\tbox-shadow: 0 0 0 2px rgba($pyq-vi-color, 0.1);\n\t\t\t}\n\t\t}\n\n\t\t.media-section {\n\t\t\tmargin-bottom: 32rpx;\n\t\t}\n\n\t\t.images {\n\t\t\tmargin-bottom: 32rpx;\n\n\t\t\t.upload-notice {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tbackground-color: rgba(33, 150, 243, 0.08);\n\t\t\t\tpadding: 12rpx 16rpx;\n\t\t\t\tborder-radius: 8rpx;\n\t\t\t\tmargin-bottom: 16rpx;\n\t\t\t\t\n\t\t\t\ttext {\n\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\tcolor: #2196F3;\n\t\t\t\t\tmargin-left: 8rpx;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.tip {\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin-top: 16rpx;\n\t\t\t\tfont-size: 24rpx;\n\t\t\t\tcolor: $pyq-text-color-helper;\n\t\t\t}\n\t\t}\n\n\t\t.video {\n\t\t\t.video-link-preview {\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding: 20rpx;\n\t\t\t\tmargin-bottom: 16rpx;\n\t\t\t\tbackground-color: #f7f7f7;\n\t\t\t\tborder-radius: 8rpx;\n\t\t\t\toverflow: hidden;\n\n\t\t\t\t.link-container {\n\t\t\t\t\tpadding-right: 60rpx; // 为删除按钮留出空间\n\t\t\t\t\tword-break: break-all;\n\t\t\t\t}\n\n\t\t\t\t.link-text {\n\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\tcolor: #333;\n\t\t\t\t\tline-height: 1.5;\n\t\t\t\t}\n\n\t\t\t\t.delete-btn {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 15rpx;\n\t\t\t\t\tright: 15rpx;\n\t\t\t\t\tbackground: rgba(255, 0, 0, 0.7);\n\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\tpadding: 8rpx;\n\t\t\t\t\tz-index: 10;\n\t\t\t\t\twidth: 40rpx;\n\t\t\t\t\theight: 40rpx;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.video-link-input {\n\t\t\t\twidth: 100%;\n\t\t\t\tmargin-bottom: 16rpx;\n\t\t\t\t\n\t\t\t\t.input-container {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tbackground-color: #f7f7f7;\n\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\tpadding: 10rpx 20rpx;\n\t\t\t\t\t\n\t\t\t\t\t.link-input {\n\t\t\t\t\t\tflex: 1;\n\t\t\t\t\t\theight: 70rpx;\n\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\tpadding: 0 20rpx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.tip {\n\t\t\t\tdisplay: block;\n\t\t\t\tfont-size: 24rpx;\n\t\t\t\tcolor: $pyq-text-color-helper;\n\t\t\t}\n\t\t}\n\n\t\t.publish {\n\t\t\t.publish-btn {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 88rpx;\n\t\t\t\tline-height: 88rpx;\n\t\t\t\tbackground: linear-gradient(to right, $pyq-vi-color, rgba($pyq-vi-color, 0.6));\n\t\t\t\tcolor: #fff;\n\t\t\t\tfont-size: 32rpx;\n\t\t\t\tborder-radius: 44rpx;\n\n\t\t\t\t&:active {\n\t\t\t\t\topacity: 0.8;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// 图标自定义面板样式\n\t\t.icon-customize-overlay {\n\t\t\tposition: fixed;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tbackground-color: rgba(0, 0, 0, 0.6);\n\t\t\tz-index: 9999;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\t\n\t\t\t.icon-customize-panel {\n\t\t\t\twidth: 80%;\n\t\t\t\tmax-width: 600rpx;\n\t\t\t\tbackground-color: #fff;\n\t\t\t\tborder-radius: 20rpx;\n\t\t\t\tpadding: 30rpx;\n\t\t\t\tbox-shadow: 0 8rpx 24rpx rgba(0, 0, 0, 0.15);\n\t\t\t\t\n\t\t\t\t.icon-customize-header {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tmargin-bottom: 30rpx;\n\t\t\t\t\t\n\t\t\t\t\t.panel-title {\n\t\t\t\t\t\tfont-size: 32rpx;\n\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t\tcolor: #333;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.close-btn {\n\t\t\t\t\t\tpadding: 10rpx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.icon-preview {\n\t\t\t\t\twidth: 200rpx;\n\t\t\t\t\theight: 200rpx;\n\t\t\t\t\tmargin: 0 auto 30rpx;\n\t\t\t\t\tborder: 1px solid #eee;\n\t\t\t\t\tborder-radius: 20rpx;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\n\t\t\t\t\t.preview-image {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\tobject-fit: contain;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.customize-controls {\n\t\t\t\t\tmargin-bottom: 30rpx;\n\t\t\t\t\t\n\t\t\t\t\t.control-item {\n\t\t\t\t\t\tmargin-bottom: 20rpx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t.control-label {\n\t\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t\t\tmargin-bottom: 10rpx;\n\t\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.customize-buttons {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tgap: 20rpx;\n\t\t\t\t\t\n\t\t\t\t\tbutton {\n\t\t\t\t\t\tflex: 1;\n\t\t\t\t\t\theight: 80rpx;\n\t\t\t\t\t\tline-height: 80rpx;\n\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\tborder-radius: 40rpx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.cancel-btn {\n\t\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.save-btn {\n\t\t\t\t\t\tbackground-color: $pyq-vi-color;\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/* 修改 picker 确认按钮的颜色 */\n\t:deep(.uni-picker-container) {\n\t\t.uni-picker-action {\n\t\t\tcolor: $pyq-vi-color !important;\n\t\t}\n\t}\n\n\t/* 移除文本选择样式的全局样式 - 会影响所有textarea */\n\t:deep(page) {\n\t\t/* 微信小程序文本选择样式 */\n\t\t/* stylelint-disable-next-line */\n\t\ttext::selection,\n\t\ttextarea::selection {\n\t\t\tbackground-color: rgba(255, 102, 0, 0.2) !important; /* 更明显的选择背景色 */\n\t\t}\n\t}\n\n\t/* 覆盖小程序默认的选中样式 */\n\t.selecting {\n\t\t/* 针对微信小程序特定选择样式的覆盖 */\n\t\tposition: relative;\n\t\tuser-select: auto;\n\t\t-webkit-user-select: auto; /* 增加WebKit支持 */\n\t\t\n\t\t&::before {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tpointer-events: none;\n\t\t\tz-index: 5;\n\t\t}\n\t}\n\t\n\t.image-list {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 20rpx;\n\t\t\n\t\t.image-item {\n\t\t\tposition: relative;\n\t\t\twidth: 200rpx;\n\t\t\theight: 200rpx;\n\t\t\t\n\t\t\timage {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t// 添加样式表明图片可点击\n\t\t\t\t&:active {\n\t\t\t\t\topacity: 0.8;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.delete-btn {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 15rpx;\n\t\t\t\tright: 15rpx;\n\t\t\t\tbackground: rgba(255, 0, 0, 0.7);\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tpadding: 8rpx;\n\t\t\t\tz-index: 10;\n\t\t\t\twidth: 40rpx;\n\t\t\t\theight: 40rpx;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t}\n\n\t\t\t.progress-overlay {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tbackground: rgba(0, 0, 0, 0.5);\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tborder-radius: 8rpx;\n\n\t\t\t\t.progress-text {\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\tmargin-bottom: 10rpx;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\ttext-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);\n\t\t\t\t}\n\n\t\t\t\t.progress-bar {\n\t\t\t\t\twidth: 80%;\n\t\t\t\t\theight: 4rpx;\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.3);\n\t\t\t\t\tborder-radius: 2rpx;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\t\n\t\t\t\t\t.progress {\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\tbackground: linear-gradient(to right, #fff, #2196F3);\n\t\t\t\t\t\tborder-radius: 2rpx;\n\t\t\t\t\t\ttransition: width 0.3s ease;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.upload-btn {\n\t\t\twidth: 200rpx;\n\t\t\theight: 200rpx;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tbackground-color: #f7f7f7;\n\t\t\tborder-radius: 8rpx;\n\t\t}\n\t}\n\n\t// 添加视频转换中的动画样式\n\t.converting-overlay {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground: rgba(0, 0, 0, 0.7);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tborder-radius: 8rpx;\n\t\tz-index: 5;\n\t\t\n\t\t.converting-spinner {\n\t\t\twidth: 60rpx;\n\t\t\theight: 60rpx;\n\t\t\tborder: 4rpx solid rgba(255, 255, 255, 0.3);\n\t\t\tborder-top: 4rpx solid #fff;\n\t\t\tborder-radius: 50%;\n\t\t\tanimation: spin 1s linear infinite;\n\t\t\tmargin-bottom: 20rpx;\n\t\t}\n\t\t\n\t\t.converting-text {\n\t\t\tcolor: #fff;\n\t\t\tfont-size: 28rpx;\n\t\t}\n\t}\n\n\t// 添加旋转动画\n\t@keyframes spin {\n\t\t0% { transform: rotate(0deg); }\n\t\t100% { transform: rotate(360deg); }\n\t}\n\n\t// 优化整体布局\n\t.article-add {\n\t\tpadding: 20rpx 30rpx; // 减小整体内边距\n\t\t\n\t\t.form-item {\n\t\t\tmargin-bottom: 20rpx; // 减小表单项之间的间距\n\t\t}\n\t\t\n\t\t.section-title {\n\t\t\tfont-size: 28rpx; // 减小标题字体大小\n\t\t\tmargin-bottom: 10rpx; // 减小标题底部边距\n\t\t}\n\t}\n\n\t/* 添加当前仅显示本地分类的提示样式 */\n\t.location-only-tip {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tbackground-color: rgba(33, 150, 243, 0.08);\n\t\tpadding: 8rpx 16rpx;\n\t\tborder-radius: 8rpx;\n\t\tmargin-bottom: 16rpx;\n\t\t\n\t\ttext {\n\t\t\tfont-size: 24rpx;\n\t\t\tcolor: #2196F3;\n\t\t\tmargin-left: 8rpx;\n\t\t}\n\t}\n\n\t// 表情符号面板样式\n\t.emoji-panel {\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbackground-color: #fff;\n\t\tborder-radius: 20rpx 20rpx 0 0;\n\t\tpadding: 20rpx;\n\t\tbox-shadow: 0 -4rpx 12rpx rgba(0, 0, 0, 0.1);\n\t\tz-index: 999;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmax-height: 50vh;\n\t\t\n\t\t.emoji-header {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t\tpadding-bottom: 16rpx;\n\t\t\tmargin-bottom: 16rpx;\n\t\t\tborder-bottom: 1px solid #f0f0f0;\n\t\t\t\n\t\t\t.emoji-title {\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: #333;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t\t\n\t\t\t.emoji-close {\n\t\t\t\tpadding: 8rpx;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\n\t\t\t\t&:active {\n\t\t\t\t\tbackground-color: #e0e0e0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.emoji-tabs {\n\t\t\tdisplay: flex;\n\t\t\tborder-bottom: 1px solid #f0f0f0;\n\t\t\tmargin-bottom: 16rpx;\n\t\t\t\n\t\t\t.emoji-tab {\n\t\t\t\tpadding: 12rpx 24rpx;\n\t\t\t\tfont-size: 26rpx;\n\t\t\t\tcolor: #666;\n\t\t\t\t\n\t\t\t\t&.active {\n\t\t\t\t\tcolor: $pyq-vi-color;\n\t\t\t\t\tborder-bottom: 2px solid $pyq-vi-color;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.emoji-content {\n\t\t\tflex: 1;\n\t\t\toverflow-y: auto;\n\t\t\t\n\t\t\t.emoji-list {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t\tpadding: 10rpx;\n\t\t\t\t\n\t\t\t\t.emoji-item {\n\t\t\t\t\twidth: 70rpx;\n\t\t\t\t\theight: 70rpx;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tfont-size: 36rpx;\n\t\t\t\t\tmargin: 10rpx;\n\t\t\t\t\t\n\t\t\t\t\t&:active {\n\t\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 模板面板样式\n\t.template-panel {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground-color: rgba(0, 0, 0, 0.6);\n\t\tz-index: 999;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\t\n\t\t.template-container {\n\t\t\twidth: 80%;\n\t\t\tmax-width: 600rpx;\n\t\t\tbackground-color: #fff;\n\t\t\tborder-radius: 12rpx;\n\t\t\toverflow: hidden;\n\t\t\tmax-height: 70vh;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\t\n\t\t\t.template-header {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\talign-items: center;\n\t\t\t\tpadding: 20rpx;\n\t\t\t\tbackground-color: #f9f9f9;\n\t\t\t\tborder-bottom: 1px solid #eee;\n\t\t\t\t\n\t\t\t\t.template-title {\n\t\t\t\t\tfont-size: 30rpx;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tcolor: #333;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.close-btn {\n\t\t\t\t\tpadding: 10rpx;\n\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\t\n\t\t\t\t\t&:active {\n\t\t\t\t\t\tbackground-color: #e0e0e0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t.template-list {\n\t\t\t\tflex: 1;\n\t\t\t\toverflow-y: auto;\n\t\t\t\tpadding: 20rpx;\n\t\t\t\t\n\t\t\t\t.template-item {\n\t\t\t\t\tpadding: 16rpx;\n\t\t\t\t\tborder-radius: 12rpx;\n\t\t\t\t\tbackground-color: #f9f9f9;\n\t\t\t\t\tmargin-bottom: 16rpx;\n\t\t\t\t\tborder: 1px solid #eee;\n\t\t\t\t\t\n\t\t\t\t\t&:active {\n\t\t\t\t\t\tbackground-color: rgba($pyq-vi-color, 0.1);\n\t\t\t\t\t\tborder-color: rgba($pyq-vi-color, 0.3);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.template-item-header {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tmargin-bottom: 8rpx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t.template-item-title {\n\t\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t\t\tcolor: #333;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.template-preview {\n\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t\tline-height: 1.4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 添加图片预览样式\n\t.image-preview-overlay {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground-color: rgba(0, 0, 0, 0.9);\n\t\tz-index: 9999;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\t\n\t\t.image-preview-container {\n\t\t\tposition: relative;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\t\n\t\t\t.preview-image {\n\t\t\t\tmax-width: 100%;\n\t\t\t\tmax-height: 100%;\n\t\t\t}\n\t\t\t\n\t\t\t.preview-close {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 40rpx;\n\t\t\t\tright: 40rpx;\n\t\t\t\twidth: 80rpx;\n\t\t\t\theight: 80rpx;\n\t\t\t\tbackground-color: rgba(0, 0, 0, 0.5);\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t}\n\t\t}\n\t}\n</style>","import MiniProgramPage from 'D:/代码测试/wx2/pages/fabu/fabu.vue'\nwx.createPage(MiniProgramPage)"],"names":["useUserInfoStore","uniCloud","ref","computed","uni","getDefaultImage","fixImageUrl","onLoad","tempFilePath","onMounted","nextTick","res"],"mappings":"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"}