{"version":3,"file":"publish.js","sources":["pages/publish/publish.vue","D:/代码测试/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcHVibGlzaC9wdWJsaXNoLnZ1ZQ"],"sourcesContent":["<template>\r\n    <view class=\"publish-container\">\r\n        <!-- 顶部导航栏 -->\r\n        <view class=\"nav-bar\">\r\n            <text class=\"title\">{{ mode === 'edit' ? '编辑文章' : '发布文章' }}</text>\r\n        </view>\r\n\r\n        <!-- 内容区域 -->\r\n        <view class=\"content-area\">\r\n            <!-- 文本输入区域 -->\r\n            <view class=\"input-area\">\r\n                <textarea\r\n                    v-model=\"content\"\r\n                    class=\"content-textarea\"\r\n                    placeholder=\"分享新鲜事...\"\r\n                    maxlength=\"500\"\r\n                    auto-height\r\n                ></textarea>\r\n                <text class=\"word-count\">{{content.length}}/500</text>\r\n            </view>\r\n\r\n            <!-- 图片上传区域 -->\r\n            <view class=\"image-area\" v-if=\"imageList.length > 0 || !videoUrl\">\r\n                <view class=\"image-grid\">\r\n                    <view \r\n                        v-for=\"(item, index) in imageList\" \r\n                        :key=\"index\"\r\n                        class=\"image-item\"\r\n                    >\r\n                        <image \r\n                            :src=\"item.url || item.tempUrl\" \r\n                            mode=\"aspectFill\"\r\n                            @tap=\"previewImage(index)\"\r\n                        />\r\n                        <view class=\"delete-btn\" @tap=\"removeImage(index)\">\r\n                            <uni-icons type=\"close\" size=\"16\" color=\"#fff\"></uni-icons>\r\n                        </view>\r\n                    </view>\r\n                    \r\n                    <!-- 添加图片按钮 -->\r\n                    <view \r\n                        class=\"add-image-btn\"\r\n                        @tap=\"chooseImage\"\r\n                        v-if=\"imageList.length < 9\"\r\n                    >\r\n                        <uni-icons type=\"camera\" size=\"30\" color=\"#999\"></uni-icons>\r\n                        <text>添加图片</text>\r\n                    </view>\r\n                </view>\r\n            </view>\r\n\r\n            <!-- 视频上传区域 -->\r\n            <view class=\"video-area\" v-if=\"videoUrl || imageList.length === 0\">\r\n                <video \r\n                    v-if=\"videoUrl\"\r\n                    :src=\"videoUrl\"\r\n                    class=\"video-player\"\r\n                    controls\r\n                ></video>\r\n                <view \r\n                    v-else\r\n                    class=\"upload-video-btn\"\r\n                    @tap=\"chooseVideo\"\r\n                >\r\n                    <uni-icons type=\"videocam\" size=\"30\" color=\"#999\"></uni-icons>\r\n                    <text>添加视频</text>\r\n                </view>\r\n                <view \r\n                    class=\"delete-video-btn\"\r\n                    v-if=\"videoUrl\"\r\n                    @tap=\"removeVideo\"\r\n                >\r\n                    <uni-icons type=\"trash\" size=\"16\" color=\"#fff\"></uni-icons>\r\n                    <text>删除视频</text>\r\n                </view>\r\n            </view>\r\n\r\n            <!-- 分类选择区域 -->\r\n            <view class=\"category-area\">\r\n                <text class=\"area-title\">选择分类</text>\r\n                <scroll-view \r\n                    class=\"category-scroll\" \r\n                    scroll-x\r\n                    show-scrollbar=\"false\"\r\n                >\r\n                    <view class=\"category-list\">\r\n                        <view\r\n                            v-for=\"(item, index) in categoryList\"\r\n                            :key=\"item._id\"\r\n                            class=\"category-item\"\r\n                            :class=\"{ active: selectedCategory === item._id }\"\r\n                            @tap=\"selectCategory(item._id)\"\r\n                        >\r\n                            <image \r\n                                :src=\"item.cate_img\" \r\n                                mode=\"aspectFit\"\r\n                                class=\"category-icon\"\r\n                            />\r\n                            <text class=\"category-name\">{{item.cate_name}}</text>\r\n                        </view>\r\n                    </view>\r\n                </scroll-view>\r\n            </view>\r\n        </view>\r\n\r\n        <!-- 底部按钮区域 -->\r\n        <view class=\"bottom-area\">\r\n            <button \r\n                class=\"submit-btn\"\r\n                :disabled=\"isSubmitting\"\r\n                @tap=\"submitContent\"\r\n            >\r\n                {{ mode === 'edit' ? '保存修改' : '发布' }}\r\n            </button>\r\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, nextTick } from 'vue'\r\nimport { useUserInfoStore } from '@/store/user.js'\r\n\r\nconst userStore = useUserInfoStore()\r\nconst articleApi = uniCloud.importObject('articleWx', { customUI: true })\r\n\r\n// 状态变量\r\nconst mode = ref('add')\r\nconst articleId = ref('')\r\nconst content = ref('')\r\nconst imageList = ref([])\r\nconst videoUrl = ref('')\r\nconst categoryList = ref([])\r\nconst selectedCategory = ref('')\r\nconst isSubmitting = ref(false)\r\n\r\n// 获取分类列表\r\nconst getCategories = async () => {\r\n    try {\r\n        const res = await articleApi.addReady()\r\n        if (res && res.cateList) {\r\n            categoryList.value = res.cateList\r\n        }\r\n    } catch (err) {\r\n        console.error('获取分类失败:', err)\r\n        uni.showToast({\r\n            title: '获取分类失败',\r\n            icon: 'none'\r\n        })\r\n    }\r\n}\r\n\r\n// 选择分类\r\nconst selectCategory = (id) => {\r\n    selectedCategory.value = id\r\n}\r\n\r\n// 选择图片\r\nconst chooseImage = async () => {\r\n    try {\r\n        if (imageList.value.length >= 9) {\r\n            uni.showToast({\r\n                title: '最多选择9张图片',\r\n                icon: 'none'\r\n            })\r\n            return\r\n        }\r\n\r\n        const res = await uni.chooseImage({\r\n            count: 9 - imageList.value.length,\r\n            sizeType: ['compressed'],\r\n            sourceType: ['album', 'camera']\r\n        })\r\n\r\n        // 上传图片\r\n        for (let tempFilePath of res.tempFilePaths) {\r\n            const uploadRes = await uploadFile(tempFilePath)\r\n            if (uploadRes.fileID) {\r\n                imageList.value.push({\r\n                    url: uploadRes.fileID,\r\n                    tempUrl: tempFilePath\r\n                })\r\n            }\r\n        }\r\n    } catch (err) {\r\n        if (err.errMsg !== 'chooseImage:fail cancel') {\r\n            uni.showToast({\r\n                title: '选择图片失败',\r\n                icon: 'none'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// 选择视频\r\nconst chooseVideo = async () => {\r\n    try {\r\n        const res = await uni.chooseVideo({\r\n            sourceType: ['album', 'camera'],\r\n            maxDuration: 60,\r\n            camera: 'back'\r\n        })\r\n\r\n        // 上传视频\r\n        const uploadRes = await uploadFile(res.tempFilePath)\r\n        if (uploadRes.fileID) {\r\n            videoUrl.value = uploadRes.fileID\r\n        }\r\n    } catch (err) {\r\n        if (err.errMsg !== 'chooseVideo:fail cancel') {\r\n            uni.showToast({\r\n                title: '选择视频失败',\r\n                icon: 'none'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// 上传文件\r\nconst uploadFile = async (tempFilePath) => {\r\n    try {\r\n        const result = await uniCloud.uploadFile({\r\n            filePath: tempFilePath,\r\n            cloudPath: `${Date.now()}-${Math.random().toString(36).slice(-6)}`\r\n        })\r\n        return result\r\n    } catch (err) {\r\n        console.error('上传文件失败:', err)\r\n        throw err\r\n    }\r\n}\r\n\r\n// 移除图片\r\nconst removeImage = (index) => {\r\n    imageList.value.splice(index, 1)\r\n}\r\n\r\n// 移除视频\r\nconst removeVideo = () => {\r\n    videoUrl.value = ''\r\n}\r\n\r\n// 预览图片\r\nconst previewImage = (index) => {\r\n    const urls = imageList.value.map(item => item.url || item.tempUrl)\r\n    uni.previewImage({\r\n        urls,\r\n        current: index\r\n    })\r\n}\r\n\r\n// 获取文章详情\r\nconst getArticleDetail = async (id) => {\r\n    try {\r\n        console.log('开始获取文章详情, ID:', id)\r\n        uni.showLoading({\r\n            title: '加载中...',\r\n            mask: true\r\n        })\r\n\r\n        const res = await articleApi.getArticleDetal(id)\r\n        console.log('获取到的原始数据:', res)\r\n\r\n        if (!res || !res.articleRes || !res.articleRes.data || !res.articleRes.data.length) {\r\n            throw new Error('获取文章详情失败')\r\n        }\r\n\r\n        const articleData = res.articleRes.data[0]\r\n        console.log('文章数据:', articleData)\r\n        \r\n        // 填充表单数据\r\n        content.value = articleData.content || ''\r\n        selectedCategory.value = articleData.cate_id\r\n        \r\n        // 处理图片数据\r\n        if (articleData.images && Array.isArray(articleData.images)) {\r\n            console.log('原始图片数据:', articleData.images)\r\n            imageList.value = articleData.images.map(img => {\r\n                // 确保返回正确的图片对象格式\r\n                if (typeof img === 'string') {\r\n                    // 如果是字符串，创建完整的图片对象\r\n                    return {\r\n                        url: img,\r\n                        tempUrl: img\r\n                    }\r\n                } else if (typeof img === 'object') {\r\n                    // 如果是对象，确保有必要的字段\r\n                    return {\r\n                        url: img.url || img.compressedURL || img.thumbnailURL || '',\r\n                        tempUrl: img.url || img.compressedURL || img.thumbnailURL || '',\r\n                        compressedURL: img.compressedURL || img.url || '',\r\n                        thumbnailURL: img.thumbnailURL || img.url || ''\r\n                    }\r\n                }\r\n                return null\r\n            }).filter(img => img !== null) // 过滤掉无效的图片\r\n        } else {\r\n            imageList.value = []\r\n        }\r\n        console.log('处理后的图片列表:', imageList.value)\r\n        \r\n        // 处理视频数据\r\n        if (articleData.videoURL) {\r\n            console.log('视频URL:', articleData.videoURL)\r\n            videoUrl.value = articleData.videoURL\r\n        } else {\r\n            videoUrl.value = ''\r\n        }\r\n\r\n        // 等待DOM更新\r\n        await nextTick()\r\n        \r\n        // 打印最终加载的数据\r\n        console.log('最终加载的文章数据:', {\r\n            content: content.value,\r\n            category: selectedCategory.value,\r\n            imagesCount: imageList.value.length,\r\n            videoUrl: videoUrl.value\r\n        })\r\n\r\n        uni.hideLoading()\r\n    } catch (err) {\r\n        console.error('获取文章详情失败:', err)\r\n        uni.hideLoading()\r\n        uni.showToast({\r\n            title: '获取文章详情失败',\r\n            icon: 'none',\r\n            duration: 2000\r\n        })\r\n    }\r\n}\r\n\r\n// 提交内容\r\nconst submitContent = async () => {\r\n    try {\r\n        if (isSubmitting.value) return\r\n        \r\n        // 表单验证\r\n        if (!content.value.trim()) {\r\n            uni.showToast({\r\n                title: '请输入内容',\r\n                icon: 'none'\r\n            })\r\n            return\r\n        }\r\n        \r\n        if (!selectedCategory.value) {\r\n            uni.showToast({\r\n                title: '请选择分类',\r\n                icon: 'none'\r\n            })\r\n            return\r\n        }\r\n\r\n        isSubmitting.value = true\r\n        \r\n        // 构建提交数据\r\n        const params = {\r\n            content: content.value.trim(),\r\n            cate_id: selectedCategory.value,\r\n            user_id: userStore.userInfo.uid,\r\n            images: imageList.value.map(img => ({\r\n                url: img.url,\r\n                thumbnailURL: img.url,\r\n                compressedURL: img.url\r\n            })),\r\n            videoURL: videoUrl.value\r\n        }\r\n\r\n        // 如果是编辑模式，添加文章ID\r\n        if (mode.value === 'edit') {\r\n            params.article_id = articleId.value\r\n        }\r\n\r\n        // 显示加载提示\r\n        uni.showLoading({\r\n            title: mode.value === 'edit' ? '正在保存...' : '正在发布...',\r\n            mask: true\r\n        })\r\n\r\n        let res\r\n        if (mode.value === 'edit') {\r\n            res = await articleApi.updateArticle(params)\r\n        } else {\r\n            res = await articleApi.addArticle(params)\r\n        }\r\n\r\n        // 隐藏加载提示\r\n        uni.hideLoading()\r\n\r\n        if (res.code === 0) {\r\n            uni.showToast({\r\n                title: mode.value === 'edit' ? '修改成功' : '发布成功',\r\n                icon: 'success'\r\n            })\r\n            \r\n            // 延迟返回\r\n            setTimeout(() => {\r\n                uni.navigateBack({\r\n                    delta: 1,\r\n                    success: () => {\r\n                        // 触发刷新事件\r\n                        uni.$emit('articleUpdated', {\r\n                            type: mode.value,\r\n                            articleId: mode.value === 'edit' ? articleId.value : res.id\r\n                        })\r\n                    }\r\n                })\r\n            }, 1500)\r\n        } else {\r\n            throw new Error(res.message || '操作失败')\r\n        }\r\n    } catch (err) {\r\n        console.error('提交失败:', err)\r\n        uni.hideLoading()\r\n        uni.showToast({\r\n            title: err.message || '提交失败',\r\n            icon: 'none'\r\n        })\r\n    } finally {\r\n        isSubmitting.value = false\r\n    }\r\n}\r\n\r\n// 页面加载\r\nonMounted(async () => {\r\n    try {\r\n        console.log('页面加载开始')\r\n        // 获取页面参数\r\n        const pages = getCurrentPages()\r\n        const currentPage = pages[pages.length - 1]\r\n        const options = currentPage.$page?.options || {}\r\n        \r\n        console.log('页面参数:', options)\r\n        \r\n        // 获取分类列表\r\n        await getCategories()\r\n        \r\n        // 如果是编辑模式，加载文章详情\r\n        if (options.mode === 'edit' && options.article_id) {\r\n            console.log('进入编辑模式, 文章ID:', options.article_id)\r\n            mode.value = 'edit'\r\n            articleId.value = options.article_id\r\n            await getArticleDetail(options.article_id)\r\n        }\r\n    } catch (err) {\r\n        console.error('页面加载失败:', err)\r\n        uni.showToast({\r\n            title: '页面加载失败',\r\n            icon: 'none'\r\n        })\r\n    }\r\n})\r\n</script>\r\n\r\n<style>\r\n.publish-container {\r\n    min-height: 100vh;\r\n    background-color: #f5f5f5;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.nav-bar {\r\n    background-color: #fff;\r\n    height: 88rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 100;\r\n    border-bottom: 1rpx solid #eee;\r\n}\r\n\r\n.title {\r\n    font-size: 32rpx;\r\n    font-weight: 500;\r\n    color: #333;\r\n}\r\n\r\n.content-area {\r\n    flex: 1;\r\n    padding: 20rpx;\r\n}\r\n\r\n.input-area {\r\n    background-color: #fff;\r\n    border-radius: 12rpx;\r\n    padding: 20rpx;\r\n    margin-bottom: 20rpx;\r\n    position: relative;\r\n}\r\n\r\n.content-textarea {\r\n    width: 100%;\r\n    min-height: 200rpx;\r\n    font-size: 28rpx;\r\n    line-height: 1.5;\r\n}\r\n\r\n.word-count {\r\n    position: absolute;\r\n    bottom: 20rpx;\r\n    right: 20rpx;\r\n    font-size: 24rpx;\r\n    color: #999;\r\n}\r\n\r\n.image-area {\r\n    background-color: #fff;\r\n    border-radius: 12rpx;\r\n    padding: 20rpx;\r\n    margin-bottom: 20rpx;\r\n}\r\n\r\n.image-grid {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20rpx;\r\n}\r\n\r\n.image-item {\r\n    width: 220rpx;\r\n    height: 220rpx;\r\n    position: relative;\r\n    border-radius: 8rpx;\r\n    overflow: hidden;\r\n}\r\n\r\n.image-item image {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n}\r\n\r\n.delete-btn {\r\n    position: absolute;\r\n    top: 10rpx;\r\n    right: 10rpx;\r\n    width: 40rpx;\r\n    height: 40rpx;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.add-image-btn {\r\n    width: 220rpx;\r\n    height: 220rpx;\r\n    background-color: #f8f8f8;\r\n    border: 2rpx dashed #ddd;\r\n    border-radius: 8rpx;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.add-image-btn text {\r\n    font-size: 24rpx;\r\n    color: #999;\r\n    margin-top: 10rpx;\r\n}\r\n\r\n.video-area {\r\n    background-color: #fff;\r\n    border-radius: 12rpx;\r\n    padding: 20rpx;\r\n    margin-bottom: 20rpx;\r\n}\r\n\r\n.video-player {\r\n    width: 100%;\r\n    height: 400rpx;\r\n    border-radius: 8rpx;\r\n}\r\n\r\n.upload-video-btn {\r\n    width: 100%;\r\n    height: 400rpx;\r\n    background-color: #f8f8f8;\r\n    border: 2rpx dashed #ddd;\r\n    border-radius: 8rpx;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.upload-video-btn text {\r\n    font-size: 24rpx;\r\n    color: #999;\r\n    margin-top: 10rpx;\r\n}\r\n\r\n.delete-video-btn {\r\n    margin-top: 20rpx;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 10rpx;\r\n    background-color: #ff4d4f;\r\n    border-radius: 8rpx;\r\n}\r\n\r\n.delete-video-btn text {\r\n    color: #fff;\r\n    font-size: 24rpx;\r\n    margin-left: 10rpx;\r\n}\r\n\r\n.category-area {\r\n    background-color: #fff;\r\n    border-radius: 12rpx;\r\n    padding: 20rpx;\r\n}\r\n\r\n.area-title {\r\n    font-size: 28rpx;\r\n    color: #333;\r\n    margin-bottom: 20rpx;\r\n    display: block;\r\n}\r\n\r\n.category-scroll {\r\n    width: 100%;\r\n    white-space: nowrap;\r\n}\r\n\r\n.category-list {\r\n    display: inline-flex;\r\n    padding: 10rpx 0;\r\n}\r\n\r\n.category-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-right: 30rpx;\r\n    padding: 10rpx 20rpx;\r\n    border-radius: 8rpx;\r\n    background-color: #f8f8f8;\r\n}\r\n\r\n.category-item.active {\r\n    background-color: #e6f7ff;\r\n}\r\n\r\n.category-icon {\r\n    width: 60rpx;\r\n    height: 60rpx;\r\n    margin-bottom: 10rpx;\r\n}\r\n\r\n.category-name {\r\n    font-size: 24rpx;\r\n    color: #666;\r\n}\r\n\r\n.category-item.active .category-name {\r\n    color: #1890ff;\r\n}\r\n\r\n.bottom-area {\r\n    padding: 20rpx;\r\n    background-color: #fff;\r\n    border-top: 1rpx solid #eee;\r\n}\r\n\r\n.submit-btn {\r\n    width: 100%;\r\n    height: 80rpx;\r\n    line-height: 80rpx;\r\n    background-color: #1890ff;\r\n    color: #fff;\r\n    font-size: 28rpx;\r\n    border-radius: 40rpx;\r\n    text-align: center;\r\n}\r\n\r\n.submit-btn[disabled] {\r\n    background-color: #ccc;\r\n    color: #fff;\r\n}\r\n</style> ","import MiniProgramPage from 'E:/wx2/pages/publish/publish.vue'\nwx.createPage(MiniProgramPage)"],"names":["useUserInfoStore","uniCloud","ref","uni","nextTick","onMounted","MiniProgramPage"],"mappings":"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"}