{"version":3,"file":"index.js","sources":["pages/index/index.vue","../../软件/HBuilderX/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<script setup>\n\timport { nextTick, onMounted, ref, onUnmounted, computed, watch, onActivated } from 'vue';\n\timport { testLogin } from '@/utils/isLogin'\n\timport { useUserInfoStore } from '@/store/user.js'\n\timport { onPullDownRefresh, onReachBottom, onPageScroll, onShow, onBackPress } from '@dcloudio/uni-app'\n\timport { fixImageUrl, getDefaultImage } from '@/utils/domainConfig.js'\n\t\n\t// 加载状态管理器\n\tconst loadingManager = {\n\t\tisLoading: false,\n\t\tshowLoading(title = '加载中...', mask = true) {\n\t\t\t// 只设置状态，不显示加载动画\n\t\t\tthis.isLoading = true;\n\t\t\t// 注释掉显示加载动画的代码\n\t\t\t// uni.showLoading({\n\t\t\t// \ttitle: title,\n\t\t\t// \tmask: mask\n\t\t\t// });\n\t\t},\n\t\thideLoading() {\n\t\t\tthis.isLoading = false;\n\t\t\t// 注释掉隐藏加载动画的代码\n\t\t\t// uni.hideLoading();\n\t\t}\n\t};\n\t\n\t// 头像点击状态控制\n\tconst avatarClickState = ref(true)\n\t\n\t// 获取权限状态\n\tconst getSendOnState = async () => {\n\t\ttry {\n\t\t\tconsole.log('首页正在获取按钮状态...');\n\t\t\t\n\t\t\tconst sendOnApi = uniCloud.importObject('sendOn', { customUI: true });\n\t\t\tconst res = await sendOnApi.get();\n\t\t\t\n\t\t\tif (res && res.data && res.data.length > 0) {\n\t\t\t\t// 获取头像点击状态\n\t\t\t\tconst serverAvatarClickState = res.data[0].avatarClick !== undefined ? res.data[0].avatarClick : true;\n\t\t\t\t\n\t\t\t\t// 更新头像点击状态\n\t\t\t\tavatarClickState.value = serverAvatarClickState;\n\t\t\t\t\n\t\t\t\tconsole.log('首页头像点击状态:', avatarClickState.value);\n\t\t\t} else {\n\t\t\t\tconsole.error('获取按钮状态失败: 数据格式不正确');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('获取按钮状态失败:', err);\n\t\t}\n\t}\n\t\n\t// 用户状态管理\n\tconst userStore = useUserInfoStore()\n\tconst paging = ref(null)\n\t// 分类\n\tconst cateList = ref([])\n\tconst activeIndex = ref(0)\n\t// 移除排序相关变量\n\tconst currentCateId = ref('');  // 当前选中的分类ID\n\t\n\t// 分类api\n\tconst cateApi = uniCloud.importObject('cateWx', { customUI: true })\n\t// 文章api\n\tconst articleApi = uniCloud.importObject('articleWx', { customUI: true })\n\t// 扩展存储api\n\tconst extStorageCo = uniCloud.importObject('fabuWx', { customUI: true })\n\t\n\t// 位置相关信息\n\tconst locationInfo = ref(null)\n\t\n\t// 每页加载数据条数\n\tconst pageSize = 8\n\n\t// 获取分类\n\tconst cateListGet = async () => {\n\t\ttry {\n\t\t\t// 显示加载提示\n\t\t\t// uni.showLoading({\n\t\t\t//\ttitle: '加载分类...',\n\t\t\t//\tmask: true\n\t\t\t// });\n\t\t\t\n\t\t\t// 首先获取用户位置\n\t\t\tlet locationRes = await uni.getLocation({\n\t\t\t\ttype: 'gcj02'\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.error('获取位置失败:', err)\n\t\t\t\t// 如果获取位置失败，使用默认坐标\n\t\t\t\treturn { longitude: 116.397428, latitude: 39.90923 }\n\t\t\t})\n\t\t\t\n\t\t\t// 获取分类数据\n\t\t\tconst res = await cateApi.get(null, false);\n\t\t\t\n\t\t\t// 检查返回结果\n\t\t\tif (!res || !res.data) {\n\t\t\t\tthrow new Error('获取分类失败，返回数据格式错误');\n\t\t\t}\n\t\t\t\n\t\t\t// 获取位置文本信息\n\t\t\tconst addrInfo = await articleApi.addReady(`${locationRes.longitude},${locationRes.latitude}`);\n\t\t\t\n\t\t\t// 存储位置信息\n\t\t\tlocationInfo.value = {\n\t\t\t\taddress: addrInfo.address || '未知地址',\n\t\t\t\tdistrict: addrInfo.district || '未知区域',\n\t\t\t\tlongitude: locationRes.longitude,\n\t\t\t\tlatitude: locationRes.latitude\n\t\t\t}\n\t\t\t\n\t\t\t// 处理分类数据，确保每个分类都有图标\n\t\t\tlet processedCateList = res.data.map(cate => {\n\t\t\t\t// 添加是否为当前区域的标记\n\t\t\t\tconst isLocationCategory = cate.cate_name && addrInfo.district && \n\t\t\t\t\t(cate.cate_name.includes(addrInfo.district) || addrInfo.district.includes(cate.cate_name));\n\t\t\t\t\n\t\t\t\treturn {\n\t\t\t\t\t...cate,\n\t\t\t\t\tcate_img: getCategoryIcon(cate),\n\t\t\t\t\tisLocationCategory: isLocationCategory,\n\t\t\t\t\tdistrict: isLocationCategory ? addrInfo.district : ''\n\t\t\t\t};\n\t\t\t});\n\t\t\t\n\t\t\t// 根据是否为当前区域排序，当前区域的分类排在前面\n\t\t\tprocessedCateList.sort((a, b) => {\n\t\t\t\tif (a.isLocationCategory && !b.isLocationCategory) return -1;\n\t\t\t\tif (!a.isLocationCategory && b.isLocationCategory) return 1;\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\t\n\t\t\t// 设置排序后的分类列表（移除5个限制）\n\t\t\tcateList.value = processedCateList;\n\t\t\tconsole.log('分类列表加载成功:', cateList.value);\n\t\t\t\n\t\t\t// 默认选中第一个分类\n\t\t\tif (processedCateList.length > 0) {\n\t\t\t\tcurrentCateId.value = processedCateList[0]._id;\n\t\t\t\tactiveIndex.value = 0;\n\t\t\t}\n\t\t\t\n\t\t\t// 重置页码并获取文章\n\t\t\tpageNo.value = 1;\n\t\t\tgetArticleList(currentCateId.value);\n\t\t\t\n\t\t} catch (err) {\n\t\t\tconsole.error('获取分类失败:', err);\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '获取分类失败，请重试',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2000\n\t\t\t});\n\t\t\t\n\t\t\t// 如果获取分类失败，获取所有文章\n\t\t\tgetArticleList();\n\t\t} finally {\n\t\t\tuni.hideLoading();\n\t\t}\n\t}\n\tconst pageNo = ref(1)\n\t\n\t// 切换分类\n\tconst hanleHeadTab = (index, id) => {\n\t\tactiveIndex.value = index\n\t\tpageNo.value = 1\n\t\tstatus.value = 'more'\n\t\t\n\t\t// 设置当前分类ID\n\t\tcurrentCateId.value = id;\n\t\tgetArticleList(id);\n\t}\n\t\n\t// 初始文章数据\n\tconst articleList = ref([])\n\tlet tempCateId = ''\n\t// 加载状态\n\tconst isLoading = ref(true);\n\t\n\t// 获取文章\n\tconst getArticleList = async (cate_id) => {\n\t\t// 避免重复请求\n\t\tif (loadingManager.isLoading) return;\n\t\t\n\t\ttry {\n\t\t\ttempCateId = cate_id || ''\n\t\t\tconsole.log(tempCateId, '临时id')\n\t\t\t\n\t\t\t// 显示加载提示\n\t\t\tloadingManager.showLoading('加载文章列表...', true)\n\t\t\tisLoading.value = true;\n\t\t\t\n\t\t\t// 调用API时传递分类ID参数，始终按最新排序\n\t\t\tconst res = await articleApi.getArticle(cate_id || '', pageNo.value, pageSize)\n\t\t\tconsole.log(res)\n\t\t\tarticleList.value = res.data\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '加载失败，请重试',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2000\n\t\t\t})\n\t\t} finally {\n\t\t\t// 确保请求完成后隐藏加载动画\n\t\t\tloadingManager.hideLoading()\n\t\t\tisLoading.value = false;\n\t\t}\n\t}\n\n\t// 监听下拉刷新\n\tonPullDownRefresh(async () => {\n\t\t// 避免重复请求\n\t\tif (loadingManager.isLoading) {\n\t\t\tuni.stopPullDownRefresh();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tpageNo.value = 1\n\t\tstatus.value = 'more'\n\t\ttry {\n\t\t\t// 下拉刷新时，获取当前分类下的文章\n\t\t\tawait getArticleList(tempCateId)\n\t\t} catch (err) {\n\t\t\tconsole.error('下拉刷新失败:', err)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '刷新失败，请重试',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t} finally {\n\t\t\t// 无论成功或失败，都停止下拉刷新\n\t\t\tuni.stopPullDownRefresh()\n\t\t}\n\t})\n\n\t// 加载更多\n\tconst status = ref('more') // 初始状态为 'more'\n\n\t// 文章列表触底时触发\n\tonReachBottom(async () => {\n\t\tconsole.log('触底')\n\t\t// 如果已经是 'noMore' 状态或正在加载中，直接返回\n\t\tif (status.value === 'noMore' || loadingManager.isLoading) return\n\t\t\n\t\t// 'loading' 状态\n\t\tstatus.value = 'loading'\n\n\t\ttry {\n\t\t\t// 显示加载提示\n\t\t\tloadingManager.showLoading('加载更多...', false)\n\t\t\t\n\t\t\t// 加载更多数据\n\t\t\tpageNo.value++\n\t\t\tconst res = await articleApi.getArticle(tempCateId, pageNo.value, pageSize)\n\n\t\t\t// 拼接新老数据\n\t\t\tarticleList.value = [...articleList.value, ...res.data]\n\n\t\t\t// 根据数据情况设置状态\n\t\t\tif (res.data.length > 0) {\n\t\t\t\tstatus.value = 'more' // 还有更多数据\n\t\t\t} else {\n\t\t\t\tstatus.value = 'noMore' // 没有更多数据了\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('加载更多失败:', err)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '加载失败，请重试',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\tstatus.value = 'more' // 失败时恢复为 'more' 状态\n\t\t} finally {\n\t\t\t// 确保请求完成后隐藏加载动画\n\t\t\tloadingManager.hideLoading()\n\t\t}\n\t})\n\n\n\t// 处理删除\n\tconst handleDelete = async (articleId) => {\n\t\ttry {\n\t\t\t// 添加确认提示\n\t\t\tuni.showModal({\n\t\t\t\ttitle: '确认删除',\n\t\t\t\tcontent: '确定要删除这篇文章吗？',\n\t\t\t\tsuccess: async (res) => {\n\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t// 显示加载提示\n\t\t\t\t\t\tloadingManager.showLoading('删除中...')\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log('正在删除文章ID:', articleId, '用户ID:', userStore.userInfo.uid)\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 确保用户已登录\n\t\t\t\t\t\tif (!userStore.userInfo.uid) {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '请先登录',\n\t\t\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tloadingManager.hideLoading()\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 调用接口删除文章\n\t\t\t\t\t\tconst res = await articleApi.del(articleId, userStore.userInfo.uid)\n\t\t\t\t\t\tconsole.log('删除接口返回结果:', res)\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (res && res.deleted) {\n\t\t\t\t\t\t\t// 删除成功，从列表中移除该文章\n\t\t\t\t\t\t\tconst index = articleList.value.findIndex(item => item._id === articleId)\n\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\tarticleList.value.splice(index, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tloadingManager.hideLoading()\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '删除成功',\n\t\t\t\t\t\t\t\ticon: 'success',\n\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(res.message || '删除失败，请重试')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t} catch (err) {\n\t\t\tconsole.error('删除文章失败:', err)\n\t\t\tloadingManager.hideLoading()\n\t\t\tuni.showToast({\n\t\t\t\ttitle: err.message || '删除失败，请重试',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2000\n\t\t\t})\n\t\t}\n\t}\n\n\t// 联系电话\n\tconst handelContact = (mobile) => {\n\t\tconsole.log(mobile)\n\t\tif ( !userStore.userInfo.isLogin ) {\n\t\t\treturn testLogin()\n\t\t}\n\n\t\tif ( mobile === '未填写' ) {\n\t\t\treturn uni.showToast({\n\t\t\t\ticon: 'none',\n\t\t\t\ttitle: '他并不想让人联系'\n\t\t\t})\n\t\t}\n\n\t\tuni.makePhoneCall({\n\t\t\tphoneNumber: mobile\n\t\t})\n\t}\n\n\n\n\t// 跳转用户列表\n\tconst handelGoUserList = (user_id) => {\n\t\t// 检查头像点击功能是否启用\n\t\tif (!avatarClickState.value) {\n\t\t\tconsole.log('头像点击功能已禁用')\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '联系管理员',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2000\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t\t\n\t\tuni.navigateTo({\n\t\t\turl: `/pages/userArticleList/userArticleList?userId=${user_id}`\n\t\t})\n\t}\n\t\n\t\n\n\t// 页面加载完毕\n\tonMounted(() => {\n\t\t// 直接获取分类和文章列表\n\t\tcateListGet()\n\t\t\n\t\t// 监听文章发布成功事件\n\t\tuni.$on('articlePublished', (articleId) => {\n\t\t\tconsole.log('收到文章发布成功事件，文章ID:', articleId)\n\t\t\t// 重新获取文章列表\n\t\t\tpageNo.value = 1\n\t\t\tstatus.value = 'more'\n\t\t\tgetArticleList(tempCateId)\n\t\t\t\n\t\t\t// 显示发布成功提示\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '发布成功，内容已更新',\n\t\t\t\ticon: 'success',\n\t\t\t\tduration: 2000\n\t\t\t})\n\t\t})\n\t\t\n\t\t// 监听一次性刷新事件 - 从发布页面跳转回来时只刷新一次\n\t\tuni.$on('refreshIndexOnce', (articleId) => {\n\t\t\tconsole.log('收到一次性刷新事件，文章ID:', articleId)\n\t\t\t// 重置页码并刷新文章列表\n\t\t\tpageNo.value = 1\n\t\t\tstatus.value = 'more'\n\t\t\t\n\t\t\t// 显示加载提示\n\t\t\t// uni.showLoading({\n\t\t\t//\ttitle: '正在刷新内容...',\n\t\t\t//\tmask: true\n\t\t\t// })\n\t\t\t\n\t\t\t// 延迟一点执行，确保页面已完全加载\n\t\t\tsetTimeout(() => {\n\t\t\t\tgetArticleList(tempCateId).then(() => {\n\t\t\t\t\t// 刷新完成后隐藏加载提示\n\t\t\t\t\t// uni.hideLoading()\n\t\t\t\t\t\n\t\t\t\t\t// 如果有文章ID，尝试滚动到该文章\n\t\t\t\t\tif (articleId && articleList.value.length > 0) {\n\t\t\t\t\t\t// 查找新发布的文章在列表中的位置\n\t\t\t\t\t\tconst index = articleList.value.findIndex(item => item._id === articleId)\n\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\tconsole.log('找到新发布的文章，位置:', index)\n\t\t\t\t\t\t\t// 可以在这里添加滚动到该文章的逻辑\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tconsole.error('刷新文章列表失败:', err)\n\t\t\t\t\t// uni.hideLoading()\n\t\t\t\t})\n\t\t\t}, 300)\n\t\t})\n\t\t\n\t\t// 监听浏览量更新事件\n\t\tuni.$on('viewCountUpdated', (articleId) => {\n\t\t\tupdateLocalViewCount(articleId)\n\t\t})\n\t\t\n\t\t// 添加新的全局事件监听器，从详情页更新浏览量\n\t\tuni.$on('articleViewCountUpdated', (data) => {\n\t\t\tconsole.log('收到文章浏览量更新事件:', data);\n\t\t\tif (data && data.articleId) {\n\t\t\t\t// 调用更新本地浏览量的方法\n\t\t\t\tupdateLocalViewCount(data);\n\t\t\t}\n\t\t});\n\t\t\n\t\t// 开启平台原生页面分享\n\t\tuni.showShareMenu({\n\t\t\twithShareTicket: true\n\t\t})\n\t\t\n\t\t// 监听头像点击状态变化事件\n\t\tuni.$on('avatarClickChanged', (newState) => {\n\t\t\tconsole.log('首页收到头像点击状态变化事件:', newState);\n\t\t\tavatarClickState.value = newState;\n\t\t})\n\t})\n\n\t// 在页面卸载时移除事件监听\n\tonUnmounted(() => {\n\t\tuni.$off('articlePublished')\n\t\tuni.$off('refreshIndexOnce') // 移除一次性刷新事件监听\n\t\tuni.$off('viewCountUpdated')\n\t\tuni.$off('articleViewCountUpdated') // 移除新的浏览量更新事件监听\n\t\tuni.$off('avatarClickChanged') // 移除头像点击状态监听\n\t})\n\t\n\t// 使用正确的页面滚动生命周期函数\n\tonPageScroll(() => {\n\t\t// 确保滚动时隐藏加载动画\n\t\tloadingManager.hideLoading()\n\t})\n\n\t// 添加返回事件处理\n\tlet lastRefreshTime = 0;\n\tonBackPress((e) => {\n\t\tconsole.log('检测到返回按钮事件', e);\n\t\t\n\t\t// 获取当前时间\n\t\tconst now = Date.now();\n\t\t\n\t\t// 如果距离上次刷新时间不足1秒，不重复刷新\n\t\tif (now - lastRefreshTime < 1000) {\n\t\t\tconsole.log('距离上次刷新时间不足1秒，跳过刷新');\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// 记录本次刷新时间\n\t\tlastRefreshTime = now;\n\t\t\n\t\t// 检查是否从发布页面返回\n\t\tconst pages = getCurrentPages();\n\t\tconst currentPage = pages[pages.length - 1];\n\t\t\n\t\tif (currentPage && currentPage.route === 'pages/index/index') {\n\t\t\tconsole.log('当前在首页，检查是否需要刷新');\n\t\t\t\n\t\t\t// 延迟执行刷新，避免与页面切换冲突\n\t\t\tsetTimeout(() => {\n\t\t\t\t// 重置页码并刷新文章列表\n\t\t\t\tpageNo.value = 1;\n\t\t\t\tstatus.value = 'more';\n\t\t\t\tgetArticleList(tempCateId);\n\t\t\t}, 300);\n\t\t}\n\t\t\n\t\t// 返回false表示不拦截返回事件\n\t\treturn false;\n\t});\n\n\t// 添加页面激活事件处理（用于处理页面从后台切回前台的情况）\n\tonActivated(() => {\n\t\tconsole.log('首页被激活');\n\t\t\n\t\t// 获取当前时间\n\t\tconst now = Date.now();\n\t\t\n\t\t// 如果距离上次刷新时间超过5秒，自动刷新\n\t\tif (now - lastRefreshTime > 5000) {\n\t\t\tconsole.log('页面激活，自动刷新内容');\n\t\t\tlastRefreshTime = now;\n\t\t\t\n\t\t\t// 重置页码并刷新文章列表\n\t\t\tpageNo.value = 1;\n\t\t\tstatus.value = 'more';\n\t\t\tgetArticleList(tempCateId);\n\t\t}\n\t});\n\n\t// 添加这个函数来获取分类图标\n\tconst getCategoryIcon = (category) => {\n\t\t// 如果分类对象有cate_img字段且不为空，使用域名修复后的URL\n\t\tif (category && category.cate_img) {\n\t\t\treturn fixImageUrl(category.cate_img);\n\t\t}\n\t\t\n\t\t// 如果没有图标，返回默认图标\n\t\treturn getDefaultImage('default');\n\t}\n\n\t// 更新本地文章浏览量\n\tconst updateLocalViewCount = (data) => {\n\t\t// 检查数据有效性\n\t\tif (!data || !data.articleId || !articleList.value.length) {\n\t\t\tconsole.log('更新浏览量失败：无效的文章数据或文章列表为空');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst index = articleList.value.findIndex(item => item._id === data.articleId);\n\t\tif (index !== -1) {\n\t\t\t// 如果有具体的浏览量数据，直接使用\n\t\t\tif (data.viewCount !== undefined) {\n\t\t\t\tarticleList.value[index].look_count = data.viewCount;\n\t\t\t\t// 同时保持兼容性更新view_count字段\n\t\t\t\tif (articleList.value[index].view_count !== undefined) {\n\t\t\t\t\tarticleList.value[index].view_count = data.viewCount;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// 否则，自增浏览量\n\t\t\t\tif (articleList.value[index].look_count !== undefined) {\n\t\t\t\t\tarticleList.value[index].look_count++;\n\t\t\t\t} else {\n\t\t\t\t\tarticleList.value[index].look_count = 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 同时保持兼容性更新view_count字段\n\t\t\t\tif (articleList.value[index].view_count !== undefined) {\n\t\t\t\t\tarticleList.value[index].view_count = articleList.value[index].look_count;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tconsole.log(`文章[${data.articleId}]浏览量已更新为: ${articleList.value[index].look_count}`);\n\t\t} else {\n\t\t\tconsole.log(`未找到文章: ${data.articleId}`);\n\t\t}\n\t};\n\n\t// 添加图片预览方法\n\tconst previewImage = (urls, current) => {\n\t\t// 检查参数\n\t\tif (!urls || !urls.length) {\n\t\t\tconsole.error('预览图片缺少URLs参数');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 获取预览URL列表 - 使用域名修复后的URL\n\t\tlet previewUrls = urls;\n\t\t\n\t\t// 如果当前URL和URLs数组是对象数组，仅在预览时提取compressedURL（如果有）或url\n\t\tif (typeof current === 'object' && current !== null) {\n\t\t\tcurrent = fixImageUrl(current.compressedURL || current.thumbnailURL || current.url);\n\t\t} else if (typeof current === 'string') {\n\t\t\tcurrent = fixImageUrl(current);\n\t\t}\n\t\t\n\t\t// 如果URLs数组是对象数组，仅在预览时提取compressedURL（如果有）或url\n\t\tif (urls.length > 0 && typeof urls[0] === 'object') {\n\t\t\tpreviewUrls = urls.map(img => fixImageUrl(img.compressedURL || img.thumbnailURL || img.url));\n\t\t} else {\n\t\t\t// 如果是字符串数组，直接处理URL\n\t\t\tpreviewUrls = urls.map(url => fixImageUrl(url));\n\t\t}\n\t\t\n\t\t// 使用uni.previewImage实现图片预览和左右滑动功能\n\t\tuni.previewImage({\n\t\t\turls: previewUrls,           // 需要预览的图片链接列表（此时已是修复后的URL）\n\t\t\tcurrent: current || previewUrls[0], // 当前显示图片的链接\n\t\t\tindicator: 'number',  // 显示页码指示器\n\t\t\tloop: true,           // 循环预览\n\t\t\tsuccess: () => {\n\t\t\t\tconsole.log('图片预览成功');\n\t\t\t},\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.error('预览图片失败:', err);\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '预览图片失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t});\n\t\t\t},\n\t\t\tcomplete: () => {\n\t\t\t\t// 预览完成后可以做一些清理工作\n\t\t\t}\n\t\t});\n\t\t\n\t\t\n\t};\n\n\t// 页面显示时获取最新权限状态\n\tonShow(() => {\n\t\t// 获取最新的权限状态\n\t\tgetSendOnState();\n\t})\n\n\tconst getCurrentCateName = () => {\n\t\t// 查找当前选中分类的名称\n\t\tif (!currentCateId.value) return '';\n\t\t\n\t\tconst category = cateList.value.find(item => item._id === currentCateId.value);\n\t\treturn category ? category.cate_name : '';\n\t}\n\n\t// 根据位置名称生成兼容的图标信息\n\tconst generateLocationIconUniapp = (locationName) => {\n\t\tif (!locationName || locationName === '未知区域') {\n\t\t\treturn {\n\t\t\t\ttext: '位',\n\t\t\t\tbgColor: '#4cb0f9',\n\t\t\t\ttype: 'text'\n\t\t\t};\n\t\t}\n\t\t\n\t\t// 获取位置的第一个字符\n\t\tconst firstChar = locationName.trim().charAt(0);\n\t\t\n\t\t// 使用图标字典或颜色字典根据首字符生成一致的颜色\n\t\tconst colorMap = {\n\t\t\t'北': '#FF5722', '南': '#2196F3', '东': '#4CAF50', '西': '#9C27B0',\n\t\t\t'中': '#FFEB3B', '河': '#03A9F4', '山': '#8BC34A', '海': '#00BCD4',\n\t\t\t'天': '#673AB7', '朝': '#FFC107', '新': '#E91E63', '广': '#3F51B5',\n\t\t\t'大': '#009688', '小': '#795548', '长': '#607D8B', '金': '#FF9800'\n\t\t};\n\t\t\n\t\t// 根据字符获取颜色，如果没有预设则使用哈希算法生成\n\t\tlet bgColor = colorMap[firstChar] || '#4cb0f9';\n\t\t\n\t\t// 如果没有预设颜色，根据字符生成一个确定的颜色\n\t\tif (!colorMap[firstChar]) {\n\t\t\t// 简单的哈希算法将字符转换为颜色\n\t\t\tlet hash = 0;\n\t\t\tfor (let i = 0; i < firstChar.length; i++) {\n\t\t\t\thash = firstChar.charCodeAt(i) + ((hash << 5) - hash);\n\t\t\t}\n\t\t\t\n\t\t\tconst c = (hash & 0x00FFFFFF)\n\t\t\t\t.toString(16)\n\t\t\t\t.toUpperCase();\n\t\t\t\n\t\t\tbgColor = '#' + '00000'.substring(0, 6 - c.length) + c;\n\t\t}\n\t\t\n\t\treturn {\n\t\t\ttext: firstChar,\n\t\t\tbgColor: bgColor,\n\t\t\ttype: 'text'\n\t\t};\n\t}\n\n\t// 跳转文章详情\n\tconst handelGoArticleDetail = (id) => {\n\t\tuni.navigateTo({\n\t\t\turl: `/pages/article/articleDetail?article_id=${id}`,\n\t\t\tanimationType: 'slide-in-right', // 添加滑入动画\n\t\t\tanimationDuration: 300 // 设置动画持续时间为300ms\n\t\t})\n\t}\n\n</script>\n<template>\n\t<view class=\"home\">\n\t\t<!-- 顶部分类导航 -->\n\t\t<view class=\"category-container\">\n\t\t\t<!-- 动态分类 -->\n\t\t\t<scroll-view class=\"category-scroll\" scroll-x=\"true\" scroll-with-animation=\"true\" show-scrollbar=\"false\">\n\t\t\t\t<view class=\"category-list\">\n\t\t\t\t\t<view class=\"category-item\" \n\t\t\t\t\t\tv-for=\"(item, index) in cateList\" \n\t\t\t\t\t\t:key=\"item._id\" \n\t\t\t\t\t\t:class=\"{ active: currentCateId === item._id, 'location-category': item.isLocationCategory }\" \n\t\t\t\t\t\t@click=\"hanleHeadTab(index, item._id)\">\n\t\t\t\t\t\t<view class=\"category-content\">\n\t\t\t\t\t\t\t<image v-if=\"item.cate_img\" :src=\"item.cate_img\" class=\"cate-icon\" mode=\"aspectFit\"></image>\n\t\t\t\t\t\t\t<text class=\"cate-text\">{{ item.cate_name }}</text>\n\t\t\t\t\t\t\t<!-- 位置图标指示器 -->\n\t\t\t\t\t\t\t<view class=\"location-badge\" v-if=\"item.isLocationCategory\">当前</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 加载中显示 -->\n\t\t\t\t\t<view class=\"category-item loading-item\" v-if=\"cateList.length == 0\">\n\t\t\t\t\t\t<view class=\"category-content\">\n\t\t\t\t\t\t\t<uni-icons type=\"spinner-cycle\" size=\"24\" color=\"#399bfe\"></uni-icons>\n\t\t\t\t\t\t\t<text class=\"loading-text\">加载中...</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</scroll-view>\n\t\t</view>\n\n\t\t<!-- 文章列表 -->\n\t\t<view class=\"view-article\">\n\t\t\t<!-- 添加加载中动画 -->\n\t\t\t<view class=\"loading-container\" v-if=\"articleList.length === 0 && isLoading\">\n\t\t\t\t<view class=\"loading-spinner\">\n\t\t\t\t\t<uni-icons type=\"spinner-cycle\" size=\"48\" color=\"#399bfe\"></uni-icons>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"loading-text\">内容加载中...</text>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 空数据提示 -->\n\t\t\t<view class=\"empty-container\" v-if=\"articleList.length === 0 && !isLoading\">\n\t\t\t\t<view class=\"empty-icon\">\n\t\t\t\t\t<uni-icons color=\"#5cb85c\" custom-prefix=\"icon\" type=\"lishuai-a-00jichuiconkongzhuangtaiwuneirong\" size=\"58\"></uni-icons>\n\t\t\t\t</view>\n\t\t\t\t<text class=\"empty-text\">暂无内容</text>\n\t\t\t\t<text class=\"empty-subtext\">该分类下还没有数据，去看看其他分类吧</text>\n\t\t\t</view>\n\t\t\t\n\t\t\t<articleItem v-for=\"item in articleList\" :key=\"item._id\" :item=\"item\" @contact=\"handelContact\"\n\t\t\t\t@preview=\"(url, urls) => previewImage(urls, url)\" @userList=\"handelGoUserList\"\n\t\t\t\t@delete=\"handleDelete\" :avatarClickEnabled=\"avatarClickState\">\n\t\t\t</articleItem>\n\t\t\t\n\t\t\t<!-- 加载更多 -->\n\t\t\t<view class=\"loading\">\n\t\t\t\t<uni-load-more v-if=\"!articleList.length==0\" color=\"#cccccc\" iconType=\"auto\"\n\t\t\t\t\t:status=\"status\" />\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\n\t</view>\n\t\n\t\n</template>\n\n<style lang=\"scss\" scoped>\n\t.home {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tpadding-top: 180rpx; /* 固定高度的顶部padding */\n\t\theight: 100vh;\n\t\tbackground-color: $pyq-pages-bg-color;\n\n\t\t/* 分类导航容器 */\n\t\t.category-container {\n\t\t\tposition: fixed;\n\t\t\tleft: 0;\n\t\t\ttop: 0;\n\t\t\twidth: 100%;\n\t\t\tz-index: 999;\n\t\t\tbackground-color: #fff;\n\t\t\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.05);\n\t\t}\n\t\t\n\t\t/* 分类导航样式 */\n\t\t.category-scroll {\n\t\t\twidth: 100%;\n\t\t\theight: 160rpx; /* 固定高度 */\n\t\t\twhite-space: nowrap;\n\t\t\tborder-bottom: 1px solid $pyq-border-color-translucent;\n\t\t\t\n\t\t\t.category-list {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tpadding: 20rpx;\n\t\t\t\tflex-wrap: nowrap;\n\t\t\t\t\n\t\t\t\t.category-item {\n\t\t\t\t\tflex-shrink: 0;\n\t\t\t\t\tpadding: 16rpx 24rpx;\n\t\t\t\t\tmargin: 0 10rpx;\n\t\t\t\t\tfont-size: 26rpx;\n\t\t\t\t\tcolor: $pyq-text-color-placeholder;\n\t\t\t\t\theight: 120rpx;\n\t\t\t\t\twidth: 120rpx;\n\t\t\t\t\tborder-radius: 12rpx;\n\t\t\t\t\tbackground-color: #f8f8f8;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\ttransition: all 0.3s ease;\n\t\t\t\t\t\n\t\t\t\t\t&:active {\n\t\t\t\t\t\ttransform: scale(0.95);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.category-content {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\t\n\t\t\t\t\t\t.loading-text {\n\t\t\t\t\t\t\tfont-size: 22rpx;\n\t\t\t\t\t\t\tmargin-top: 8rpx;\n\t\t\t\t\t\t\tcolor: #399bfe;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.cate-icon {\n\t\t\t\t\t\twidth: 50rpx;\n\t\t\t\t\t\theight: 50rpx;\n\t\t\t\t\t\tmargin-bottom: 8rpx;\n\t\t\t\t\t\tobject-fit: contain;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.cate-text {\n\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\toverflow: hidden;\n\t\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\t\tmax-width: 100%;\n\t\t\t\t\t\tpadding: 0 4rpx;\n\t\t\t\t\t\tline-height: 1.2;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t&.active {\n\t\t\t\t\t\tcolor: #399bfe;\n\t\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\t\tbackground-color: rgba(57, 155, 254, 0.1);\n\t\t\t\t\t\ttransform: scale(1.05);\n\t\t\t\t\t\tbox-shadow: 0 4rpx 12rpx rgba(57, 155, 254, 0.15);\n\t\t\t\t\t\tz-index: 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t&.location-category {\n\t\t\t\t\t\tbackground-color: rgba(76, 176, 249, 0.1);\n\t\t\t\t\t\t\n\t\t\t\t\t\t&.active {\n\t\t\t\t\t\t\tbackground-color: rgba(76, 176, 249, 0.2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.location-badge {\n\t\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\t\ttop: 6rpx;\n\t\t\t\t\t\t\tright: 6rpx;\n\t\t\t\t\t\t\tbackground-color: #4cb0f9;\n\t\t\t\t\t\t\tcolor: white;\n\t\t\t\t\t\t\tfont-size: 18rpx;\n\t\t\t\t\t\t\tpadding: 2rpx 6rpx;\n\t\t\t\t\t\t\tborder-radius: 6rpx;\n\t\t\t\t\t\t\tz-index: 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* 文章列表 */\n\t\t.view-article {\n\t\t\tbackground-color: $pyq-pages-bg-color;\n\t\t\tpadding-bottom: 120rpx; /* 增加底部间距 */\n\t\t\t\n\t\t\t/* 加载中动画容器 */\n\t\t\t.loading-container {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\theight: 60vh;\n\t\t\t\twidth: 100%;\n\t\t\t\t\n\t\t\t\t.loading-spinner {\n\t\t\t\t\tanimation: rotate 1.5s linear infinite;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.loading-text {\n\t\t\t\t\tmargin-top: 30rpx;\n\t\t\t\t\tcolor: #666;\n\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@keyframes rotate {\n\t\t\t\t\tfrom { transform: rotate(0deg); }\n\t\t\t\t\tto { transform: rotate(360deg); }\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* 空数据提示 */\n\t\t\t.empty-container {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\theight: 70vh;\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding: 0 50rpx;\n\t\t\t\t\n\t\t\t\t.empty-icon {\n\t\t\t\t\topacity: 0.7;\n\t\t\t\t\tmargin-bottom: 30rpx;\n\t\t\t\t\ttransform: scale(1.2);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.empty-text {\n\t\t\t\t\tfont-size: 34rpx;\n\t\t\t\t\tcolor: #888;\n\t\t\t\t\tmargin-bottom: 16rpx;\n\t\t\t\t\tfont-weight: 500;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.empty-subtext {\n\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\tcolor: #aaaaaa;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tline-height: 1.5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.loading {\n\t\t\t\theight: 100rpx; /* 增加加载区域高度 */\n\t\t\t\tpadding-bottom: 30rpx; /* 额外底部间距 */\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* 测试按钮样式 */\n\t\t.test-buttons {\n\t\t\tposition: fixed;\n\t\t\tleft: 40rpx;\n\t\t\tbottom: 120rpx;\n\t\t\tz-index: 999;\n\t\t\t\n\t\t\t.test-btn {\n\t\t\t\tbackground-color: #007AFF;\n\t\t\t\tcolor: #fff;\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tpadding: 10rpx 30rpx;\n\t\t\t\tborder-radius: 50rpx;\n\t\t\t\tbox-shadow: 0 4rpx 10rpx rgba(0, 122, 255, 0.3);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* 美化后的发布按钮 */\n\t\t.publish-button {\n\t\t\tposition: fixed;\n\t\t\tright: 40rpx;\n\t\t\tbottom: 120rpx;\n\t\t\tz-index: 999;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tbackground: linear-gradient(135deg, #3c7dff, #399bfe);\n\t\t\tpadding: 16rpx 32rpx;\n\t\t\tborder-radius: 50rpx;\n\t\t\tbox-shadow: 0 6rpx 16rpx rgba(60, 125, 255, 0.3);\n\t\t\ttransition: all 0.3s ease;\n\t\t\t\n\t\t\t.publish-icon {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tmargin-right: 12rpx;\n\t\t\t}\n\t\t\t\n\t\t\t.publish-text {\n\t\t\t\tcolor: #FFFFFF;\n\t\t\t\tfont-size: 30rpx;\n\t\t\t\tfont-weight: 500;\n\t\t\t\tletter-spacing: 2rpx;\n\t\t\t}\n\t\t\t\n\t\t\t&:active {\n\t\t\t\ttransform: scale(0.95);\n\t\t\t\tbox-shadow: 0 3rpx 8rpx rgba(60, 125, 255, 0.3);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* 七牛云上传按钮样式 */\n\t\t.qiniu-button {\n\t\t\tposition: fixed;\n\t\t\tright: 40rpx;\n\t\t\tbottom: 220rpx;\n\t\t\tz-index: 999;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tbackground: linear-gradient(135deg, #ff7043, #ff5722);\n\t\t\tpadding: 16rpx 32rpx;\n\t\t\tborder-radius: 50rpx;\n\t\t\tbox-shadow: 0 6rpx 16rpx rgba(255, 87, 34, 0.3);\n\t\t\ttransition: all 0.3s ease;\n\t\t\t\n\t\t\t.qiniu-icon {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tmargin-right: 12rpx;\n\t\t\t}\n\t\t\t\n\t\t\t.qiniu-text {\n\t\t\t\tcolor: #FFFFFF;\n\t\t\t\tfont-size: 30rpx;\n\t\t\t\tfont-weight: 500;\n\t\t\t\tletter-spacing: 2rpx;\n\t\t\t}\n\t\t\t\n\t\t\t&:active {\n\t\t\t\ttransform: scale(0.95);\n\t\t\t\tbox-shadow: 0 3rpx 8rpx rgba(255, 87, 34, 0.3);\n\t\t\t}\n\t\t}\n\t}\n</style>\n\n<!-- 添加全局样式，覆盖组件中的问题样式 -->\n<style lang=\"scss\">\n/* 修复uni-load-more组件样式问题 */\n.uni-load-more {\n\t.uni-load-more__img--android-MP {\n\t\t.uni-load-more__img-icon {\n\t\t\tborder-top-style: solid;\n\t\t\tborder-color: #777777;\n\t\t\tborder-width: 2px;\n\t\t}\n\t}\n\t\n\t.uni-load-more__img--ios-H5 {\n\t\t.uni-load-more__img-icon {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t}\n\t}\n}\n\n/* 修复articleItem组件样式问题 */\n.pyqContent {\n\t.pyq-img {\n\t\t.multi-img {\n\t\t\t.img-grid {\n\t\t\t\t.grid-item {\n\t\t\t\t\twidth: 180rpx;\n\t\t\t\t\theight: 180rpx;\n\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.single-img {\n\t\t\t.single-img-item {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: auto;\n\t\t\t}\n\t\t}\n\t}\n}\n</style>","import MiniProgramPage from 'D:/代码测试/wx2/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","uniCloud","useUserInfoStore","onPullDownRefresh","onReachBottom","res","testLogin","onMounted","onUnmounted","onPageScroll","onBackPress","onActivated","fixImageUrl","getDefaultImage","onShow"],"mappings":";;;;;;;;;;;;;;;;;AAQA,MAAA,WAAA;;;;AAPA,UAAA,iBAAA;AAAA,MAQA,WAAA;AAAA,MACA,YAAA,QAAA,UAAA,OAAA,MAAA;AAEA,aAAA,YAAA;AAAA,MAMA;AAAA,MACA,cAAA;AACA,aAAA,YAAA;AAAA,MAGA;AAAA,IACA;AAGA,UAAA,mBAAAA,cAAA,IAAA,IAAA;AAGA,UAAA,iBAAA,YAAA;AACA,UAAA;AACAC,sBAAAA,MAAA,MAAA,OAAA,+BAAA,eAAA;AAEA,cAAA,YAAAC,cAAAA,GAAA,aAAA,UAAA,EAAA,UAAA,KAAA,CAAA;AACA,cAAA,MAAA,MAAA,UAAA;AAEA,YAAA,OAAA,IAAA,QAAA,IAAA,KAAA,SAAA,GAAA;AAEA,gBAAA,yBAAA,IAAA,KAAA,CAAA,EAAA,gBAAA,SAAA,IAAA,KAAA,CAAA,EAAA,cAAA;AAGA,2BAAA,QAAA;AAEAD,wBAAA,MAAA,MAAA,OAAA,+BAAA,aAAA,iBAAA,KAAA;AAAA,QACA,OAAA;AACAA,wBAAAA,MAAA,MAAA,SAAA,+BAAA,mBAAA;AAAA,QACA;AAAA,MACA,SAAA,KAAA;AACAA,sBAAA,MAAA,MAAA,SAAA,+BAAA,aAAA,GAAA;AAAA,MACA;AAAA,IACA;AAGA,UAAA,YAAAE,WAAAA,iBAAA;AACAH,kBAAAA,IAAA,IAAA;AAEA,UAAA,WAAAA,cAAA,IAAA,EAAA;AACA,UAAA,cAAAA,cAAA,IAAA,CAAA;AAEA,UAAA,gBAAAA,kBAAA,EAAA;AAGA,UAAA,UAAAE,cAAAA,GAAA,aAAA,UAAA,EAAA,UAAA,MAAA;AAEA,UAAA,aAAAA,cAAAA,GAAA,aAAA,aAAA,EAAA,UAAA,MAAA;AAEAA,kBAAAA,GAAA,aAAA,UAAA,EAAA,UAAA,KAAA,CAAA;AAGA,UAAA,eAAAF,cAAA,IAAA,IAAA;AAGA,UAAA,cAAA,YAAA;AAIA,UAAA;AAQA,YAAA,cAAA,MAAAC,cAAA,MAAA,YAAA;AAAA,UACA,MAAA;AAAA,QACA,CAAA,EAAA,MAAA,SAAA;AACAA,wBAAAA,MAAA,MAAA,SAAA,+BAAA,WAAA,GAAA;AAEA,iBAAA,EAAA,WAAA,YAAA,UAAA,SAAA;AAAA,QACA,CAAA;AAGA,cAAA,MAAA,MAAA,QAAA,IAAA,MAAA,KAAA;AAGA,YAAA,CAAA,OAAA,CAAA,IAAA,MAAA;AACA,gBAAA,IAAA,MAAA,iBAAA;AAAA,QACA;AAGA,cAAA,WAAA,MAAA,WAAA,SAAA,GAAA,YAAA,SAAA,IAAA,YAAA,QAAA,EAAA;AAGA,qBAAA,QAAA;AAAA,UACA,SAAA,SAAA,WAAA;AAAA,UACA,UAAA,SAAA,YAAA;AAAA,UACA,WAAA,YAAA;AAAA,UACA,UAAA,YAAA;AAAA,QACA;AAGA,YAAA,oBAAA,IAAA,KAAA,IAAA,UAAA;AAEA,gBAAA,qBAAA,KAAA,aAAA,SAAA,aACA,KAAA,UAAA,SAAA,SAAA,QAAA,KAAA,SAAA,SAAA,SAAA,KAAA,SAAA;AAEA,iBAAA;AAAA,YACA,GAAA;AAAA,YACA,UAAA,gBAAA,IAAA;AAAA,YACA;AAAA,YACA,UAAA,qBAAA,SAAA,WAAA;AAAA,UACA;AAAA,QACA,CAAA;AAGA,0BAAA,KAAA,CAAA,GAAA,MAAA;AACA,cAAA,EAAA,sBAAA,CAAA,EAAA;AAAA,mBAAA;AACA,cAAA,CAAA,EAAA,sBAAA,EAAA;AAAA,mBAAA;AACA,iBAAA;AAAA,QACA,CAAA;AAGA,iBAAA,QAAA;AACAA,sBAAA,MAAA,MAAA,OAAA,gCAAA,aAAA,SAAA,KAAA;AAGA,YAAA,kBAAA,SAAA,GAAA;AACA,wBAAA,QAAA,kBAAA,CAAA,EAAA;AACA,sBAAA,QAAA;AAAA,QACA;AAGA,eAAA,QAAA;AACA,uBAAA,cAAA,KAAA;AAAA,MAEA,SAAA,KAAA;AACAA,sBAAA,MAAA,MAAA,SAAA,gCAAA,WAAA,GAAA;AACAA,sBAAAA,MAAA,UAAA;AAAA,UACA,OAAA;AAAA,UACA,MAAA;AAAA,UACA,UAAA;AAAA,QACA,CAAA;AAGA;MACA,UAAA;AACAA,sBAAA,MAAA,YAAA;AAAA,MACA;AAAA,IACA;AACA,UAAA,SAAAD,cAAA,IAAA,CAAA;AAGA,UAAA,eAAA,CAAA,OAAA,OAAA;AACA,kBAAA,QAAA;AACA,aAAA,QAAA;AACA,aAAA,QAAA;AAGA,oBAAA,QAAA;AACA,qBAAA,EAAA;AAAA,IACA;AAGA,UAAA,cAAAA,cAAA,IAAA,EAAA;AACA,QAAA,aAAA;AAEA,UAAA,YAAAA,kBAAA,IAAA;AAGA,UAAA,iBAAA,OAAA,YAAA;AAEA,UAAA,eAAA;AAAA;AAEA,UAAA;AACA,qBAAA,WAAA;AACAC,sBAAAA,MAAA,MAAA,OAAA,gCAAA,YAAA,MAAA;AAGA,uBAAA,YAAA,aAAA,IAAA;AACA,kBAAA,QAAA;AAGA,cAAA,MAAA,MAAA,WAAA,WAAA,WAAA,IAAA,OAAA,OAAA,QAAA;AACAA,sBAAAA,MAAA,MAAA,OAAA,gCAAA,GAAA;AACA,oBAAA,QAAA,IAAA;AAAA,MACA,SAAA,KAAA;AACAA,sBAAAA,MAAA,MAAA,OAAA,gCAAA,GAAA;AACAA,sBAAAA,MAAA,UAAA;AAAA,UACA,OAAA;AAAA,UACA,MAAA;AAAA,UACA,UAAA;AAAA,QACA,CAAA;AAAA,MACA,UAAA;AAEA,uBAAA,YAAA;AACA,kBAAA,QAAA;AAAA,MACA;AAAA,IACA;AAGAG,kBAAAA,kBAAA,YAAA;AAEA,UAAA,eAAA,WAAA;AACAH,sBAAA,MAAA,oBAAA;AACA;AAAA,MACA;AAEA,aAAA,QAAA;AACA,aAAA,QAAA;AACA,UAAA;AAEA,cAAA,eAAA,UAAA;AAAA,MACA,SAAA,KAAA;AACAA,sBAAAA,MAAA,MAAA,SAAA,gCAAA,WAAA,GAAA;AACAA,sBAAAA,MAAA,UAAA;AAAA,UACA,OAAA;AAAA,UACA,MAAA;AAAA,QACA,CAAA;AAAA,MACA,UAAA;AAEAA,sBAAAA,MAAA,oBAAA;AAAA,MACA;AAAA,IACA,CAAA;AAGA,UAAA,SAAAD,cAAA,IAAA,MAAA;AAGAK,kBAAAA,cAAA,YAAA;AACAJ,oBAAAA,MAAA,MAAA,OAAA,gCAAA,IAAA;AAEA,UAAA,OAAA,UAAA,YAAA,eAAA;AAAA;AAGA,aAAA,QAAA;AAEA,UAAA;AAEA,uBAAA,YAAA,WAAA,KAAA;AAGA,eAAA;AACA,cAAA,MAAA,MAAA,WAAA,WAAA,YAAA,OAAA,OAAA,QAAA;AAGA,oBAAA,QAAA,CAAA,GAAA,YAAA,OAAA,GAAA,IAAA,IAAA;AAGA,YAAA,IAAA,KAAA,SAAA,GAAA;AACA,iBAAA,QAAA;AAAA,QACA,OAAA;AACA,iBAAA,QAAA;AAAA,QACA;AAAA,MACA,SAAA,KAAA;AACAA,sBAAAA,MAAA,MAAA,SAAA,gCAAA,WAAA,GAAA;AACAA,sBAAAA,MAAA,UAAA;AAAA,UACA,OAAA;AAAA,UACA,MAAA;AAAA,QACA,CAAA;AACA,eAAA,QAAA;AAAA,MACA,UAAA;AAEA,uBAAA,YAAA;AAAA,MACA;AAAA,IACA,CAAA;AAIA,UAAA,eAAA,OAAA,cAAA;AACA,UAAA;AAEAA,sBAAAA,MAAA,UAAA;AAAA,UACA,OAAA;AAAA,UACA,SAAA;AAAA,UACA,SAAA,OAAA,QAAA;AACA,gBAAA,IAAA,SAAA;AAEA,6BAAA,YAAA,QAAA;AAEAA,kCAAA,MAAA,OAAA,gCAAA,aAAA,WAAA,SAAA,UAAA,SAAA,GAAA;AAGA,kBAAA,CAAA,UAAA,SAAA,KAAA;AACAA,8BAAAA,MAAA,UAAA;AAAA,kBACA,OAAA;AAAA,kBACA,MAAA;AAAA,kBACA,UAAA;AAAA,gBACA,CAAA;AACA,+BAAA,YAAA;AACA;AAAA,cACA;AAGA,oBAAAK,OAAA,MAAA,WAAA,IAAA,WAAA,UAAA,SAAA,GAAA;AACAL,4BAAAA,MAAA,MAAA,OAAA,gCAAA,aAAAK,IAAA;AAEA,kBAAAA,QAAAA,KAAA,SAAA;AAEA,sBAAA,QAAA,YAAA,MAAA,UAAA,UAAA,KAAA,QAAA,SAAA;AACA,oBAAA,UAAA,IAAA;AACA,8BAAA,MAAA,OAAA,OAAA,CAAA;AAAA,gBACA;AAEA,+BAAA,YAAA;AACAL,8BAAAA,MAAA,UAAA;AAAA,kBACA,OAAA;AAAA,kBACA,MAAA;AAAA,kBACA,UAAA;AAAA,gBACA,CAAA;AAAA,cACA,OAAA;AACA,sBAAA,IAAA,MAAAK,KAAA,WAAA,UAAA;AAAA,cACA;AAAA,YACA;AAAA,UACA;AAAA,QACA,CAAA;AAAA,MACA,SAAA,KAAA;AACAL,sBAAAA,MAAA,MAAA,SAAA,gCAAA,WAAA,GAAA;AACA,uBAAA,YAAA;AACAA,sBAAAA,MAAA,UAAA;AAAA,UACA,OAAA,IAAA,WAAA;AAAA,UACA,MAAA;AAAA,UACA,UAAA;AAAA,QACA,CAAA;AAAA,MACA;AAAA,IACA;AAGA,UAAA,gBAAA,CAAA,WAAA;AACAA,oBAAAA,MAAA,MAAA,OAAA,gCAAA,MAAA;AACA,UAAA,CAAA,UAAA,SAAA,SAAA;AACA,eAAAM,wBAAA;AAAA,MACA;AAEA,UAAA,WAAA,OAAA;AACA,eAAAN,cAAAA,MAAA,UAAA;AAAA,UACA,MAAA;AAAA,UACA,OAAA;AAAA,QACA,CAAA;AAAA,MACA;AAEAA,oBAAAA,MAAA,cAAA;AAAA,QACA,aAAA;AAAA,MACA,CAAA;AAAA,IACA;AAKA,UAAA,mBAAA,CAAA,YAAA;AAEA,UAAA,CAAA,iBAAA,OAAA;AACAA,sBAAAA,MAAA,MAAA,OAAA,gCAAA,WAAA;AACAA,sBAAAA,MAAA,UAAA;AAAA,UACA,OAAA;AAAA,UACA,MAAA;AAAA,UACA,UAAA;AAAA,QACA,CAAA;AACA;AAAA,MACA;AAEAA,oBAAAA,MAAA,WAAA;AAAA,QACA,KAAA,iDAAA,OAAA;AAAA,MACA,CAAA;AAAA,IACA;AAKAO,kBAAAA,UAAA,MAAA;AAEA,kBAAA;AAGAP,oBAAAA,MAAA,IAAA,oBAAA,CAAA,cAAA;AACAA,sBAAAA,MAAA,MAAA,OAAA,gCAAA,oBAAA,SAAA;AAEA,eAAA,QAAA;AACA,eAAA,QAAA;AACA,uBAAA,UAAA;AAGAA,sBAAAA,MAAA,UAAA;AAAA,UACA,OAAA;AAAA,UACA,MAAA;AAAA,UACA,UAAA;AAAA,QACA,CAAA;AAAA,MACA,CAAA;AAGAA,oBAAAA,MAAA,IAAA,oBAAA,CAAA,cAAA;AACAA,sBAAAA,MAAA,MAAA,OAAA,gCAAA,mBAAA,SAAA;AAEA,eAAA,QAAA;AACA,eAAA,QAAA;AASA,mBAAA,MAAA;AACA,yBAAA,UAAA,EAAA,KAAA,MAAA;AAKA,gBAAA,aAAA,YAAA,MAAA,SAAA,GAAA;AAEA,oBAAA,QAAA,YAAA,MAAA,UAAA,UAAA,KAAA,QAAA,SAAA;AACA,kBAAA,UAAA,IAAA;AACAA,8BAAAA,MAAA,MAAA,OAAA,gCAAA,gBAAA,KAAA;AAAA,cAEA;AAAA,YACA;AAAA,UACA,CAAA,EAAA,MAAA,SAAA;AACAA,0BAAAA,MAAA,MAAA,SAAA,gCAAA,aAAA,GAAA;AAAA,UAEA,CAAA;AAAA,QACA,GAAA,GAAA;AAAA,MACA,CAAA;AAGAA,oBAAAA,MAAA,IAAA,oBAAA,CAAA,cAAA;AACA,6BAAA,SAAA;AAAA,MACA,CAAA;AAGAA,oBAAAA,MAAA,IAAA,2BAAA,CAAA,SAAA;AACAA,sBAAA,MAAA,MAAA,OAAA,gCAAA,gBAAA,IAAA;AACA,YAAA,QAAA,KAAA,WAAA;AAEA,+BAAA,IAAA;AAAA,QACA;AAAA,MACA,CAAA;AAGAA,oBAAAA,MAAA,cAAA;AAAA,QACA,iBAAA;AAAA,MACA,CAAA;AAGAA,oBAAAA,MAAA,IAAA,sBAAA,CAAA,aAAA;AACAA,sBAAA,MAAA,MAAA,OAAA,gCAAA,mBAAA,QAAA;AACA,yBAAA,QAAA;AAAA,MACA,CAAA;AAAA,IACA,CAAA;AAGAQ,kBAAAA,YAAA,MAAA;AACAR,oBAAA,MAAA,KAAA,kBAAA;AACAA,oBAAA,MAAA,KAAA,kBAAA;AACAA,oBAAA,MAAA,KAAA,kBAAA;AACAA,oBAAA,MAAA,KAAA,yBAAA;AACAA,oBAAA,MAAA,KAAA,oBAAA;AAAA,IACA,CAAA;AAGAS,kBAAAA,aAAA,MAAA;AAEA,qBAAA,YAAA;AAAA,IACA,CAAA;AAGA,QAAA,kBAAA;AACAC,kBAAA,YAAA,CAAA,MAAA;AACAV,oBAAA,MAAA,MAAA,OAAA,gCAAA,aAAA,CAAA;AAGA,YAAA,MAAA,KAAA;AAGA,UAAA,MAAA,kBAAA,KAAA;AACAA,sBAAAA,MAAA,MAAA,OAAA,gCAAA,mBAAA;AACA,eAAA;AAAA,MACA;AAGA,wBAAA;AAGA,YAAA,QAAA;AACA,YAAA,cAAA,MAAA,MAAA,SAAA,CAAA;AAEA,UAAA,eAAA,YAAA,UAAA,qBAAA;AACAA,sBAAAA,MAAA,MAAA,OAAA,gCAAA,gBAAA;AAGA,mBAAA,MAAA;AAEA,iBAAA,QAAA;AACA,iBAAA,QAAA;AACA,yBAAA,UAAA;AAAA,QACA,GAAA,GAAA;AAAA,MACA;AAGA,aAAA;AAAA,IACA,CAAA;AAGAW,kBAAAA,YAAA,MAAA;AACAX,oBAAAA,MAAA,MAAA,OAAA,gCAAA,OAAA;AAGA,YAAA,MAAA,KAAA;AAGA,UAAA,MAAA,kBAAA,KAAA;AACAA,sBAAAA,MAAA,MAAA,OAAA,gCAAA,aAAA;AACA,0BAAA;AAGA,eAAA,QAAA;AACA,eAAA,QAAA;AACA,uBAAA,UAAA;AAAA,MACA;AAAA,IACA,CAAA;AAGA,UAAA,kBAAA,CAAA,aAAA;AAEA,UAAA,YAAA,SAAA,UAAA;AACA,eAAAY,mBAAA,YAAA,SAAA,QAAA;AAAA,MACA;AAGA,aAAAC,mBAAAA,gBAAA,SAAA;AAAA,IACA;AAGA,UAAA,uBAAA,CAAA,SAAA;AAEA,UAAA,CAAA,QAAA,CAAA,KAAA,aAAA,CAAA,YAAA,MAAA,QAAA;AACAb,sBAAAA,MAAA,MAAA,OAAA,gCAAA,wBAAA;AACA;AAAA,MACA;AAEA,YAAA,QAAA,YAAA,MAAA,UAAA,UAAA,KAAA,QAAA,KAAA,SAAA;AACA,UAAA,UAAA,IAAA;AAEA,YAAA,KAAA,cAAA,QAAA;AACA,sBAAA,MAAA,KAAA,EAAA,aAAA,KAAA;AAEA,cAAA,YAAA,MAAA,KAAA,EAAA,eAAA,QAAA;AACA,wBAAA,MAAA,KAAA,EAAA,aAAA,KAAA;AAAA,UACA;AAAA,QACA,OAAA;AAEA,cAAA,YAAA,MAAA,KAAA,EAAA,eAAA,QAAA;AACA,wBAAA,MAAA,KAAA,EAAA;AAAA,UACA,OAAA;AACA,wBAAA,MAAA,KAAA,EAAA,aAAA;AAAA,UACA;AAGA,cAAA,YAAA,MAAA,KAAA,EAAA,eAAA,QAAA;AACA,wBAAA,MAAA,KAAA,EAAA,aAAA,YAAA,MAAA,KAAA,EAAA;AAAA,UACA;AAAA,QACA;AAEAA,sBAAA,MAAA,MAAA,OAAA,gCAAA,MAAA,KAAA,SAAA,aAAA,YAAA,MAAA,KAAA,EAAA,UAAA,EAAA;AAAA,MACA,OAAA;AACAA,4BAAA,MAAA,OAAA,gCAAA,UAAA,KAAA,SAAA,EAAA;AAAA,MACA;AAAA,IACA;AAGA,UAAA,eAAA,CAAA,MAAA,YAAA;AAEA,UAAA,CAAA,QAAA,CAAA,KAAA,QAAA;AACAA,sBAAAA,MAAA,MAAA,SAAA,gCAAA,cAAA;AACA;AAAA,MACA;AAGA,UAAA,cAAA;AAGA,UAAA,OAAA,YAAA,YAAA,YAAA,MAAA;AACA,kBAAAY,mBAAAA,YAAA,QAAA,iBAAA,QAAA,gBAAA,QAAA,GAAA;AAAA,MACA,WAAA,OAAA,YAAA,UAAA;AACA,kBAAAA,mBAAAA,YAAA,OAAA;AAAA,MACA;AAGA,UAAA,KAAA,SAAA,KAAA,OAAA,KAAA,CAAA,MAAA,UAAA;AACA,sBAAA,KAAA,IAAA,SAAAA,mBAAAA,YAAA,IAAA,iBAAA,IAAA,gBAAA,IAAA,GAAA,CAAA;AAAA,MACA,OAAA;AAEA,sBAAA,KAAA,IAAA,SAAAA,mBAAA,YAAA,GAAA,CAAA;AAAA,MACA;AAGAZ,oBAAAA,MAAA,aAAA;AAAA,QACA,MAAA;AAAA;AAAA,QACA,SAAA,WAAA,YAAA,CAAA;AAAA;AAAA,QACA,WAAA;AAAA;AAAA,QACA,MAAA;AAAA;AAAA,QACA,SAAA,MAAA;AACAA,wBAAAA,MAAA,MAAA,OAAA,gCAAA,QAAA;AAAA,QACA;AAAA,QACA,MAAA,CAAA,QAAA;AACAA,wBAAA,MAAA,MAAA,SAAA,gCAAA,WAAA,GAAA;AACAA,wBAAAA,MAAA,UAAA;AAAA,YACA,OAAA;AAAA,YACA,MAAA;AAAA,UACA,CAAA;AAAA,QACA;AAAA,QACA,UAAA,MAAA;AAAA,QAEA;AAAA,MACA,CAAA;AAAA,IAGA;AAGAc,kBAAAA,OAAA,MAAA;AAEA;IACA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACznBA,GAAG,WAAW,eAAe;"}