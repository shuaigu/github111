{"version":3,"file":"buildURL.js","sources":["uni_modules/uview-plus/libs/luch-request/helpers/buildURL.js"],"sourcesContent":["'use strict'\n\nimport * as utils from '../utils'\n\nfunction encode(val) {\n    return encodeURIComponent(val)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%20/g, '+')\n        .replace(/%5B/gi, '[')\n        .replace(/%5D/gi, ']')\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params) {\n    /* eslint no-param-reassign:0 */\n    if (!params) {\n        return url\n    }\n\n    let serializedParams\n    if (utils.isURLSearchParams(params)) {\n        serializedParams = params.toString()\n    } else {\n        const parts = []\n\n        utils.forEach(params, (val, key) => {\n            if (val === null || typeof val === 'undefined') {\n                return\n            }\n\n            if (utils.isArray(val)) {\n                key = `${key}[]`\n            } else {\n                val = [val]\n            }\n\n            utils.forEach(val, (v) => {\n                if (utils.isDate(v)) {\n                    v = v.toISOString()\n                } else if (utils.isObject(v)) {\n                    v = JSON.stringify(v)\n                }\n                parts.push(`${encode(key)}=${encode(v)}`)\n            })\n        })\n\n        serializedParams = parts.join('&')\n    }\n\n    if (serializedParams) {\n        const hashmarkIndex = url.indexOf('#')\n        if (hashmarkIndex !== -1) {\n            url = url.slice(0, hashmarkIndex)\n        }\n\n        url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams\n    }\n\n    return url\n}\n"],"names":["utils.isURLSearchParams","utils.forEach","utils.isArray","utils.isDate","utils.isObject"],"mappings":";;AAIA,SAAS,OAAO,KAAK;AACjB,SAAO,mBAAmB,GAAG,EACxB,QAAQ,SAAS,GAAG,EACpB,QAAQ,SAAS,GAAG,EACpB,QAAQ,QAAQ,GAAG,EACnB,QAAQ,SAAS,GAAG,EACpB,QAAQ,QAAQ,GAAG,EACnB,QAAQ,SAAS,GAAG,EACpB,QAAQ,SAAS,GAAG;AAC7B;AASe,SAAS,SAAS,KAAK,QAAQ;AAE1C,MAAI,CAAC,QAAQ;AACT,WAAO;AAAA,EACV;AAED,MAAI;AACJ,MAAIA,6CAAAA,kBAAwB,MAAM,GAAG;AACjC,uBAAmB,OAAO,SAAU;AAAA,EAC5C,OAAW;AACH,UAAM,QAAQ,CAAE;AAEhBC,iDAAAA,QAAc,QAAQ,CAAC,KAAK,QAAQ;AAChC,UAAI,QAAQ,QAAQ,OAAO,QAAQ,aAAa;AAC5C;AAAA,MACH;AAED,UAAIC,6CAAAA,QAAc,GAAG,GAAG;AACpB,cAAM,GAAG,GAAG;AAAA,MAC5B,OAAmB;AACH,cAAM,CAAC,GAAG;AAAA,MACb;AAEDD,2DAAc,KAAK,CAAC,MAAM;AACtB,YAAIE,6CAAAA,OAAa,CAAC,GAAG;AACjB,cAAI,EAAE,YAAa;AAAA,QACvC,WAA2BC,6CAAAA,SAAe,CAAC,GAAG;AAC1B,cAAI,KAAK,UAAU,CAAC;AAAA,QACvB;AACD,cAAM,KAAK,GAAG,OAAO,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE;AAAA,MACxD,CAAa;AAAA,IACb,CAAS;AAED,uBAAmB,MAAM,KAAK,GAAG;AAAA,EACpC;AAED,MAAI,kBAAkB;AAClB,UAAM,gBAAgB,IAAI,QAAQ,GAAG;AACrC,QAAI,kBAAkB,IAAI;AACtB,YAAM,IAAI,MAAM,GAAG,aAAa;AAAA,IACnC;AAED,YAAQ,IAAI,QAAQ,GAAG,MAAM,KAAK,MAAM,OAAO;AAAA,EAClD;AAED,SAAO;AACX;;"}