{"version":3,"file":"debounce.js","sources":["uni_modules/uview-plus/libs/function/debounce.js"],"sourcesContent":["let timeout = null\n\n/**\n * 防抖原理：一定时间内，只有最后一次操作，再过wait毫秒后才执行函数\n *\n * @param {Function} func 要执行的回调函数\n * @param {Number} wait 延时的时间\n * @param {Boolean} immediate 是否立即执行\n * @return null\n */\nexport function debounce(func, wait = 500, immediate = false) {\n    // 清除定时器\n    if (timeout !== null) clearTimeout(timeout)\n    // 立即执行，此类情况一般用不到\n    if (immediate) {\n        const callNow = !timeout\n        timeout = setTimeout(() => {\n            timeout = null\n        }, wait)\n        if (callNow) typeof func === 'function' && func()\n    } else {\n        // 设置定时器，当最后一次操作后，timeout不会再被清除，所以在延时wait毫秒后执行func回调方法\n        timeout = setTimeout(() => {\n            typeof func === 'function' && func()\n        }, wait)\n    }\n}\n\nexport default debounce\n"],"names":[],"mappings":";AAAA,IAAI,UAAU;AAUP,SAAS,SAAS,MAAM,OAAO,KAAK,YAAY,OAAO;AAE1D,MAAI,YAAY;AAAM,iBAAa,OAAO;AAE1C,MAAI,WAAW;AACX,UAAM,UAAU,CAAC;AACjB,cAAU,WAAW,MAAM;AACvB,gBAAU;AAAA,IACb,GAAE,IAAI;AACP,QAAI;AAAS,aAAO,SAAS,cAAc,KAAM;AAAA,EACzD,OAAW;AAEH,cAAU,WAAW,MAAM;AACvB,aAAO,SAAS,cAAc,KAAM;AAAA,IACvC,GAAE,IAAI;AAAA,EACV;AACL;;"}