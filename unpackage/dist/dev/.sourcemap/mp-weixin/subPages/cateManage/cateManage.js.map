{"version":3,"file":"cateManage.js","sources":["subPages/cateManage/cateManage.vue","../../软件/HBuilderX/HBuilderX/plugins/uniapp-cli-vite/uniPage:/c3ViUGFnZXNcY2F0ZU1hbmFnZVxjYXRlTWFuYWdlLnZ1ZQ"],"sourcesContent":["<script setup>\n\timport { ref, onMounted, computed, nextTick } from 'vue'\n\timport { onShow, onHide } from '@dcloudio/uni-app'\n\t\n\t// 注意：当前环境中可能存在 SharedArrayBuffer 跨域隔离(COOP/COEP)警告\n\t// 这个警告是由浏览器引擎产生的，在小程序环境中不影响功能\n\t// 详情参见：https://developer.chrome.com/blog/enabling-shared-array-buffer/\n\t\n\tconst cateApi = uniCloud.importObject('cateWx', { customUI: true })\n\tconst qiniuCloud = uniCloud.importObject('qiniuyunCloud', { customUI: true })\n\t\n\t// 分类列表数据\n\tconst cateList = ref([])\n\tconst loading = ref(false)\n\tconst dataLoaded = ref(false)\n\t\n\t// 滚动相关变量\n\tconst scrollTop = ref(0)\n\tconst oldScrollTop = ref(0)\n\tconst scrollViewId = ref('cateScrollView')\n\t\n\t// 批量操作状态\n\tconst batchOperationLoading = ref(false)\n\t\n\t// 获取分类列表\n\tconst cateListGet = async () => {\n\t\tif (loading.value) return\n\t\t\n\t\tloading.value = true\n\t\ttry {\n\t\t\t// 使用 get 方法并传递 showAll=true 来获取所有分类(包括隐藏的)\n\t\t\tconst res = await cateApi.get(null, true)\n\t\t\t// 确保 res.data 是数组且不为空\n\t\t\tif (res && res.data && Array.isArray(res.data)) {\n\t\t\t\tcateList.value = res.data.filter(item => item && typeof item === 'object')\n\t\t\t} else {\n\t\t\t\tcateList.value = []\n\t\t\t\tconsole.warn('获取到的分类数据不是有效的数组')\n\t\t\t}\n\t\t\tdataLoaded.value = true\n\t\t\t\n\t\t\t// 数据加载完成后，保持滚动位置或滚动到顶部\n\t\t\tnextTick(() => {\n\t\t\t\tif (oldScrollTop.value > 0) {\n\t\t\t\t\t// 如果有之前的滚动位置，恢复到该位置\n\t\t\t\t\tscrollToPosition(oldScrollTop.value);\n\t\t\t\t} else {\n\t\t\t\t\t// 否则滚动到顶部\n\t\t\t\t\tscrollToTop();\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error('获取分类列表失败:', error)\n\t\t\tcateList.value = [] // 确保发生错误时设置为空数组\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '获取分类失败',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t} finally {\n\t\t\tloading.value = false\n\t\t}\n\t}\n\t\n\t// 滚动到顶部\n\tconst scrollToTop = () => {\n\t\tscrollTop.value = 0;\n\t\toldScrollTop.value = 0;\n\t}\n\t\n\t// 滚动到指定位置\n\tconst scrollToPosition = (position) => {\n\t\tscrollTop.value = position;\n\t}\n\t\n\t// 滚动事件处理\n\tconst handleScroll = (e) => {\n\t\toldScrollTop.value = e.detail.scrollTop;\n\t}\n\t\n\t// 页面显示时获取数据\n\tonShow(() => {\n\t\tif (!dataLoaded.value) {\n\t\t\tcateListGet()\n\t\t}\n\t})\n\t\n\t// 组件挂载时初始化\n\tonMounted(() => {\n\t\tcateListGet()\n\t\t// 获取设备信息并计算rpx比例\n\t\ttry {\n\t\t\tconst info = uni.getWindowInfo()\n\t\t\tscreenInfo.value = {\n\t\t\t\twindowWidth: info.windowWidth,\n\t\t\t\twindowHeight: info.windowHeight,\n\t\t\t\trpxRatio: 750 / info.windowWidth\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('获取设备信息失败:', error)\n\t\t\t// 使用备用方法\n\t\t\ttry {\n\t\t\t\tconst systemInfo = uni.getSystemInfoSync()\n\t\t\t\tscreenInfo.value = {\n\t\t\t\t\twindowWidth: systemInfo.windowWidth,\n\t\t\t\t\twindowHeight: systemInfo.windowHeight,\n\t\t\t\t\trpxRatio: 750 / systemInfo.windowWidth\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error('获取系统信息失败:', e)\n\t\t\t}\n\t\t}\n\t})\n\t\n\t// 弹窗显示状态 - 初始值设为 false\n\tconst showPopup = ref(false)\n\t// 是否是编辑模式\n\tconst isEdit = ref(false)\n\t// 编辑时的初始值\n\tconst editValue = ref('')\n\t// 当前编辑的分类ID\n\tconst currentId = ref('')\n\t// 分类图片\n\tconst cateImage = ref('')\n\t// 图片上传状态\n\tconst imageUploading = ref(false)\n\t// 图片上传进度\n\tconst uploadProgress = ref(0)\n\t// 分类是否可见\n\tconst isVisible = ref(true)\n\t// 是否处于拖拽排序模式\n\tconst isDragMode = ref(false)\n\t// 当前拖拽的索引\n\tconst dragIndex = ref(-1)\n\t// 拖拽触摸点的初始y坐标\n\tconst touchStartY = ref(0)\n\t// 拖拽位置\n\tconst moveY = ref(0)\n\t// 记录滑动的起始位置\n\tconst startY = ref(0)\n\t// 记录元素原始位置，用于计算位移\n\tconst initialItemY = ref(0)\n\t// 判断是否正在滑动\n\tconst isSliding = ref(false)\n\t// 记录当前拖拽项的高度\n\tconst dragItemHeight = ref(90) // 默认高度为90rpx\n\t// 记录屏幕尺寸信息\n\tconst screenInfo = ref({\n\t\twindowWidth: 375,\n\t\twindowHeight: 667,\n\t\trpxRatio: 2 // 初始默认值，将在挂载时更新\n\t})\n\t\n\t// 序号模式\n\tconst showOrdinalMode = ref(false)\n\t\n\t// 是否正在编辑序号\n\tconst editingOrdinal = ref(false)\n\t\n\t// 序号编辑值\n\tconst ordinalValues = ref({})\n\t\n\t// 序号实时预览\n\tconst previewSortedList = computed(() => {\n\t\tif (!showOrdinalMode.value || !cateList.value || cateList.value.length === 0) return []\n\t\t\n\t\t// 创建带索引的序列，用于排序\n\t\tconst itemsWithIndex = cateList.value.map((item, index) => {\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\toriginalIndex: index,\n\t\t\t\tsortValue: ordinalValues.value[item._id] !== undefined \n\t\t\t\t\t? Number(ordinalValues.value[item._id]) \n\t\t\t\t\t: (item.sort_order !== undefined ? Number(item.sort_order) : 0)\n\t\t\t}\n\t\t})\n\t\t\n\t\t// 按sortValue排序\n\t\treturn [...itemsWithIndex].sort((a, b) => {\n\t\t\treturn b.sortValue - a.sortValue // 倒序，大的排前面\n\t\t})\n\t})\n\t\n\t// 调整序号值\n\tconst adjustOrdinalValue = (id, amount) => {\n\t\tif (!ordinalValues.value[id]) {\n\t\t\tordinalValues.value[id] = 0\n\t\t}\n\t\t\n\t\t// 转为数字并增加/减少\n\t\tlet currentValue = Number(ordinalValues.value[id]) || 0\n\t\tcurrentValue += amount\n\t\t\n\t\t// 确保不小于0\n\t\tcurrentValue = Math.max(0, currentValue)\n\t\t\n\t\t// 更新值\n\t\tordinalValues.value[id] = currentValue\n\t}\n\t\n\t// 防抖优化 - 输入序号变化时延迟更新\n\tconst debouncedUpdateOrdinal = (id, value) => {\n\t\t// 为每个ID创建一个定时器\n\t\tif (ordinalUpdateTimers[id]) {\n\t\t\tclearTimeout(ordinalUpdateTimers[id])\n\t\t}\n\t\t\n\t\t// 200ms后更新值\n\t\tordinalUpdateTimers[id] = setTimeout(() => {\n\t\t\tupdateOrdinalValue(id, value)\n\t\t}, 200)\n\t}\n\t\n\t// 序号更新定时器对象\n\tconst ordinalUpdateTimers = {}\n\t\n\t// 计算排序后的列表\n\tconst sortedCateList = computed(() => {\n\t\tif (!cateList.value || cateList.value.length === 0) return []\n\t\t\n\t\treturn [...cateList.value].sort((a, b) => {\n\t\t\t// 优先使用sort_order字段排序\n\t\t\tconst aSort = a.sort_order !== undefined ? Number(a.sort_order) : 0\n\t\t\tconst bSort = b.sort_order !== undefined ? Number(b.sort_order) : 0\n\t\t\treturn bSort - aSort // 倒序，让大的排在前面\n\t\t})\n\t})\n\t\n\t// 切换序号模式\n\tconst toggleOrdinalMode = () => {\n\t\tshowOrdinalMode.value = !showOrdinalMode.value\n\t\t\n\t\tif (showOrdinalMode.value) {\n\t\t\t// 初始化序号编辑值\n\t\t\tordinalValues.value = {}\n\t\t\tsortedCateList.value.forEach((item, index) => {\n\t\t\t\t// 使用现有的排序值或根据位置创建新的值（倒序）\n\t\t\t\tconst sortValue = item.sort_order !== undefined ? \n\t\t\t\t\titem.sort_order : \n\t\t\t\t\tsortedCateList.value.length - index\n\t\t\t\t\n\t\t\t\tordinalValues.value[item._id] = sortValue\n\t\t\t})\n\t\t\t\n\t\t\teditingOrdinal.value = false\n\t\t\t\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '进入序号排序模式',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2000\n\t\t\t})\n\t\t} else {\n\t\t\t// 清除所有定时器\n\t\t\tObject.keys(ordinalUpdateTimers).forEach(key => {\n\t\t\t\tclearTimeout(ordinalUpdateTimers[key])\n\t\t\t})\n\t\t}\n\t}\n\t\n\t// 开始编辑序号\n\tconst startEditOrdinal = () => {\n\t\teditingOrdinal.value = true\n\t}\n\t\n\t// 保存序号排序\n\tconst saveOrdinalSort = async () => {\n\t\ttry {\n\t\t\tuni.showLoading({\n\t\t\t\ttitle: '保存中...',\n\t\t\t\tmask: true\n\t\t\t})\n\t\t\t\n\t\t\t// 为每个分类设置排序值\n\t\t\tconst updatePromises = Object.entries(ordinalValues.value).map(([id, value]) => {\n\t\t\t\treturn cateApi.updateSort(id, Number(value));\n\t\t\t});\n\t\t\t\n\t\t\tawait Promise.all(updatePromises);\n\t\t\t\n\t\t\t// 隐藏加载提示\n\t\t\tuni.hideLoading()\n\t\t\t\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '排序已保存',\n\t\t\t\ticon: 'success'\n\t\t\t});\n\t\t\t\n\t\t\t// 重新获取列表，确保数据一致性\n\t\t\tawait cateListGet()\n\t\t\t\n\t\t\t// 退出序号模式\n\t\t\tshowOrdinalMode.value = false\n\t\t} catch (error) {\n\t\t\tconsole.error('保存排序失败:', error);\n\t\t\t\n\t\t\t// 隐藏加载提示\n\t\t\tuni.hideLoading()\n\t\t\t\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '保存排序失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t}\n\t}\n\t\n\t// 取消序号排序\n\tconst cancelOrdinalSort = () => {\n\t\tshowOrdinalMode.value = false\n\t\teditingOrdinal.value = false\n\t\t\n\t\tuni.showToast({\n\t\t\ttitle: '已取消序号排序',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n\t\n\t// 更新序号值\n\tconst updateOrdinalValue = (id, value) => {\n\t\t// 确保是数字\n\t\tlet numValue = Number(value)\n\t\t\n\t\t// 检查是否为有效数字\n\t\tif (isNaN(numValue)) {\n\t\t\tnumValue = 0\n\t\t}\n\t\t\n\t\t// 更新序号值\n\t\tordinalValues.value[id] = numValue\n\t}\n\t\n\t// 开始拖拽\n\tconst dragStart = (index, e) => {\n\t\tif (!cateList.value || cateList.value.length === 0 || !isDragMode.value) return\n\t\t\n\t\t// 获取当前触摸的y坐标\n\t\tconst touch = e.touches && e.touches[0]\n\t\tif (!touch) return\n\t\t\n\t\t// 获取当前索引的项\n\t\tconst item = cateList.value[index]\n\t\tif (!item) return\n\t\t\n\t\t// 将之前选中的项目复位\n\t\tif (dragIndex.value !== -1 && dragIndex.value !== index) {\n\t\t\tdragEnd()\n\t\t}\n\t\t\n\t\tdragIndex.value = index\n\t\t// 记录触摸起始位置\n\t\tstartY.value = touch.pageY\n\t\ttouchStartY.value = touch.pageY\n\t\tinitialItemY.value = index * dragItemHeight.value // 记录项的初始位置（rpx单位）\n\t\tisSliding.value = true\n\t\t\n\t\t// 添加轻微延迟，让视觉效果更好\n\t\tsetTimeout(() => {\n\t\t\t// 轻微振动，提供触感反馈\n\t\t\ttry {\n\t\t\t\tif (uni.vibrateShort) {\n\t\t\t\t\tuni.vibrateShort({\n\t\t\t\t\t\tsuccess: () => {},\n\t\t\t\t\t\tfail: () => {}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// 忽略振动失败错误\n\t\t\t}\n\t\t}, 50)\n\t}\n\t\n\t// 拖拽移动\n\tconst dragMove = (e) => {\n\t\tif (dragIndex.value === -1 || !isSliding.value || !cateList.value || cateList.value.length === 0 || !isDragMode.value) return\n\t\t\n\t\t// 获取当前触摸的y坐标\n\t\tconst touch = e.touches && e.touches[0]\n\t\tif (!touch) return\n\t\t\n\t\tconst pageY = touch.pageY\n\t\tmoveY.value = pageY\n\t\t\n\t\t// 计算移动距离\n\t\tconst moveDistance = pageY - startY.value\n\t\t\n\t\t// 节流，避免频繁更新导致的卡顿\n\t\tif (Math.abs(moveDistance) < 5) return // 微小移动不处理\n\t\t\n\t\t// 计算当前位置对应的索引\n\t\tconst itemHeight = dragItemHeight.value // 每项高度，单位rpx\n\t\tconst pxItemHeight = itemHeight / screenInfo.value.rpxRatio // 转换为px\n\t\t\n\t\t// 使用 uni.nextTick 确保视图更新后进行处理\n\t\tuni.nextTick(() => {\n\t\t\t// 获取拖拽区域的位置信息\n\t\t\tconst query = uni.createSelectorQuery()\n\t\t\tquery.select('.drag-list').boundingClientRect(data => {\n\t\t\t\tif (!data) return\n\t\t\t\t\n\t\t\t\t// 计算相对于拖拽区域顶部的位置\n\t\t\t\tconst relativeY = pageY - data.top\n\t\t\t\t\n\t\t\t\t// 计算目标索引（限制在有效范围内）\n\t\t\t\tlet targetIndex = Math.floor(relativeY / pxItemHeight)\n\t\t\t\ttargetIndex = Math.max(0, Math.min(cateList.value.length - 1, targetIndex))\n\t\t\t\t\n\t\t\t\t// 如果目标索引不同于当前拖拽索引，则交换位置\n\t\t\t\tif (targetIndex !== dragIndex.value) {\n\t\t\t\t\t// 获取当前拖拽的项\n\t\t\t\t\tconst dragItem = cateList.value[dragIndex.value]\n\t\t\t\t\tif (!dragItem) return\n\t\t\t\t\t\n\t\t\t\t\t// 创建新数组而不是直接修改\n\t\t\t\t\tconst newList = [...cateList.value]\n\t\t\t\t\tnewList.splice(dragIndex.value, 1)\n\t\t\t\t\tnewList.splice(targetIndex, 0, dragItem)\n\t\t\t\t\t\n\t\t\t\t\t// 直接更新数组，小程序环境下更可靠\n\t\t\t\t\tcateList.value = newList\n\t\t\t\t\t\n\t\t\t\t\t// 更新当前拖拽的索引\n\t\t\t\t\tdragIndex.value = targetIndex\n\t\t\t\t\t\n\t\t\t\t\t// 提供轻微触感反馈\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (uni.vibrateShort) {\n\t\t\t\t\t\t\tuni.vibrateShort({\n\t\t\t\t\t\t\t\tsuccess: () => {},\n\t\t\t\t\t\t\t\tfail: () => {}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t// 忽略振动失败错误\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 更新起始位置，避免重复触发\n\t\t\t\t\tstartY.value = pageY\n\t\t\t\t}\n\t\t\t}).exec()\n\t\t})\n\t}\n\t\n\t// 结束拖拽\n\tconst dragEnd = async () => {\n\t\t// 只有在滑动状态时才执行结束操作\n\t\tif (isSliding.value && dragIndex.value >= 0) {\n\t\t\t// 拖拽结束时，短振动\n\t\t\ttry {\n\t\t\t\tif (uni.vibrateShort) {\n\t\t\t\t\tuni.vibrateShort({\n\t\t\t\t\t\tsuccess: () => {},\n\t\t\t\t\t\tfail: () => {}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// 忽略振动失败错误\n\t\t\t}\n\t\t\t\n\t\t\t// 如果有实际拖动过（位置发生了变化），自动保存排序\n\t\t\t// 使用一个轻量级提示，不阻塞用户操作\n\t\t\tuni.showLoading({\n\t\t\t\ttitle: '保存中...',\n\t\t\t\tmask: false\n\t\t\t})\n\t\t\t\n\t\t\t// 等待微小延迟确保界面更新完成\n\t\t\tsetTimeout(async () => {\n\t\t\t\ttry {\n\t\t\t\t\t// 为每个分类设置排序值\n\t\t\t\t\tconst updatePromises = cateList.value.map((item, index) => {\n\t\t\t\t\t\t// 使用倒序，让大的排序值排在前面\n\t\t\t\t\t\tconst sortValue = cateList.value.length - index;\n\t\t\t\t\t\treturn cateApi.updateSort(item._id, sortValue);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tawait Promise.all(updatePromises);\n\t\t\t\t\t\n\t\t\t\t\t// 隐藏加载提示\n\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t\n\t\t\t\t\t// 使用较短时间的轻提示\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '排序已自动保存',\n\t\t\t\t\t\ticon: 'success',\n\t\t\t\t\t\tduration: 1500\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('自动保存排序失败:', error);\n\t\t\t\t\t\n\t\t\t\t\t// 隐藏加载提示\n\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '保存排序失败，请重试',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t\t\n\t\t// 重置状态\n\t\tdragIndex.value = -1\n\t\tisSliding.value = false\n\t}\n\n\t// 添加分类\n\tconst handleAddCate = () => {\n\t\tconsole.log(1)\n\t\t// isEdit为false代表此时添加操作\n\t\tisEdit.value = false\n\t\t// 重置图片和编辑值\n\t\tcateImage.value = ''\n\t\teditValue.value = ''\n\t\tisVisible.value = true\n\t\tshowPopup.value = true\n\t}\n\n\t// 编辑分类\n\tconst edit = async (id) => {\n\t\tif (!id) {\n\t\t\tconsole.error('编辑分类失败：无效的ID');\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '操作失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\ttry {\n\t\t\tisEdit.value = true\n\t\t\tcurrentId.value = id // 保存当前编辑的ID\n\t\t\t// 根据点击id获取对应分类名称\n\t\t\tconst res = await cateApi.get(id)\n\t\t\tif (res && res.data && res.data[0]) {\n\t\t\t\tconsole.log(res, '单个获取')\n\t\t\t\teditValue.value = res.data[0]?.cate_name || ''\n\t\t\t\tcateImage.value = res.data[0]?.cate_img || ''\n\t\t\t\tisVisible.value = res.data[0]?.is_visible !== false // 默认为true，除非明确设置为false\n\t\t\t\tshowPopup.value = true\n\t\t\t} else {\n\t\t\t\tthrow new Error('获取分类详情失败');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('获取分类信息失败:', error);\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '获取分类信息失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\t// 重置编辑状态\n\t\t\tisEdit.value = false;\n\t\t\tcurrentId.value = '';\n\t\t}\n\t}\n\n\t// 删除分类\n\tconst del = async (id) => {\n\t\tif (!id) {\n\t\t\tconsole.error('删除分类失败：无效的ID');\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '操作失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 添加确认框，防止误删\n\t\tuni.showModal({\n\t\t\ttitle: '确认删除',\n\t\t\tcontent: '是否确认删除该分类？删除后无法恢复',\n\t\t\tconfirmText: '删除',\n\t\t\tconfirmColor: '#ff0000',\n\t\t\tcancelText: '取消',\n\t\t\tsuccess: async (res) => {\n\t\t\t\tif (res.confirm) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\t\ttitle: '删除中...',\n\t\t\t\t\t\t\tmask: true\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst result = await cateApi.del(id)\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (result && result.deleted === 1) {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '删除成功',\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t// 重新获取列表\n\t\t\t\t\t\t\tawait cateListGet()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('删除失败')\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t\tconsole.error('删除失败:', error)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '删除失败: ' + (error.message || '未知错误'),\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\t\n\t// 选择图片\n\tconst chooseImage = async () => {\n\t\ttry {\n\t\t\tconst res = await uni.chooseImage({\n\t\t\t\tcount: 1,\n\t\t\t\tsizeType: ['compressed'],\n\t\t\t\tsourceType: ['album', 'camera']\n\t\t\t})\n\t\t\t\n\t\t\tif (res.tempFilePaths && res.tempFilePaths.length > 0) {\n\t\t\t\t// 先显示本地临时图片\n\t\t\t\tconst tempPath = res.tempFilePaths[0]\n\t\t\t\t\n\t\t\t\t// 上传图片到服务器\n\t\t\t\tawait uploadImage(tempPath)\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('选择图片失败:', e)\n\t\t\tif (e.errMsg !== 'chooseImage:fail cancel') {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '选择图片失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// 上传图片到服务器\n\tconst uploadImage = async (filePath) => {\n\t\ttry {\n\t\t\timageUploading.value = true\n\t\t\tuploadProgress.value = 0\n\t\t\t\n\t\t\t// 计算文件大小，如果过大则进行压缩\n\t\t\tconst fileInfo = await new Promise((resolve, reject) => {\n\t\t\t\tuni.getFileInfo({\n\t\t\t\t\tfilePath,\n\t\t\t\t\tsuccess: res => resolve(res),\n\t\t\t\t\tfail: err => reject(err)\n\t\t\t\t})\n\t\t\t})\n\t\t\t\n\t\t\tlet finalFilePath = filePath\n\t\t\t// 如果图片大于1MB，进行压缩\n\t\t\tif (fileInfo.size > 1024 * 1024) {\n\t\t\t\tfinalFilePath = await new Promise((resolve, reject) => {\n\t\t\t\t\tuni.compressImage({\n\t\t\t\t\t\tsrc: filePath,\n\t\t\t\t\t\tquality: 80,\n\t\t\t\t\t\tsuccess: res => resolve(res.tempFilePath),\n\t\t\t\t\t\tfail: err => reject(err)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\t// 获取文件扩展名\n\t\t\tconst fileExt = finalFilePath.substring(finalFilePath.lastIndexOf('.') + 1).toLowerCase()\n\t\t\t\n\t\t\t// 添加缓存控制和唯一文件名\n\t\t\tconst timestamp = Date.now()\n\t\t\tconst randomStr = Math.random().toString(36).substring(2, 10)\n\t\t\tconst cloudPath = `cate_icons/${timestamp}_${randomStr}.${fileExt}`\n\t\t\t\n\t\t\t// 上传到uniCloud云存储\n\t\t\tconst result = await uniCloud.uploadFile({\n\t\t\t\tfilePath: finalFilePath,\n\t\t\t\tcloudPath,\n\t\t\t\tonUploadProgress: (progressEvent) => {\n\t\t\t\t\tuploadProgress.value = Math.round((progressEvent.loaded / progressEvent.total) * 100)\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\tconsole.log('上传结果:', result)\n\t\t\t\n\t\t\tif (result.fileID) {\n\t\t\t\t// 获取临时访问链接\n\t\t\t\tconst tempUrl = await uniCloud.getTempFileURL({\n\t\t\t\t\tfileList: [result.fileID]\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tconsole.log('临时链接:', tempUrl)\n\t\t\t\t\n\t\t\t\tif (tempUrl.fileList && tempUrl.fileList[0] && tempUrl.fileList[0].tempFileURL) {\n\t\t\t\t\t// 更新图片URL\n\t\t\t\t\tcateImage.value = result.fileID\n\t\t\t\t\t\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '图片上传成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('获取临时链接失败')\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('上传失败')\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('上传图片错误:', e)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '图片上传失败: ' + (e.message || '未知错误'),\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t} finally {\n\t\t\timageUploading.value = false\n\t\t}\n\t}\n\n\t// 确认添加/编辑--弹框确认事件\n\tconst handleConfirm = async (data) => {\n\t\t// 检查是否正在上传图片\n\t\tif (imageUploading.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '图片正在上传中，请稍候',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// 如果是字符串，则兼容旧版本\n\t\tif (typeof data === 'string') {\n\t\t\tdata = {\n\t\t\t\tcate_name: data,\n\t\t\t\tcate_img: cateImage.value,\n\t\t\t\tis_visible: isVisible.value\n\t\t\t}\n\t\t} else if (!data.cate_img && cateImage.value) {\n\t\t\t// 确保图片URL被包含\n\t\t\tdata.cate_img = cateImage.value\n\t\t}\n\t\t\n\t\tif (isEdit.value) {\n\t\t\t// 编辑逻辑\n\t\t\tconsole.log('编辑', data)\n\t\t\tconst upRes = await cateApi.update(currentId.value, data) // 使用保存的ID\n\t\t\tconsole.log(upRes)\n\t\t\tif (upRes.updated === 1) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '更新成功',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t\tcateListGet()\n\t\t\t}\n\t\t} else {\n\t\t\t// 添加逻辑\n\t\t\tconsole.log('添加', data)\n\t\t\tconst res = await cateApi.add(data)\n\t\t\tif (res.id) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '添加成功',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t\tcateListGet()\n\t\t\t}\n\t\t}\n\t\t// 重置当前编辑的ID和图片\n\t\tcurrentId.value = ''\n\t\tcateImage.value = ''\n\t}\n\n\t// 点击取消\n\tconst handleCanner = () => {\n\t\tshowPopup.value = false\n\t}\n\t\n\t// 快速切换可见性\n\tconst toggleVisibility = async (id, currentVisibility) => {\n\t\tif (!id) {\n\t\t\tconsole.error('切换可见性失败：无效的ID');\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '操作失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 反转逻辑：当前是可见的，切换后应该隐藏，反之亦然\n\t\tconst newVisibility = !currentVisibility;\n\t\t\n\t\ttry {\n\t\t\t// 仅更新可见性字段\n\t\t\tconst upRes = await cateApi.update(id, {\n\t\t\t\tis_visible: newVisibility\n\t\t\t});\n\t\t\t\n\t\t\tif (upRes && upRes.updated === 1) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: newVisibility ? '已启用显示' : '已隐藏分类',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t\tcateListGet()\n\t\t\t} else {\n\t\t\t\tthrow new Error('切换可见性更新失败');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('切换可见性失败:', error);\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '操作失败，请重试',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t}\n\t}\n\t\n\t// 切换拖拽排序模式\n\tconst toggleDragMode = () => {\n\t\tif (isDragMode.value) {\n\t\t\t// 退出排序模式（不再询问是否保存，因为已经自动保存）\n\t\t\tisDragMode.value = false;\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '已退出排序模式',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t} else {\n\t\t\t// 进入排序模式\n\t\t\tisDragMode.value = true;\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '上下滑动排序分类，拖动后自动保存',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2500\n\t\t\t});\n\t\t}\n\t}\n\t\n\t// 保存排序结果\n\tconst saveSortOrders = async () => {\n\t\ttry {\n\t\t\tuni.showLoading({\n\t\t\t\ttitle: '保存中...',\n\t\t\t\tmask: true\n\t\t\t})\n\t\t\t\n\t\t\t// 为每个分类设置排序值\n\t\t\tconst updatePromises = cateList.value.map((item, index) => {\n\t\t\t\t// 使用倒序，让大的排序值排在前面\n\t\t\t\tconst sortValue = cateList.value.length - index;\n\t\t\t\treturn cateApi.updateSort(item._id, sortValue);\n\t\t\t});\n\t\t\t\n\t\t\tawait Promise.all(updatePromises);\n\t\t\t\n\t\t\t// 隐藏加载提示\n\t\t\tuni.hideLoading()\n\t\t\t\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '排序已保存',\n\t\t\t\ticon: 'success'\n\t\t\t});\n\t\t\t\n\t\t\t// 重新获取列表，确保数据一致性\n\t\t\tawait cateListGet()\n\t\t} catch (error) {\n\t\t\tconsole.error('保存排序失败:', error);\n\t\t\t\n\t\t\t// 隐藏加载提示\n\t\t\tuni.hideLoading()\n\t\t\t\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '保存排序失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t}\n\t}\n\n\t// 格式化图片URL\n\tconst formatImageUrl = (imageUrl) => {\n\t\t// 当imageUrl为空或无效值时返回默认图片\n\t\tif (!imageUrl || imageUrl === 'undefined' || imageUrl === 'null') {\n\t\t\treturn '/static/images/default.png';\n\t\t}\n\t\t\n\t\t// 如果是云存储fileID，不做处理\n\t\tif (imageUrl.startsWith('cloud://') || \n\t\t\timageUrl.startsWith('/static/') || \n\t\t\timageUrl.startsWith('http')) {\n\t\t\treturn imageUrl;\n\t\t}\n\t\t\n\t\t// 处理相对路径\n\t\tif (imageUrl.startsWith('/')) {\n\t\t\treturn imageUrl;\n\t\t}\n\t\t\n\t\treturn '/static/images/default.png';\n\t}\n\t\n\t// 图片加载错误处理函数\n\tconst handleImageError = (item, e) => {\n\t\tif (!item) return;\n\t\tconsole.warn('图片加载失败:', e);\n\t\t// 设置为本地默认图片\n\t\titem.cate_img = '/static/images/default.png';\n\t}\n\n\t// 一键隐藏所有分类\n\tconst hideAllCategories = async () => {\n\t\tif (batchOperationLoading.value) return;\n\t\tif (!cateList.value || cateList.value.length === 0) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '没有可隐藏的分类',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 统计可隐藏的分类数量\n\t\tconst visibleCategories = cateList.value.filter(item => item && item.is_visible !== false);\n\t\t\n\t\tif (visibleCategories.length === 0) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '所有分类已经是隐藏状态',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 确认操作\n\t\tuni.showModal({\n\t\t\ttitle: '确认隐藏',\n\t\t\tcontent: `是否隐藏所有分类？将有 ${visibleCategories.length} 个分类被隐藏，隐藏后分类将不会在前台显示。`,\n\t\t\tconfirmText: '隐藏全部',\n\t\t\tconfirmColor: '#399bfe',\n\t\t\tcancelText: '取消',\n\t\t\tsuccess: async (res) => {\n\t\t\t\tif (res.confirm) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbatchOperationLoading.value = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\t\ttitle: '处理中...',\n\t\t\t\t\t\t\tmask: true\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 使用分批处理\n\t\t\t\t\t\t// 每批处理的最大数量\n\t\t\t\t\t\tconst BATCH_SIZE = 10;\n\t\t\t\t\t\tlet successCount = 0;\n\t\t\t\t\t\tconst totalCount = visibleCategories.length;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 分批处理\n\t\t\t\t\t\tfor (let i = 0; i < totalCount; i += BATCH_SIZE) {\n\t\t\t\t\t\t\tconst batch = visibleCategories.slice(i, i + BATCH_SIZE);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 更新加载提示，显示进度\n\t\t\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\t\t\ttitle: `处理中 ${i + 1}-${Math.min(i + BATCH_SIZE, totalCount)}/${totalCount}...`,\n\t\t\t\t\t\t\t\tmask: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 并行处理一批请求\n\t\t\t\t\t\t\tconst batchPromises = batch.map(item => \n\t\t\t\t\t\t\t\tcateApi.update(item._id, { is_visible: false })\n\t\t\t\t\t\t\t\t\t.then(() => successCount++)\n\t\t\t\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(`更新分类 ${item._id} 失败:`, error);\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 等待当前批次完成\n\t\t\t\t\t\t\tawait Promise.all(batchPromises);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 隐藏加载提示\n\t\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 显示操作结果\n\t\t\t\t\t\tif (successCount === totalCount) {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: `已隐藏全部 ${successCount} 个分类`,\n\t\t\t\t\t\t\t\ticon: 'success',\n\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\ttitle: '操作结果',\n\t\t\t\t\t\t\t\tcontent: `成功隐藏 ${successCount}/${totalCount} 个分类，部分操作可能失败，请刷新后检查。`,\n\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\tconfirmText: '确定'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 重新获取列表\n\t\t\t\t\t\tawait cateListGet();\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('批量隐藏分类失败:', error);\n\t\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '操作失败，请重试',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tbatchOperationLoading.value = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t\n\t// 一键显示所有分类\n\tconst showAllCategories = async () => {\n\t\tif (batchOperationLoading.value) return;\n\t\tif (!cateList.value || cateList.value.length === 0) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '没有可显示的分类',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 统计可显示的分类数量\n\t\tconst hiddenCategories = cateList.value.filter(item => item && item.is_visible === false);\n\t\t\n\t\tif (hiddenCategories.length === 0) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '所有分类已经是显示状态',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 确认操作\n\t\tuni.showModal({\n\t\t\ttitle: '确认显示',\n\t\t\tcontent: `是否显示所有分类？将有 ${hiddenCategories.length} 个分类被显示，显示后分类将会在前台可见。`,\n\t\t\tconfirmText: '显示全部',\n\t\t\tconfirmColor: '#399bfe',\n\t\t\tcancelText: '取消',\n\t\t\tsuccess: async (res) => {\n\t\t\t\tif (res.confirm) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbatchOperationLoading.value = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\t\ttitle: '处理中...',\n\t\t\t\t\t\t\tmask: true\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 使用分批处理\n\t\t\t\t\t\t// 每批处理的最大数量\n\t\t\t\t\t\tconst BATCH_SIZE = 10;\n\t\t\t\t\t\tlet successCount = 0;\n\t\t\t\t\t\tconst totalCount = hiddenCategories.length;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 分批处理\n\t\t\t\t\t\tfor (let i = 0; i < totalCount; i += BATCH_SIZE) {\n\t\t\t\t\t\t\tconst batch = hiddenCategories.slice(i, i + BATCH_SIZE);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 更新加载提示，显示进度\n\t\t\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\t\t\ttitle: `处理中 ${i + 1}-${Math.min(i + BATCH_SIZE, totalCount)}/${totalCount}...`,\n\t\t\t\t\t\t\t\tmask: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 并行处理一批请求\n\t\t\t\t\t\t\tconst batchPromises = batch.map(item => \n\t\t\t\t\t\t\t\tcateApi.update(item._id, { is_visible: true })\n\t\t\t\t\t\t\t\t\t.then(() => successCount++)\n\t\t\t\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(`更新分类 ${item._id} 失败:`, error);\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 等待当前批次完成\n\t\t\t\t\t\t\tawait Promise.all(batchPromises);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 隐藏加载提示\n\t\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 显示操作结果\n\t\t\t\t\t\tif (successCount === totalCount) {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: `已显示全部 ${successCount} 个分类`,\n\t\t\t\t\t\t\t\ticon: 'success',\n\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\ttitle: '操作结果',\n\t\t\t\t\t\t\t\tcontent: `成功显示 ${successCount}/${totalCount} 个分类，部分操作可能失败，请刷新后检查。`,\n\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\tconfirmText: '确定'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 重新获取列表\n\t\t\t\t\t\tawait cateListGet();\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('批量显示分类失败:', error);\n\t\t\t\t\t\tuni.hideLoading();\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '操作失败，请重试',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tbatchOperationLoading.value = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n</script>\n\n<template>\n\t<view class=\"cateManage page-scroll\">\n\t\t<view class=\"header-actions\">\n\t\t\t<!-- 排序方式切换按钮组 -->\n\t\t\t<view class=\"action-buttons\">\n\t\t\t\t<view \n\t\t\t\t\tclass=\"action-btn\" \n\t\t\t\t\t:class=\"{'active': showOrdinalMode}\"\n\t\t\t\t\t@click=\"toggleOrdinalMode\"\n\t\t\t\t>\n\t\t\t\t\t<text>序号排序</text>\n\t\t\t\t</view>\n\t\t\t\t<view \n\t\t\t\t\tclass=\"action-btn\" \n\t\t\t\t\t:class=\"{'active': isDragMode}\"\n\t\t\t\t\t@click=\"toggleDragMode\"\n\t\t\t\t>\n\t\t\t\t\t<text>{{ isDragMode ? '退出排序' : '滑动排序' }}</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 批量操作按钮 -->\n\t\t<view class=\"batch-actions\" v-if=\"!loading && cateList.length > 0 && !isDragMode && !showOrdinalMode\">\n\t\t\t<view class=\"batch-title\">批量操作：</view>\n\t\t\t<view class=\"batch-buttons\">\n\t\t\t\t<view class=\"batch-btn show-all\" @click=\"showAllCategories\">\n\t\t\t\t\t<uni-icons type=\"eye-filled\" size=\"18\" color=\"#399bfe\"></uni-icons>\n\t\t\t\t\t<text>全部显示</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"batch-btn hide-all\" @click=\"hideAllCategories\">\n\t\t\t\t\t<uni-icons type=\"eye-slash-filled\" size=\"18\" color=\"#666\"></uni-icons>\n\t\t\t\t\t<text>全部隐藏</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 加载状态 -->\n\t\t<view class=\"loading-container\" v-if=\"loading\">\n\t\t\t<uni-icons type=\"spinner-cycle\" size=\"30\" color=\"#399bfe\"></uni-icons>\n\t\t\t<text class=\"loading-text\">加载中...</text>\n\t\t</view>\n\t\t\n\t\t<!-- 空状态提示 -->\n\t\t<view class=\"empty-container\" v-else-if=\"cateList.length === 0\">\n\t\t\t<uni-icons type=\"info\" size=\"50\" color=\"#999\"></uni-icons>\n\t\t\t<text class=\"empty-text\">暂无分类数据</text>\n\t\t</view>\n\t\t\n\t\t<scroll-view \n\t\t\tclass=\"cateName\" \n\t\t\t:class=\"{'sort-mode': isDragMode, 'ordinal-mode': showOrdinalMode}\" \n\t\t\tv-else\n\t\t\tscroll-y=\"true\"\n\t\t\t:enable-back-to-top=\"true\"\n\t\t\t:scroll-with-animation=\"true\"\n\t\t\t:bounces=\"true\"\n\t\t\t:show-scrollbar=\"true\"\n\t\t\t:scroll-top=\"scrollTop\"\n\t\t\t@scroll=\"handleScroll\"\n\t\t\t:id=\"scrollViewId\"\n\t\t>\n\t\t\t<!-- 序号排序模式 -->\n\t\t\t<view class=\"ordinal-list\" v-if=\"showOrdinalMode\">\n\t\t\t\t<view class=\"ordinal-header\">\n\t\t\t\t\t<text class=\"ordinal-title\">通过修改序号进行排序 (数字越大排越前)</text>\n\t\t\t\t\t<view class=\"ordinal-actions\">\n\t\t\t\t\t\t<button class=\"btn cancel-btn\" @click=\"cancelOrdinalSort\">取消</button>\n\t\t\t\t\t\t<button class=\"btn save-btn\" @click=\"saveOrdinalSort\">保存</button>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 排序预览标题 -->\n\t\t\t\t<view class=\"preview-header\" v-if=\"previewSortedList.length > 0\">\n\t\t\t\t\t<text class=\"preview-title\">排序预览</text>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 序号排序项 -->\n\t\t\t\t<view class=\"ordinal-item\" v-for=\"item in previewSortedList\" :key=\"item._id\">\n\t\t\t\t\t<view class=\"name-container\">\n\t\t\t\t\t\t<image \n\t\t\t\t\t\t\tclass=\"cate-image\" \n\t\t\t\t\t\t\t:src=\"formatImageUrl(item && item.cate_img)\" \n\t\t\t\t\t\t\tmode=\"aspectFill\" \n\t\t\t\t\t\t\t@error=\"(e) => handleImageError(item, e)\"\n\t\t\t\t\t\t\t@load=\"() => {}\"\n\t\t\t\t\t\t></image>\n\t\t\t\t\t\t<view class=\"name\" :class=\"{ 'hidden-category': !item.is_visible }\">\n\t\t\t\t\t\t\t{{item ? item.cate_name : ''}}\n\t\t\t\t\t\t\t<text class=\"hidden-label\" v-if=\"item && !item.is_visible\">(已隐藏)</text>\n\t\t\t\t\t\t\t<text class=\"visible-label\" v-else-if=\"item\">(已显示)</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"ordinal-controls\">\n\t\t\t\t\t\t<view class=\"ordinal-btn decrease\" @click=\"adjustOrdinalValue(item._id, -1)\">\n\t\t\t\t\t\t\t<uni-icons type=\"minus\" size=\"20\" color=\"#666\"></uni-icons>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"ordinal-input-wrapper\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"number\" \n\t\t\t\t\t\t\t\tclass=\"ordinal-input\" \n\t\t\t\t\t\t\t\t:value=\"ordinalValues[item._id]\" \n\t\t\t\t\t\t\t\t@input=\"e => debouncedUpdateOrdinal(item._id, e.detail.value)\"\n\t\t\t\t\t\t\t\tmaxlength=\"5\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"ordinal-btn increase\" @click=\"adjustOrdinalValue(item._id, 1)\">\n\t\t\t\t\t\t\t<uni-icons type=\"plus\" size=\"20\" color=\"#399bfe\"></uni-icons>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 普通模式 -->\n\t\t\t<view class=\"normal-list\" v-else-if=\"!isDragMode\">\n\t\t\t\t<view class=\"value\" v-for=\"(item, index) in sortedCateList\" :key=\"item._id\">\n\t\t\t\t\t<view class=\"order-badge\">{{item.sort_order || (sortedCateList.length - index)}}</view>\n\t\t\t\t\t<view class=\"name-container\">\n\t\t\t\t\t\t<image \n\t\t\t\t\t\t\tclass=\"cate-image\" \n\t\t\t\t\t\t\t:src=\"formatImageUrl(item && item.cate_img)\" \n\t\t\t\t\t\t\tmode=\"aspectFill\" \n\t\t\t\t\t\t\t@error=\"(e) => handleImageError(item, e)\"\n\t\t\t\t\t\t\t@load=\"() => {}\"\n\t\t\t\t\t\t></image>\n\t\t\t\t\t\t<view class=\"name\" :class=\"{ 'hidden-category': !item.is_visible }\">\n\t\t\t\t\t\t\t{{item ? item.cate_name : ''}}\n\t\t\t\t\t\t\t<text class=\"hidden-label\" v-if=\"item && !item.is_visible\">(已隐藏)</text>\n\t\t\t\t\t\t\t<text class=\"visible-label\" v-else-if=\"item\">(已显示)</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"right\">\n\t\t\t\t\t\t<switch \n\t\t\t\t\t\t\t:checked=\"item && item.is_visible !== false\" \n\t\t\t\t\t\t\t@change=\"() => toggleVisibility(item._id, item && item.is_visible !== false)\" \n\t\t\t\t\t\t\tcolor=\"#399bfe\"\n\t\t\t\t\t\t\tstyle=\"margin-right: 16rpx;\"\n\t\t\t\t\t\t\tscale=\"0.8\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<uni-icons @click=\"edit(item._id)\" style=\"margin-right: 16rpx;\" color=\"#399bfe\"\n\t\t\t\t\t\t\ttype=\"compose\" size=\"22\"></uni-icons>\n\t\t\t\t\t\t<uni-icons @click=\"del(item._id)\" color=\"#e65c00\" custom-prefix=\"iconfont\"\n\t\t\t\t\t\t\ttype=\"icon-shanchu1\" size=\"20\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 拖动排序模式 -->\n\t\t\t<view class=\"drag-list\" v-else>\n\t\t\t\t<movable-area :style=\"{ width: '100%', height: cateList.length * dragItemHeight + 'rpx' }\">\n\t\t\t\t\t<movable-view \n\t\t\t\t\t\tv-for=\"(item, index) in cateList\" \n\t\t\t\t\t\t:key=\"item && item._id ? item._id : index\"\n\t\t\t\t\t\tdirection=\"vertical\"\n\t\t\t\t\t\t:x=\"0\"\n\t\t\t\t\t\t:y=\"index * dragItemHeight\" \n\t\t\t\t\t\t:style=\"{ \n\t\t\t\t\t\t\twidth: '100%', \n\t\t\t\t\t\t\theight: dragItemHeight + 'rpx', \n\t\t\t\t\t\t\tzIndex: dragIndex === index ? 10 : 1,\n\t\t\t\t\t\t\ttransition: dragIndex === index ? 'none' : 'transform 0.3s ease, background-color 0.2s ease',\n\t\t\t\t\t\t\ttransform: dragIndex === index ? 'scale(1.02)' : 'scale(1)'\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\t:animation=\"dragIndex === index ? false : true\"\n\t\t\t\t\t\t@touchstart=\"(e) => dragStart(index, e)\"\n\t\t\t\t\t\t@touchmove=\"dragMove\"\n\t\t\t\t\t\t@touchend=\"dragEnd\"\n\t\t\t\t\t\t@touchcancel=\"dragEnd\"\n\t\t\t\t\t\t:class=\"{ 'being-dragged': dragIndex === index }\"\n\t\t\t\t\t\t:damping=\"50\"\n\t\t\t\t\t\t:friction=\"10\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<view class=\"value\" :class=\"{ 'sliding': dragIndex === index }\">\n\t\t\t\t\t\t\t<view class=\"name-container\">\n\t\t\t\t\t\t\t\t<image \n\t\t\t\t\t\t\t\t\tclass=\"cate-image\" \n\t\t\t\t\t\t\t\t\t:src=\"formatImageUrl(item && item.cate_img)\" \n\t\t\t\t\t\t\t\t\tmode=\"aspectFill\" \n\t\t\t\t\t\t\t\t\t@error=\"(e) => handleImageError(item, e)\"\n\t\t\t\t\t\t\t\t\t@load=\"() => {}\"\n\t\t\t\t\t\t\t\t></image>\n\t\t\t\t\t\t\t\t<view class=\"name\" :class=\"{ 'hidden-category': item && !item.is_visible }\">\n\t\t\t\t\t\t\t\t\t{{item ? item.cate_name : ''}}\n\t\t\t\t\t\t\t\t\t<text class=\"hidden-label\" v-if=\"item && !item.is_visible\">(已隐藏)</text>\n\t\t\t\t\t\t\t\t\t<text class=\"visible-label\" v-else-if=\"item\">(已显示)</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"right\">\n\t\t\t\t\t\t\t\t<view class=\"drag-handle\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"bars\" size=\"22\" color=\"#999\"></uni-icons>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</movable-view>\n\t\t\t\t</movable-area>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 添加底部空白区域确保有滚动空间 -->\n\t\t\t<view class=\"bottom-space\"></view>\n\t\t</scroll-view>\n\t</view>\n\t<!-- 弹框 -->\n\t<manage-popup \n\t\t:show=\"showPopup\" \n\t\t:title=\"isEdit ? '编辑分类' : '添加分类'\" \n\t\t:edit-value=\"editValue\"\n\t\t:image-url=\"cateImage\"\n\t\t:image-uploading=\"imageUploading\"\n\t\t:upload-progress=\"uploadProgress\"\n\t\t:is-visible=\"isVisible\"\n\t\t@choose-image=\"chooseImage\"\n\t\t@confirm=\"handleConfirm\" \n\t\t@update:show=\"handleCanner\" \n\t/>\n\t<!-- 悬浮按钮 -->\n\t<floatButton icon=\"plus\" :size=\"100\" :position=\"{bottom: '120rpx', right: '40rpx'}\"\n\t\t@click=\"handleAddCate\"></floatButton>\n</template>\n\n<style lang=\"scss\" scoped>\n\t/*防止分包页面公共样式无法读取*/\n\t@import \"@/style/common.scss\";\n\n\t.page-scroll {\n\t\tmin-height: 100vh;\n\t\theight: 100vh;\n\t\toverflow-y: scroll;\n\t\tposition: relative;\n\t\t-webkit-overflow-scrolling: touch; /* 增强iOS滚动体验 */\n\t\tpadding-bottom: 150rpx; /* 为悬浮按钮预留空间 */\n\t\tbox-sizing: border-box;\n\t}\n\n\t.cateManage {\n\t\t@include pagesBaseStyle;\n\t\theight: auto;\n\t\toverflow: visible;\n\t\tpadding-bottom: 100rpx;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\t\n\t\t.header-actions {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: flex-end;\n\t\t\tpadding: 20rpx 24rpx;\n\t\t\tposition: sticky;\n\t\t\ttop: 0;\n\t\t\tz-index: 10;\n\t\t\tbackground-color: #f7f7f7;\n\t\t\tborder-bottom: 1rpx solid #eee;\n\t\t\t\n\t\t\t.action-buttons {\n\t\t\t\tdisplay: flex;\n\t\t\t\tgap: 16rpx;\n\t\t\t\t\n\t\t\t\t.action-btn {\n\t\t\t\t\tbackground-color: #399bfe;\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tfont-size: 26rpx;\n\t\t\t\t\tpadding: 12rpx 24rpx;\n\t\t\t\t\tborder-radius: 30rpx;\n\t\t\t\t\tbox-shadow: 0 2rpx 8rpx rgba(57, 155, 254, 0.3);\n\t\t\t\t\ttransition: all 0.3s;\n\t\t\t\t\t\n\t\t\t\t\t&.active {\n\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\tcolor: #399bfe;\n\t\t\t\t\t\tborder: 1px solid #399bfe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.batch-actions {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t\tpadding: 20rpx 24rpx;\n\t\t\tposition: relative;\n\t\t\tz-index: 9;\n\t\t\tbackground-color: #fff;\n\t\t\tborder-bottom: 1rpx solid #eee;\n\t\t\tmargin-bottom: 16rpx;\n\t\t\t\n\t\t\t.batch-title {\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: #666;\n\t\t\t}\n\t\t\t\n\t\t\t.batch-buttons {\n\t\t\t\tdisplay: flex;\n\t\t\t\tgap: 16rpx;\n\t\t\t\t\n\t\t\t\t.batch-btn {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tgap: 8rpx;\n\t\t\t\t\tfont-size: 26rpx;\n\t\t\t\t\tpadding: 10rpx 20rpx;\n\t\t\t\t\tborder-radius: 30rpx;\n\t\t\t\t\ttransition: all 0.3s;\n\t\t\t\t\t\n\t\t\t\t\t&.show-all {\n\t\t\t\t\t\tbackground-color: #eef9ff;\n\t\t\t\t\t\tcolor: #399bfe;\n\t\t\t\t\t\tborder: 1px solid #399bfe;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t&.hide-all {\n\t\t\t\t\t\tbackground-color: #f7f7f7;\n\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t\tborder: 1px solid #ddd;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t&:active {\n\t\t\t\t\t\ttransform: scale(0.98);\n\t\t\t\t\t\topacity: 0.9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.loading-container,\n\t\t.empty-container {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tpadding: 80rpx 0;\n\t\t\tbackground-color: #fff;\n\t\t\tborder-radius: 24rpx;\n\t\t\tmargin-bottom: 40rpx;\n\t\t\t\n\t\t\t.loading-text,\n\t\t\t.empty-text {\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: #999;\n\t\t\t\tmargin-top: 20rpx;\n\t\t\t}\n\t\t}\n\n\t\t.cateName {\n\t\t\tpadding: 24rpx;\n\t\t\tborder-radius: 24rpx;\n\t\t\tbackground-color: #fff;\n\t\t\tmargin-bottom: 30rpx;\n\t\t\tflex: 1;\n\t\t\toverflow-y: visible;\n\t\t\t\n\t\t\t.normal-list {\n\t\t\t\theight: auto;\n\t\t\t\toverflow-y: visible;\n\t\t\t}\n\t\t\t\n\t\t\t&.sort-mode {\n\t\t\t\t.value {\n\t\t\t\t\ttouch-action: none;\n\t\t\t\t\t\n\t\t\t\t\t&.sliding {\n\t\t\t\t\t\tbackground-color: #f0f9ff;\n\t\t\t\t\t\ttransform: scale(1.01);\n\t\t\t\t\t\tbox-shadow: 0 4rpx 16rpx rgba(57, 155, 254, 0.2);\n\t\t\t\t\t\tborder-left: 6rpx solid #399bfe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.drag-list {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: auto;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\t\n\t\t\t\t\tmovable-view {\n\t\t\t\t\t\twill-change: transform;\n\t\t\t\t\t\t\n\t\t\t\t\t\t&.being-dragged {\n\t\t\t\t\t\t\t.value {\n\t\t\t\t\t\t\t\tbackground-color: #f0f9ff;\n\t\t\t\t\t\t\t\tborder-left: 6rpx solid #399bfe;\n\t\t\t\t\t\t\t\tbox-shadow: 0 4rpx 16rpx rgba(57, 155, 254, 0.25);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.ordinal-mode {\n\t\t\t\t.ordinal-list {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: auto;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\t\n\t\t\t\t\t.ordinal-header {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tflex-direction: column;\n\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\tpadding: 16rpx;\n\t\t\t\t\t\tmargin-bottom: 16rpx;\n\t\t\t\t\t\tborder-bottom: 1px solid #eee;\n\t\t\t\t\t\tposition: sticky;\n\t\t\t\t\t\ttop: 0;\n\t\t\t\t\t\tz-index: 9;\n\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\t\n\t\t\t\t\t\t.ordinal-title {\n\t\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\t\tcolor: $pyq-text-color-body;\n\t\t\t\t\t\t\tmargin-bottom: 16rpx;\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.ordinal-actions {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tgap: 16rpx;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t.btn {\n\t\t\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\t\t\tpadding: 0;\n\t\t\t\t\t\t\t\theight: 70rpx;\n\t\t\t\t\t\t\t\tline-height: 70rpx;\n\t\t\t\t\t\t\t\tflex: 1;\n\t\t\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\t\t\tborder-radius: 35rpx;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t.cancel-btn {\n\t\t\t\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t.save-btn {\n\t\t\t\t\t\t\t\tbackground-color: #399bfe;\n\t\t\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.preview-header {\n\t\t\t\t\t\tpadding: 12rpx 16rpx;\n\t\t\t\t\t\tbackground-color: #f7f9fc;\n\t\t\t\t\t\tmargin-bottom: 10rpx;\n\t\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t.preview-title {\n\t\t\t\t\t\t\tfont-size: 26rpx;\n\t\t\t\t\t\t\tcolor: #666;\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.ordinal-item {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\tpadding: 16rpx;\n\t\t\t\t\t\tborder-bottom: 1px solid $pyq-border-color-translucent;\n\t\t\t\t\t\t\n\t\t\t\t\t\t&:nth-last-child(1) {\n\t\t\t\t\t\t\tborder: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.name-container {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tflex: 1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t.cate-image {\n\t\t\t\t\t\t\t\twidth: 60rpx;\n\t\t\t\t\t\t\t\theight: 60rpx;\n\t\t\t\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\t\t\t\tmargin-right: 16rpx;\n\t\t\t\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\t\t\t\tobject-fit: cover;\n\t\t\t\t\t\t\t\tbox-shadow: 0 2rpx 4rpx rgba(0, 0, 0, 0.1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t.name {\n\t\t\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t&.hidden-category {\n\t\t\t\t\t\t\t\t\tcolor: #999;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t.hidden-label {\n\t\t\t\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\t\t\t\tcolor: #999;\n\t\t\t\t\t\t\t\t\tmargin-left: 8rpx;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t.visible-label {\n\t\t\t\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\t\t\t\tcolor: #399bfe;\n\t\t\t\t\t\t\t\t\tmargin-left: 8rpx;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.ordinal-controls {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t.ordinal-btn {\n\t\t\t\t\t\t\t\twidth: 70rpx;\n\t\t\t\t\t\t\t\theight: 70rpx;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t&.decrease {\n\t\t\t\t\t\t\t\t\tmargin-right: 8rpx;\n\t\t\t\t\t\t\t\t\tborder: 1px solid #ddd;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t&.increase {\n\t\t\t\t\t\t\t\t\tmargin-left: 8rpx;\n\t\t\t\t\t\t\t\t\tbackground-color: #eef8ff;\n\t\t\t\t\t\t\t\t\tborder: 1px solid #c0e0ff;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t&:active {\n\t\t\t\t\t\t\t\t\topacity: 0.8;\n\t\t\t\t\t\t\t\t\ttransform: scale(0.95);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t.ordinal-input-wrapper {\n\t\t\t\t\t\t\t\tmin-width: 80rpx;\n\t\t\t\t\t\t\t\twidth: 80rpx;\n\t\t\t\t\t\t\t\theight: 70rpx;\n\t\t\t\t\t\t\t\tborder: 1px solid #ddd;\n\t\t\t\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\t\tjustify-content: center;\n\t\t\t\t\t\t\t\tbackground-color: #fcfcfc;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t.ordinal-input {\n\t\t\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\t\t\t\tborder: none;\n\t\t\t\t\t\t\t\t\toutline: none;\n\t\t\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\t\t\t\tbackground-color: transparent;\n\t\t\t\t\t\t\t\t\tcolor: #399bfe;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.value {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\tpadding: 16rpx;\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: $pyq-text-color-body;\n\t\t\t\tborder-bottom: 1px solid $pyq-border-color-translucent;\n\t\t\t\tbackground-color: #fff;\n\t\t\t\ttransition: all 0.2s ease;\n\t\t\t\tposition: relative;\n\n\t\t\t\t&:nth-last-child(1) {\n\t\t\t\t\tborder: none;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.order-badge {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\theight: 36rpx;\n\t\t\t\t\tmin-width: 36rpx;\n\t\t\t\t\tpadding: 0 8rpx;\n\t\t\t\t\tbackground-color: #399bfe;\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tfont-size: 22rpx;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tborder-bottom-right-radius: 8rpx;\n\t\t\t\t}\n\n\t\t\t\t.name-container {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tmargin-left: 16rpx;\n\t\t\t\t\t\n\t\t\t\t\t.cate-image {\n\t\t\t\t\t\twidth: 60rpx;\n\t\t\t\t\t\theight: 60rpx;\n\t\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\t\tmargin-right: 16rpx;\n\t\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\t\tobject-fit: cover;\n\t\t\t\t\t\tbox-shadow: 0 2rpx 4rpx rgba(0, 0, 0, 0.1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.name {\n\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t&.hidden-category {\n\t\t\t\t\t\t\tcolor: #999;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.hidden-label {\n\t\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\t\tcolor: #999;\n\t\t\t\t\t\t\tmargin-left: 8rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.visible-label {\n\t\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\t\tcolor: #399bfe;\n\t\t\t\t\t\t\tmargin-left: 8rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.right {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\t\n\t\t\t\t\t.drag-handle {\n\t\t\t\t\t\tpadding: 10rpx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.bottom-space {\n\t\t\theight: 120rpx; /* 底部留空 */\n\t\t}\n\t}\n</style>","import MiniProgramPage from 'D:/代码测试/wx2/subPages/cateManage/cateManage.vue'\nwx.createPage(MiniProgramPage)"],"names":["uniCloud","ref","uni","nextTick","onShow","onMounted","computed"],"mappings":"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"}