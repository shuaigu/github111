{"version":3,"file":"articleDetail-choujia.js","sources":["components/articleDetail-choujia/articleDetail-choujia.vue","../../软件/HBuilderX/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDov5Luj56CB5rWL6K-VL3d4Mi9jb21wb25lbnRzL2FydGljbGVEZXRhaWwtY2hvdWppYS9hcnRpY2xlRGV0YWlsLWNob3VqaWEudnVl"],"sourcesContent":["<template>\n\t<view class=\"lottery-container\">\n\t\t<view class=\"lottery-header\">\n\t\t\t<text class=\"lottery-title\">评论区抽大奖</text>\n\t\t\t<view class=\"lottery-subtitle\">\n\t\t\t\t<text class=\"participants-count\">\n\t\t\t\t\t<text class=\"count-number\">{{commenterCount}}</text>\n\t\t\t\t\t<text>人已参与</text>\n\t\t\t\t\t<text v-if=\"commenterCount < 9\" class=\"remaining-slots\">，还剩{{9 - commenterCount}}个名额</text>\n\t\t\t\t</text>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 用户列表抽奖 -->\n\t\t<view class=\"user-grid\">\n\t\t\t<view \n\t\t\t\tv-for=\"(user, index) in displayUsers\" \n\t\t\t\t:key=\"index\"\n\t\t\t\t:class=\"['user-cell', {'active': currentIndex === index, 'winner': winnerIndex === index && showResult}]\"\n\t\t\t>\n\t\t\t\t<view class=\"user-content\">\n\t\t\t\t\t<image \n\t\t\t\t\t\tv-if=\"user.avatarUrl\" \n\t\t\t\t\t\tclass=\"user-avatar\" \n\t\t\t\t\t\t:src=\"user.avatarUrl\" \n\t\t\t\t\t\tmode=\"aspectFill\"\n\t\t\t\t\t></image>\n\t\t\t\t\t<view v-else class=\"empty-avatar clickable\" @click=\"handleCommentClick(index)\">\n\t\t\t\t\t\t<text>点击参与</text>\n\t\t\t\t\t\t<text class=\"add-icon\">+</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<text class=\"user-nickname\" v-if=\"user.nickName\">{{user.nickName}}</text>\n\t\t\t\t\t<text class=\"user-nickname\" v-else-if=\"user._id\">{{getUserDisplayName(user)}}</text>\n\t\t\t\t\t<text class=\"user-nickname\" v-else>等待参与</text>\n\t\t\t\t\t<text class=\"user-probability\">{{userProbability}}%</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 抽奖按钮 -->\n\t\t<view class=\"lottery-btn\" @click=\"handleLotteryBtn\" :class=\"{'rotating': isRotating}\">\n\t\t\t<text class=\"btn-text\">{{getBtnText()}}</text>\n\t\t</view>\n\t\t\n\t\t<!-- 中奖弹窗 - 修改为默认显示 -->\n\t\t<view v-if=\"showResult && winner\" class=\"result-popup\">\n\t\t\t<view class=\"result-content\">\n\t\t\t\t<view class=\"result-header\">抽奖结果</view>\n\t\t\t\t\n\t\t\t\t<!-- 显示中奖用户 -->\n\t\t\t\t<view v-if=\"winner\" class=\"lucky-users\">\n\t\t\t\t\t<view class=\"lucky-users-title\">恭喜幸运用户:</view>\n\t\t\t\t\t<view class=\"prize-time\">{{ currentTime }}</view>\n\t\t\t\t\t<view class=\"lucky-user-item\">\n\t\t\t\t\t\t<image class=\"lucky-user-avatar\" :src=\"winner.avatarUrl || '/static/images/default-avatar.png'\" mode=\"aspectFill\"></image>\n\t\t\t\t\t\t<view class=\"lucky-user-info\">\n\t\t\t\t\t\t\t<view class=\"name-time-container\">\n\t\t\t\t\t\t\t\t<text class=\"lucky-user-name\">{{getUserDisplayName(winner)}}</text>\n\t\t\t\t\t\t\t\t<text class=\"time\" v-if=\"winner.create_time\">{{formatTime(winner.create_time)}}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 显示概率信息 -->\n\t\t\t\t<view class=\"probability-info\">\n\t\t\t\t\t<view class=\"probability-title\">本次抽奖概率分布</view>\n\t\t\t\t\t<view class=\"probability-note\">所有参与者概率相等: {{userProbability}}%</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<button class=\"result-btn\" @click=\"closeResult\">确定</button>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, computed, watch } from 'vue';\n\n// 定义props接收评论者列表\nconst props = defineProps({\n\tcommenters: {\n\t\ttype: Array,\n\t\tdefault: () => []\n\t},\n\tarticleId: {\n\t\ttype: String,\n\t\tdefault: ''\n\t}\n});\n\n// 是否显示概率\nconst showProbability = ref(true);\n\n// 定义事件\nconst emit = defineEmits(['lottery-result', 'show-comment', 'position-updated']);\n\n// 参与抽奖的用户列表\nconst participantsList = reactive([]);\n\n// 创建一个9宫格位置映射\nconst gridPositions = reactive(Array(9).fill(null));\n\n// 位置数据加载状态\nconst isPositionsLoading = ref(false);\n\n// 位置数据保存状态\nconst isSavingPositions = ref(false);\n\n// 抽奖历史记录相关\n// const lotteryHistory = ref([]);\n// const isHistoryLoading = ref(false);\n// const currentHistoryPage = ref(1);\n// const totalHistoryPages = ref(1);\n// const historyPageSize = 5;\n// const lotteryHistoryVisible = ref(false);\n\n// 显示在9宫格中的用户\nconst displayUsers = computed(() => {\n\t// 创建结果数组\n\tconst result = [];\n\t\n\t// 填充9个位置\n\tfor (let i = 0; i < 9; i++) {\n\t\t// 检查该位置是否已经有用户\n\t\tif (gridPositions[i]) {\n\t\t\t// 如果有用户，使用该用户数据\n\t\t\tresult.push(gridPositions[i]);\n\t\t} else {\n\t\t\t// 如果没有用户，使用空对象\n\t\t\tresult.push({});\n\t\t}\n\t}\n\t\n\treturn result;\n});\n\n// 计算每个用户的中奖概率\nconst userProbability = computed(() => {\n\tif (participantsList.length === 0) return 0;\n\t// 所有用户概率相等，概率为 100/参与人数\n\tconst probability = (100 / participantsList.length).toFixed(2);\n\treturn probability;\n});\n\n// 当前高亮索引\nconst currentIndex = ref(-1);\n\n// 中奖者索引\nconst winnerIndex = ref(-1);\n\n// 显示结果弹窗\nconst showResult = ref(false);\n\n// 抽奖状态\nconst isRotating = ref(false);\n\n// 获取中奖用户\nconst winner = ref(null);\n\n// 概率分布信息\nconst probabilityInfo = ref([]);\n\n// 计算评论者数量 - 显示实际参与抽奖的人数（最多9人）\nconst commenterCount = computed(() => {\n\t// 遍历gridPositions，统计有头像的格子\n\tlet count = 0;\n\tfor (let i = 0; i < 9; i++) {\n\t\tif (gridPositions[i] && (gridPositions[i].avatarUrl || gridPositions[i]._id)) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n});\n\n// 添加当前时间\nconst currentTime = ref('');\n\n// 添加记录点击位置的变量\nlet currentClickPosition = -1;\n\n// 添加加载标志位\nconst hasLoaded = ref(false);\n\n// 修改监听评论者列表变化\nwatch(() => props.commenters, (newVal) => {\n\tif (newVal && newVal.length > 0) {\n\t\t// 当评论者列表变化时，重置抽奖\n\t\tshowResult.value = false;\n\t\twinner.value = null;\n\t\twinnerIndex.value = -1;\n\t\t\n\t\t// 更新参与列表\n\t\tupdateParticipantsList();\n\t}\n}, { deep: true });\n\nlet timer = null;\nlet times = 0;\n\n// 添加用户昵称或手机号的计算属性\nconst getUserDisplayName = (user) => {\n\tif (!user) return '';\n\treturn user.nickName || user.mobile || '匿名用户';\n};\n\n// 从云端加载用户位置数据\nconst loadGridPositionsFromCloud = async () => {\n\t// 如果已经加载过，避免重复加载\n\tif (hasLoaded.value) {\n\t\tconsole.log('已经加载过位置数据，跳过重复加载');\n\t\treturn true;\n\t}\n\t\n\t// 如果没有文章ID，则跳过\n\tif (!props.articleId) {\n\t\tconsole.warn('没有文章ID，无法加载位置数据');\n\t\treturn false;\n\t}\n\t\n\ttry {\n\t\tisPositionsLoading.value = true;\n\t\t\n\t\t// 调用云函数获取位置数据\n\t\tconst choujiangWx = uniCloud.importObject('choujiangWx');\n\t\tconst result = await choujiangWx.getGridPositions(props.articleId);\n\t\t\n\t\tif (result.success && result.gridPositions) {\n\t\t\tconsole.log('从云端加载的位置数据:', result.gridPositions);\n\t\t\t\n\t\t\t// 清空当前网格位置\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tgridPositions[i] = null;\n\t\t\t}\n\t\t\t\n\t\t\t// 填充加载的位置数据\n\t\t\tresult.gridPositions.forEach((userData, index) => {\n\t\t\t\tif (userData && index < 9) {\n\t\t\t\t\tgridPositions[index] = userData;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t// 设置加载标志为已加载\n\t\t\thasLoaded.value = true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\tconsole.log('没有找到保存的位置数据或加载失败');\n\t\t\treturn false;\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('加载位置数据失败:', error);\n\t\treturn false;\n\t} finally {\n\t\tisPositionsLoading.value = false;\n\t}\n};\n\n// 保存网格位置数据到云端\nconst saveGridPositionsToCloud = async () => {\n\t// 如果没有文章ID，则跳过\n\tif (!props.articleId) {\n\t\tconsole.warn('没有文章ID，无法保存位置数据');\n\t\treturn false;\n\t}\n\t\n\ttry {\n\t\t// 避免频繁保存\n\t\tif (isSavingPositions.value) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tisSavingPositions.value = true;\n\t\t\n\t\t// 准备位置数据\n\t\tconst positionsToSave = [...gridPositions];\n\t\t\n\t\t// 调用云函数保存位置数据\n\t\tconst choujiangWx = uniCloud.importObject('choujiangWx');\n\t\tconst result = await choujiangWx.saveGridPositions({\n\t\t\tarticleId: props.articleId,\n\t\t\tpositions: positionsToSave\n\t\t});\n\t\t\n\t\tif (result.success) {\n\t\t\tconsole.log('位置数据保存成功');\n\t\t\treturn true;\n\t\t} else {\n\t\t\tconsole.warn('位置数据保存失败:', result.message);\n\t\t\treturn false;\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('保存位置数据失败:', error);\n\t\treturn false;\n\t} finally {\n\t\tisSavingPositions.value = false;\n\t}\n};\n\n// 更新用户展示数据\nconst updateParticipantsList = async () => {\n\ttry {\n\t\t// 清空现有列表\n\t\tparticipantsList.length = 0;\n\t\t\n\t\t// 首先，收集所有评论者\n\t\tconst availableCommenters = [...props.commenters].slice(0, 9);\n\t\t\n\t\t// 更新参与者列表\n\t\tavailableCommenters.forEach(commenter => {\n\t\t\tparticipantsList.push(commenter);\n\t\t});\n\t\t\n\t\t// 尝试从云端加载位置数据\n\t\tconst cloudPositionsLoaded = await loadGridPositionsFromCloud();\n\t\t\n\t\t// 如果没有从云端加载成功，则进行本地更新\n\t\tif (!cloudPositionsLoaded) {\n\t\t\t// 记录已占用的位置\n\t\t\tconst occupiedPositions = new Set();\n\t\t\tconst existingPositions = new Map();\n\t\t\t\n\t\t\t// 检查当前gridPositions中已有的用户，保留他们的位置\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (gridPositions[i] && gridPositions[i]._id) {\n\t\t\t\t\t// 记录该位置已被占用\n\t\t\t\t\toccupiedPositions.add(i);\n\t\t\t\t\t// 记录该用户已有位置\n\t\t\t\t\texistingPositions.set(gridPositions[i]._id, i);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// 对于参与列表中的每个用户，检查他们是否已经有位置\n\t\t\tparticipantsList.forEach(user => {\n\t\t\t\tif (user._id && existingPositions.has(user._id)) {\n\t\t\t\t\t// 如果用户已经有固定位置，保持不变\n\t\t\t\t\tconst position = existingPositions.get(user._id);\n\t\t\t\t\tgridPositions[position] = user;\n\t\t\t\t\t// 标记该位置已占用\n\t\t\t\t\toccupiedPositions.add(position);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t// 为未分配位置的用户寻找空位置\n\t\t\tlet nextFreePosition = 0;\n\t\t\tparticipantsList.forEach(user => {\n\t\t\t\t// 如果用户没有被分配位置\n\t\t\t\tif (user._id && !existingPositions.has(user._id)) {\n\t\t\t\t\t// 寻找下一个空闲位置\n\t\t\t\t\twhile (nextFreePosition < 9 && occupiedPositions.has(nextFreePosition)) {\n\t\t\t\t\t\tnextFreePosition++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 如果找到空闲位置，分配给用户\n\t\t\t\t\tif (nextFreePosition < 9) {\n\t\t\t\t\t\tgridPositions[nextFreePosition] = user;\n\t\t\t\t\t\toccupiedPositions.add(nextFreePosition);\n\t\t\t\t\t\tnextFreePosition++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t// 位置变化后，保存到云端\n\t\t\tsaveGridPositionsToCloud();\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('更新用户展示失败:', error);\n\t\tuni.showToast({\n\t\t\ttitle: '初始化失败，请重试',\n\t\t\ticon: 'none'\n\t\t});\n\t}\n};\n\n// 替换原有的初始化函数\nconst initParticipantsList = updateParticipantsList;\n\n// 修改评论点击处理函数\nconst handleCommentClick = (index) => {\n\tconsole.log('触发点击参与事件，位置索引:', index);\n\t\n\t// 如果正在抽奖中，不触发评论\n\tif (isRotating.value) {\n\t\tconsole.log('当前正在抽奖中，不能参与');\n\t\tuni.showToast({\n\t\t\ttitle: '抽奖进行中，请稍后',\n\t\t\ticon: 'none'\n\t\t});\n\t\treturn;\n\t}\n\t\n\t// 如果已经显示结果，不触发评论\n\tif (showResult.value) {\n\t\tconsole.log('已显示抽奖结果，不能再参与');\n\t\tuni.showToast({\n\t\t\ttitle: '抽奖已完成',\n\t\t\ticon: 'none'\n\t\t});\n\t\treturn;\n\t}\n\t\n\t// 检查该位置是否已有用户数据\n\tif (gridPositions[index] && gridPositions[index]._id) {\n\t\tconsole.log('该位置已有用户数据，无法修改');\n\t\tuni.showToast({\n\t\t\ttitle: '该位置已被占用',\n\t\t\ticon: 'none'\n\t\t});\n\t\treturn;\n\t}\n\t\n\t// 记录当前点击的位置\n\tcurrentClickPosition = index;\n\t\n\t// 触发父组件的评论事件\n\tconsole.log('发送评论事件到父组件，位置:', index);\n\temit('show-comment', { position: index });\n};\n\n// 添加更新特定位置的方法\nconst updatePosition = async (position, userData) => {\n\tif (position >= 0 && position < 9) {\n\t\t// 先保存当前gridPositions的状态\n\t\tconst currentGridState = [...gridPositions];\n\t\t\n\t\t// 更新指定位置\n\t\tgridPositions[position] = userData;\n\t\t\n\t\t// 手动更新participantsList数组\n\t\tconst existingUserIndex = participantsList.findIndex(user => \n\t\t\tuser._id === userData._id || \n\t\t\t(user.user_id === userData.user_id && user.user_id)\n\t\t);\n\t\t\n\t\tif (existingUserIndex === -1) {\n\t\t\t// 如果不存在，添加到参与者列表\n\t\t\tparticipantsList.push(userData);\n\t\t} else {\n\t\t\t// 如果已存在，更新数据\n\t\t\tparticipantsList[existingUserIndex] = userData;\n\t\t}\n\t\t\n\t\t// 为了保持响应性，重新赋值\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tif (gridPositions[i] !== currentGridState[i]) {\n\t\t\t\t// 如果该位置有变化，触发更新\n\t\t\t\tgridPositions[i] = gridPositions[i]; \n\t\t\t}\n\t\t}\n\t\t\n\t\t// 保存变更到云端\n\t\tawait saveGridPositionsToCloud();\n\t\t\n\t\t// 触发emit事件通知父组件已更新评论区位置\n\t\temit('position-updated', {\n\t\t\tposition: position,\n\t\t\tuserData: userData\n\t\t});\n\t}\n};\n\n// 将当前方法暴露给父组件\ndefineExpose({\n\tupdatePosition,\n\tgetPositionById,\n\tclearPosition\n});\n\n// 获取评论ID对应的位置索引\nfunction getPositionById(commentId) {\n\tif (!commentId) return -1;\n\t\n\t// 遍历gridPositions查找包含该ID的位置\n\tfor (let i = 0; i < 9; i++) {\n\t\tif (gridPositions[i] && gridPositions[i]._id === commentId) {\n\t\t\treturn i;\n\t\t}\n\t}\n\t\n\t// 未找到返回-1\n\treturn -1;\n}\n\n// 清除指定位置的数据\nasync function clearPosition(position) {\n\tif (position >= 0 && position < 9) {\n\t\t// 先保存当前gridPositions的状态\n\t\tconst currentGridState = [...gridPositions];\n\t\t\n\t\t// 清空指定位置\n\t\tgridPositions[position] = {};\n\t\t\n\t\t// 为了保持响应性，重新赋值\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tif (gridPositions[i] !== currentGridState[i]) {\n\t\t\t\t// 如果该位置有变化，触发更新\n\t\t\t\tgridPositions[i] = gridPositions[i]; \n\t\t\t}\n\t\t}\n\t\t\n\t\t// 更新参与者列表，移除不在九宫格中的用户\n\t\trefreshParticipantsList();\n\t\t\n\t\t// 保存变更到云端\n\t\tawait saveGridPositionsToCloud();\n\t\t\n\t\treturn true;\n\t}\n\t\n\treturn false;\n}\n\n// 刷新参与者列表\nfunction refreshParticipantsList() {\n\t// 清空参与者列表\n\tparticipantsList.length = 0;\n\t\n\t// 重新从九宫格中收集有效的参与者\n\tfor (let i = 0; i < 9; i++) {\n\t\tif (gridPositions[i] && gridPositions[i]._id) {\n\t\t\t// 检查用户是否已在列表中\n\t\t\tconst existingUserIndex = participantsList.findIndex(user => \n\t\t\t\tuser._id === gridPositions[i]._id\n\t\t\t);\n\t\t\t\n\t\t\tif (existingUserIndex === -1) {\n\t\t\t\t// 如果不存在，添加到参与者列表\n\t\t\t\tparticipantsList.push(gridPositions[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// 开始抽奖\nconst startLottery = async () => {\n\t// 检查是否正在抽奖中\n\tif (isRotating.value) {\n\t\treturn stopLottery(); // 如果正在抽奖，则停止抽奖\n\t}\n\t\n\t// 检查是否有评论者参与\n\tif (props.commenters.length === 0) {\n\t\tuni.showToast({\n\t\t\ttitle: '暂无评论者参与',\n\t\t\ticon: 'none'\n\t\t});\n\t\treturn;\n\t}\n\t\n\t// 设置抽奖状态\n\tisRotating.value = true;\n\tcurrentIndex.value = -1;\n\twinnerIndex.value = -1;\n\twinner.value = null;\n\tshowResult.value = false;\n\t\n\ttry {\n\t\t// 获取系统信息\n\t\tlet platformInfo = {};\n\t\tlet sceneValue = '';\n\t\t\n\t\ttry {\n\t\t\tif (uni.getAppBaseInfo) {\n\t\t\t\tconst appInfo = uni.getAppBaseInfo();\n\t\t\t\tplatformInfo = {\n\t\t\t\t\tplatform: appInfo.platform,\n\t\t\t\t\tosName: appInfo.osName,\n\t\t\t\t\tappVersion: appInfo.appVersion\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst sysInfo = uni.getSystemInfoSync();\n\t\t\t\tplatformInfo = {\n\t\t\t\t\tplatform: sysInfo.platform,\n\t\t\t\t\tosName: sysInfo.osName || sysInfo.system\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\tconst launchOptions = uni.getLaunchOptionsSync ? uni.getLaunchOptionsSync() : {};\n\t\t\tsceneValue = launchOptions.scene || '';\n\t\t} catch (e) {\n\t\t\tconsole.error('获取系统信息失败', e);\n\t\t}\n\t\t\n\t\t// 添加标记，表明这是抽奖操作，不需要更新浏览量\n\t\tconst userInfo = {\n\t\t\tplatformInfo,\n\t\t\tscene: sceneValue,\n\t\t\ttime: Date.now(),\n\t\t\tisLotteryAction: true, // 添加标记，表明这是抽奖操作\n\t\t\tequalProbability: true // 标记使用相同概率\n\t\t};\n\t\t\n\t\t// 调用云函数执行抽奖\n\t\tconst choujiangWx = uniCloud.importObject('choujiangWx');\n\t\tconst lotteryResult = await choujiangWx.doLottery({\n\t\t\tcommenters: participantsList,\n\t\t\tuserId: uni.getStorageSync('userId') || '',\n\t\t\tuserInfo,\n\t\t\tarticleId: props.articleId // 传递文章ID，用于保存抽奖结果\n\t\t});\n\t\t\n\t\tif (!lotteryResult.success) {\n\t\t\tthrow new Error(lotteryResult.message || '抽奖失败');\n\t\t}\n\t\t\n\t\t// 获取抽奖结果，但暂不显示最终结果\n\t\t// 保存中奖者信息，但在手动停止前不显示\n\t\twinner.value = lotteryResult.winner;\n\t\t// 计算在9宫格中的索引位置\n\t\twinnerIndex.value = lotteryResult.winnerIndex < 9 ? lotteryResult.winnerIndex : lotteryResult.winnerIndex % 9;\n\t\tprobabilityInfo.value = lotteryResult.probabilityInfo || [];\n\t\t\n\t\t// 开始动画循环\n\t\tstartRotation();\n\t\t\n\t} catch (error) {\n\t\tconsole.error('抽奖执行失败:', error);\n\t\tuni.showToast({\n\t\t\ttitle: '抽奖失败，请重试',\n\t\t\ticon: 'none'\n\t\t});\n\t\tisRotating.value = false;\n\t}\n};\n\n// 停止抽奖并显示结果\nconst stopLottery = () => {\n\tif (!isRotating.value) return;\n\t\n\t// 停止动画\n\tif (timer) {\n\t\tclearTimeout(timer);\n\t\ttimer = null;\n\t}\n\t\n\t// 立即停止旋转并直接设置到中奖位置\n\tisRotating.value = false;\n\t\n\t// 立即将当前位置设置为中奖位置，不要任何延迟\n\tcurrentIndex.value = winnerIndex.value;\n\t\n\t// 设置当前时间\n\tconst now = new Date();\n\tconst year = now.getFullYear();\n\tconst month = (now.getMonth() + 1).toString().padStart(2, '0');\n\tconst day = now.getDate().toString().padStart(2, '0');\n\tconst hours = now.getHours().toString().padStart(2, '0');\n\tconst minutes = now.getMinutes().toString().padStart(2, '0');\n\tcurrentTime.value = `${year}年${month}月${day}日 ${hours}:${minutes}`;\n\t\n\t// 立即显示抽奖结果，不使用延迟\n\tshowResult.value = true;\n\tif (winner.value) {\n\t\thandleLotteryResult(winner.value);\n\t}\n};\n\n// 获取按钮文本\nconst getBtnText = () => {\n\tif (!isRotating.value) {\n\t\treturn '开始抽奖';\n\t} else {\n\t\treturn '停止抽奖';\n\t}\n};\n\n// 处理抽奖按钮点击\nconst handleLotteryBtn = () => {\n\tstartLottery();\n};\n\n// 开始旋转动画\nconst startRotation = () => {\n\tif (timer) clearTimeout(timer);\n\t\n\t// 使用平均120毫秒的轮播速度\n\tlet rotationSpeed = 120; // 基准速度\n\tlet currentPosition = currentIndex.value;\n\tlet rotationDuration = 0; // 记录旋转持续时间\n\tconst startTime = Date.now();\n\t\n\t// 轮播速度小幅度浮动范围\n\tconst minSpeed = 100; // 最快速度\n\tconst maxSpeed = 140; // 最慢速度\n\t\n\t// 旋转动画函数 - 优化动态速度调整\n\tconst runAnimation = () => {\n\t\tif (!isRotating.value) return;\n\t\t\n\t\t// 清除之前的定时器\n\t\tif (timer) clearTimeout(timer);\n\t\t\n\t\t// 计算已旋转时间\n\t\trotationDuration = Date.now() - startTime;\n\t\t\n\t\t// 计算当前应用的轮播速度 - 围绕平均值120毫秒小幅度波动\n\t\t// 使用余弦函数产生平滑的速度变化\n\t\tconst phase = rotationDuration / 2000; // 约2秒一个变化周期\n\t\tconst speedVariation = (Math.cos(phase) + 1) / 2; // 值域为0-1\n\t\trotationSpeed = minSpeed + speedVariation * (maxSpeed - minSpeed);\n\t\t\n\t\t// 递增位置，如果到末尾则重置\n\t\tcurrentPosition = (currentPosition + 1) % 9;\n\t\tcurrentIndex.value = currentPosition;\n\t\t\n\t\t// 继续滚动\n\t\ttimer = setTimeout(runAnimation, Math.floor(rotationSpeed));\n\t};\n\t\n\t// 开始动画\n\trunAnimation();\n};\n\n// 关闭结果弹窗\nconst closeResult = () => {\n\tshowResult.value = false;\n\t// 重置抽奖状态，准备重新抽奖\n\tisRotating.value = false;\n\tcurrentIndex.value = -1;\n};\n\n// 格式化时间\nconst formatTime = (timestamp) => {\n\tif (!timestamp) return '';\n\t\n\tconst now = Date.now();\n\tconst diff = now - timestamp;\n\t\n\t// 小于1分钟\n\tif (diff < 60000) {\n\t\treturn '刚刚';\n\t}\n\t// 小于1小时\n\tif (diff < 3600000) {\n\t\treturn Math.floor(diff / 60000) + '分钟前';\n\t}\n\t// 小于24小时\n\tif (diff < 86400000) {\n\t\treturn Math.floor(diff / 3600000) + '小时前';\n\t}\n\t// 小于30天\n\tif (diff < 2592000000) {\n\t\treturn Math.floor(diff / 86400000) + '天前';\n\t}\n\t// 其他情况显示具体日期\n\tconst date = new Date(timestamp);\n\tconst month = date.getMonth() + 1;\n\tconst day = date.getDate();\n\treturn `${month}月${day}日`;\n};\n\n// 对于父组件中的事件处理函数\nconst handleLotteryResult = async (result) => {\n\t// 修复 result.includes is not a function 错误\n\t// 不再使用 result.includes 进行判断\n\tif (result && typeof result === 'object') {\n\t\t// 当 result 是对象时的处理方式\n\t\tif (result.nickName) {\n\t\t\ttry {\n\t\t\t\t// 添加标记，表明这是抽奖结果事件，不需要更新浏览量\n\t\t\t\tconst resultWithMark = {\n\t\t\t\t\t...result,\n\t\t\t\t\tisLotteryResult: true\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// 将中奖用户信息保存到数据库\n\t\t\t\t// 准备保存的数据\n\t\t\t\tconst lotteryData = {\n\t\t\t\t\tarticle_id: props.articleId,\n\t\t\t\t\twinner_id: result._id || result.user_id || '',\n\t\t\t\t\twinner_name: result.nickName || '匿名用户',\n\t\t\t\t\twinner_avatar: result.avatarUrl || '',\n\t\t\t\t\twinner_mobile: result.mobile || '',\n\t\t\t\t\twinner_content: result.content || '',\n\t\t\t\t\twinner_index: winnerIndex.value,\n\t\t\t\t\tdraw_time: Date.now(),\n\t\t\t\t\tparticipant_count: participantsList.length || 0\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// 调用云函数保存抽奖结果\n\t\t\t\tconst choujiangWx = uniCloud.importObject('choujiangWx');\n\t\t\t\tconst saveResult = await choujiangWx.saveLotteryResult(lotteryData);\n\t\t\t\t\n\t\t\t\tif (saveResult && saveResult.success) {\n\t\t\t\t\tconsole.log('抽奖结果保存成功:', saveResult);\n\t\t\t\t\t\n\t\t\t\t\t// 确保结果显示正常\n\t\t\t\t\tshowResult.value = true;\n\t\t\t\t\tisRotating.value = false;\n\t\t\t\t\t\n\t\t\t\t\t// 如果有中奖者信息\n\t\t\t\t\temit('lottery-result', resultWithMark);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('抽奖结果保存失败:', saveResult?.message || '未知错误');\n\t\t\t\t\tthrow new Error(saveResult?.message || '抽奖结果保存失败');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('保存抽奖结果出错:', error);\n\t\t\t\t// 即使保存失败，仍然显示结果，但给出提示\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '抽奖完成，但结果保存失败',\n\t\t\t\t\ticon: 'none',\n\t\t\t\t\tduration: 2000\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 确保界面状态正确\n\t\t\t\tshowResult.value = true;\n\t\t\t\tisRotating.value = false;\n\t\t\t\t\n\t\t\t\t// 尝试通知父组件\n\t\t\t\temit('lottery-result', result);\n\t\t\t}\n\t\t} else {\n\t\t\t// 没有昵称的情况\n\t\t\tconsole.error('抽奖结果缺少用户信息:', result);\n\t\t\tisRotating.value = false;\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '抽奖结果异常',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t}\n\t} else {\n\t\t// 非对象类型的结果处理\n\t\tconsole.error('抽奖结果无效:', result);\n\t\tisRotating.value = false;\n\t\tuni.showToast({\n\t\t\ttitle: '抽奖结果无效',\n\t\t\ticon: 'none'\n\t\t});\n\t}\n};\n\n// 格式化概率显示\nconst formatProbability = (probability) => {\n\tif (!probability) return '';\n\t\n\t// 如果是带百分号的字符串，先转换为数值\n\tlet value = probability;\n\tif (typeof probability === 'string') {\n\t\tvalue = parseFloat(probability);\n\t\tif (isNaN(value)) return probability;\n\t}\n\t\n\t// 显示为百分比，保留两位小数\n\tif (value < 1) {\n\t\treturn (value * 100).toFixed(2) + '%';\n\t} else {\n\t\treturn value.toFixed(2) + '%';\n\t}\n};\n\n// 计算概率条的宽度\nconst calculateWidth = (probability) => {\n\tlet value = probability;\n\tif (typeof probability === 'string') {\n\t\t// 如果是字符串，先提取数值\n\t\tconst match = probability.match(/(\\d+(\\.\\d+)?)/);\n\t\tif (match) {\n\t\t\tvalue = parseFloat(match[1]);\n\t\t} else {\n\t\t\treturn 15; // 默认最小宽度\n\t\t}\n\t}\n\t\n\t// 确保宽度在合理范围内\n\t// 最小15%，最大95%\n\treturn Math.min(Math.max(value * 3, 15), 95);\n};\n\n// 初始化\nonMounted(async () => {\n\t// 检查gridPositions是否需要初始化\n\tlet hasContent = false;\n\tfor (let i = 0; i < 9; i++) {\n\t\tif (gridPositions[i] !== null) {\n\t\t\thasContent = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t// 如果完全为空，初始化为null\n\tif (!hasContent) {\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tgridPositions[i] = null;\n\t\t}\n\t}\n\t\n\t// 尝试从云端加载位置数据\n\tconst loaded = await loadGridPositionsFromCloud();\n\t\n\t// 如果从云端加载失败，则使用本地更新\n\tif (!loaded) {\n\t\t// 更新参与列表\n\t\tinitParticipantsList();\n\t}\n\t\n\treturn () => {\n\t\tif (timer) {\n\t\t\tclearTimeout(timer);\n\t\t\ttimer = null;\n\t\t}\n\t};\n});\n</script>\n\n<style lang=\"scss\">\n.lottery-container {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding: 30rpx 20rpx 40rpx;\n\tbackground-color: #FF5500;\n\tposition: relative;\n\tborder-radius: 20rpx;\n\tmin-height: auto;\n\theight: auto;\n\toverflow: hidden;\n\ttransition: height 0.3s ease;\n\tbox-sizing: border-box;\n\twidth: 100%;\n}\n\n.lottery-header {\n\twidth: 100%;\n\ttext-align: center;\n\tmargin-bottom: 20rpx;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n}\n\n.lottery-title {\n\tfont-size: 48rpx;\n\tfont-weight: bold;\n\tcolor: #FFFFFF;\n\ttext-shadow: 0 2rpx 6rpx rgba(0, 0, 0, 0.2);\n\tmargin-bottom: 15rpx;\n\tline-height: 1.2;\n}\n\n.lottery-subtitle {\n\tbackground-color: #FFFFFF;\n\tborder-radius: 30rpx;\n\tpadding: 8rpx 25rpx;\n\tdisplay: inline-block;\n\tmargin-bottom: 15rpx;\n\tbox-shadow: 0 4rpx 8rpx rgba(0, 0, 0, 0.1);\n\tposition: relative;\n\toverflow: hidden;\n\t\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: -20rpx;\n\t\twidth: 40rpx;\n\t\theight: 100%;\n\t\tbackground: linear-gradient(90deg, rgba(255,255,255,0), rgba(255,213,0,0.3), rgba(255,255,255,0));\n\t\tanimation: shine 2s infinite;\n\t}\n}\n\n@keyframes shine {\n\t0% {\n\t\tleft: -60rpx;\n\t}\n\t100% {\n\t\tleft: 100%;\n\t}\n}\n\n.participants-count {\n\tfont-size: 24rpx;\n\tcolor: #FF5500;\n\tfont-weight: bold;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n}\n\n.count-number {\n\tfont-size: 32rpx;\n\tcolor: #FF3300;\n\tfont-weight: bold;\n\tmargin: 0 4rpx;\n}\n\n.remaining-slots {\n\tfont-size: 22rpx;\n\tcolor: #FF7700;\n\tfont-weight: normal;\n}\n\n// 用户展示网格\n.user-grid {\n\twidth: 100%;\n\tbackground-color: #FFFFFF;\n\tborder-radius: 20rpx;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr); // 3x3网格\n\tgrid-template-rows: repeat(3, 1fr);\n\tgap: 4rpx; // 增加间隙使分隔线更明显\n\tposition: relative;\n\tbox-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\n\tbox-sizing: border-box;\n\taspect-ratio: 1 / 1; // 保持正方形比例\n\tmargin: 0 auto;\n\toverflow: hidden;\n\tbackground-color: #EEEEEE; // 设置网格背景色为灰色，让分隔线更明显\n}\n\n.user-cell {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 10rpx;\n\ttransition: all 0.3s ease;\n\tbackground-color: #FFFFFF; // 改为白色背景，与灰色网格形成对比\n\toverflow: hidden;\n\taspect-ratio: 1 / 1;\n\tbox-shadow: 0 0 2rpx rgba(0, 0, 0, 0.1); // 添加轻微阴影增强立体感\n\t\n\t&.active {\n\t\ttransform: scale(0.98);\n\t\tbackground-color: #FFD700;\n\t\tbox-shadow: inset 0 0 10rpx rgba(255, 215, 0, 0.6);\n\t\tz-index: 5;\n\t}\n\t\n\t&.winner {\n\t\tbackground-color: #FFD700;\n\t\t\n\t\t.user-name {\n\t\t\tcolor: #FF5500;\n\t\t\tfont-weight: bold;\n\t\t}\n\t}\n}\n\n.user-content {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 100%;\n\theight: 100%;\n\tjustify-content: center;\n}\n\n.user-avatar {\n\twidth: 90rpx;\n\theight: 90rpx;\n\tborder-radius: 5%;\n\tmargin-bottom: 10rpx;\n\tbackground-color: #f5f5f5;\n\tborder: 2rpx solid #E0E0E0;\n}\n\n.empty-avatar {\n\twidth: 100%;\n\theight: 100%;\n\tborder-radius: 0;\n\tmargin: 0;\n\tbackground-color: #FAFAFA;\n\tborder: none;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tcursor: pointer;\n\tposition: relative;\n\toverflow: hidden;\n\ttransition: all 0.3s;\n}\n\n.empty-avatar:active {\n\tbackground-color: #f0f0f0;\n}\n\n.empty-avatar text {\n\tfont-size: 28rpx;\n\tcolor: #3399FF;\n\ttext-align: center;\n\tline-height: 1.2;\n\tfont-weight: 500;\n\tpadding: 6rpx 12rpx;\n\tbackground-color: #f0f8ff;\n\tborder-radius: 4rpx;\n}\n\n.user-name {\n\tfont-size: 22rpx;\n\tcolor: #333333;\n\ttext-align: center;\n\twidth: 100%;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n}\n\n.user-probability {\n\tfont-size: 18rpx;\n\tcolor: #FF5500;\n\tmargin-top: 8rpx;\n\ttext-align: center;\n\tpadding: 2rpx 6rpx;\n\tborder-radius: 10rpx;\n\tdisplay: block;\n\twidth: 90%;\n}\n\n.user-nickname {\n\tfont-size: 18rpx;\n\tcolor: #999;\n\ttext-align: center;\n\tborder-radius: 10rpx;\n\tdisplay: block;\n\twidth: 90%;\n}\n\n.lottery-btn {\n\tmargin-top: 40rpx;\n\tmargin-bottom: 20rpx;\n\tbackground-color: #FFD700;\n\tcolor: #FF5500;\n\tpadding: 16rpx 80rpx;\n\tborder-radius: 40rpx;\n\tfont-size: 32rpx;\n\tfont-weight: bold;\n\tbox-shadow: 0 6rpx 15rpx rgba(255, 215, 0, 0.5);\n\ttransition: all 0.3s ease;\n\t\n\t&:active {\n\t\ttransform: scale(0.98);\n\t}\n\t\n\t&.rotating {\n\t\tanimation: pulse 1s infinite alternate;\n\t}\n}\n\n@keyframes pulse {\n\tfrom {\n\t\ttransform: scale(1);\n\t\topacity: 1;\n\t}\n\tto {\n\t\ttransform: scale(1.05);\n\t\topacity: 0.9;\n\t}\n}\n\n.btn-text {\n\ttext-align: center;\n\tdisplay: block;\n}\n\n.result-popup {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\tbackground-color: rgba(0, 0, 0, 0.7);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tz-index: 100;\n}\n\n.result-content {\n\twidth: 85%;\n\tmax-width: 580rpx;\n\tbackground-color: #FFFFFF;\n\tborder-radius: 20rpx;\n\tpadding: 40rpx 30rpx;\n\ttext-align: center;\n\tbox-shadow: 0 10rpx 30rpx rgba(0, 0, 0, 0.3);\n\tbox-sizing: border-box;\n}\n\n.result-header {\n\tfont-size: 40rpx;\n\tfont-weight: bold;\n\tmargin-bottom: 30rpx;\n\tcolor: #FF3300;\n\ttext-shadow: 0 1rpx 2rpx rgba(255, 51, 0, 0.2);\n}\n\n.lucky-users {\n\tmargin-bottom: 30rpx;\n\tpadding: 20rpx;\n\tbackground-color: #FFF4E8;\n\tborder-radius: 15rpx;\n\tborder: 2rpx dashed #FF5500;\n}\n\n.lucky-users-title {\n\tfont-size: 32rpx;\n\tcolor: #FF3300;\n\tmargin-bottom: 10rpx;\n\tfont-weight: bold;\n\ttext-align: center;\n}\n\n.prize-time {\n\tfont-size: 24rpx;\n\tcolor: #999;\n\tmargin: 10rpx 0 20rpx;\n\ttext-align: center;\n}\n\n.lucky-user-item {\n\tdisplay: flex;\n\talign-items: flex-start;\n\tpadding: 24rpx;\n\tmargin-bottom: 20rpx;\n\tbackground: linear-gradient(to right, #FFF9F0, #FFFFFF);\n\tborder-radius: 16rpx;\n\tbox-shadow: 0 6rpx 12rpx rgba(255, 85, 0, 0.08);\n\ttext-align: left;\n\toverflow: hidden;\n\tborder-left: 6rpx solid #FFD700;\n\ttransition: all 0.3s ease;\n\tposition: relative;\n\t\n\t&:hover, &:active {\n\t\ttransform: translateY(-2rpx);\n\t\tbox-shadow: 0 8rpx 16rpx rgba(255, 85, 0, 0.12);\n\t}\n\t\n\t&::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\twidth: 40rpx;\n\t\theight: 40rpx;\n\t\tbackground: linear-gradient(135deg, transparent 50%, #FFD700 50%);\n\t\tborder-radius: 0 0 0 16rpx;\n\t}\n\t\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: -150%;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n\t\ttransform: skewX(-25deg);\n\t\ttransition: all 0.75s;\n\t}\n\t\n\t&:hover::before {\n\t\tleft: 150%;\n\t}\n}\n\n.lucky-user-avatar {\n\twidth: 90rpx;\n\theight: 90rpx;\n\tmargin-right: 20rpx;\n\tbackground-color: #EEEEEE;\n\tflex-shrink: 0;\n\tborder: 3rpx solid #FFD700;\n\tborder-radius: 12rpx;\n\tbox-shadow: 0 4rpx 8rpx rgba(0, 0, 0, 0.1);\n\ttransition: transform 0.3s ease;\n\t\n\t&:hover {\n\t\ttransform: scale(1.05);\n\t}\n}\n\n.lucky-user-info {\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tjustify-content: center;\n}\n\n.name-time-container {\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: 8rpx;\n}\n\n.lucky-user-name {\n\tfont-size: 32rpx;\n\tcolor: #FF5500;\n\tfont-weight: bold;\n\ttext-shadow: 0 1rpx 2rpx rgba(255, 85, 0, 0.1);\n\tposition: relative;\n\tdisplay: inline-block;\n\toverflow: hidden;\n\tmax-width: 90%;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\t\n\t&::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\twidth: 0;\n\t\theight: 2rpx;\n\t\tbackground-color: #FF5500;\n\t\ttransition: width 0.3s ease;\n\t}\n\t\n\t.lucky-user-item:hover &::after {\n\t\twidth: 100%;\n\t}\n}\n\n.time {\n\tfont-size: 22rpx;\n\tcolor: #999;\n\tmargin-left: 10rpx;\n\tvertical-align: baseline;\n}\n\n.content-wrapper {\n\tline-height: 1.5;\n\tdisplay: block;\n\t\n\t.content {\n\t\tfont-size: 28rpx;\n\t\tcolor: #666666;\n\t}\n}\n\n.probability-info {\n\tmargin-top: 20rpx;\n\tpadding: 20rpx;\n\tbackground-color: #FFF9F0;\n\tborder-radius: 15rpx;\n\tborder: 2rpx dashed #FFAA33;\n\t\n\t.probability-title {\n\t\tfont-size: 28rpx;\n\t\tcolor: #FF6600;\n\t\tmargin-bottom: 10rpx;\n\t\tfont-weight: bold;\n\t\ttext-align: center;\n\t}\n\t\n\t.probability-note {\n\t\tfont-size: 24rpx;\n\t\tcolor: #FF6600;\n\t\ttext-align: center;\n\t\tmargin-bottom: 15rpx;\n\t\tfont-weight: bold;\n\t}\n}\n\n.result-btn {\n\tbackground-color: #FF3300;\n\tcolor: #FFFFFF;\n\tpadding: 15rpx 0;\n\tborder-radius: 40rpx;\n\tfont-size: 32rpx;\n\tborder: none;\n\twidth: 80%;\n\tmargin: 0 auto;\n\tmargin-top: 20rpx;\n}\n\n// 删除响应式部分因为我们已经固定了3x3布局\n@media screen and (max-width: 320px) {\n\t.user-avatar {\n\t\twidth: 70rpx;\n\t\theight: 70rpx;\n\t}\n\t\n\t.user-name {\n\t\tfont-size: 18rpx;\n\t}\n}\n\n// 新增：中奖用户显示在抽奖按钮下方的样式\n.lucky-users-section {\n\twidth: 100%;\n\tmargin-top: 30rpx;\n\tpadding: 24rpx;\n\tbackground-color: #FFFFFF;\n\tborder-radius: 16rpx;\n\tborder: 2rpx solid rgba(255, 85, 0, 0.3);\n\tbox-sizing: border-box;\n\tbox-shadow: 0 6rpx 15rpx rgba(0, 0, 0, 0.1);\n\tanimation: fadeIn 0.5s ease-in-out;\n}\n\n@keyframes fadeIn {\n\tfrom {\n\t\topacity: 0;\n\t\ttransform: translateY(20rpx);\n\t}\n\tto {\n\t\topacity: 1;\n\t\ttransform: translateY(0);\n\t}\n}\n\n.lucky-users-title {\n\tfont-size: 32rpx;\n\tcolor: #FF5500;\n\tmargin-bottom: 10rpx;\n\tfont-weight: bold;\n\ttext-align: center;\n\tposition: relative;\n\tpadding-bottom: 16rpx;\n\t\n\t&:after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\twidth: 60rpx;\n\t\theight: 4rpx;\n\t\tbackground-color: #FF5500;\n\t\tborder-radius: 2rpx;\n\t}\n}\n\n.prize-time {\n\tfont-size: 24rpx;\n\tcolor: #999;\n\tmargin: 10rpx 0 20rpx;\n\ttext-align: center;\n}\n\n.lucky-user-item {\n\tdisplay: flex;\n\talign-items: flex-start;\n\tpadding: 24rpx;\n\tmargin-bottom: 20rpx;\n\tbackground: linear-gradient(to right, #FFF9F0, #FFFFFF);\n\tborder-radius: 16rpx;\n\tbox-shadow: 0 6rpx 12rpx rgba(255, 85, 0, 0.08);\n\ttext-align: left;\n\toverflow: hidden;\n\tborder-left: 6rpx solid #FFD700;\n\ttransition: all 0.3s ease;\n\tposition: relative;\n\t\n\t&:hover, &:active {\n\t\ttransform: translateY(-2rpx);\n\t\tbox-shadow: 0 8rpx 16rpx rgba(255, 85, 0, 0.12);\n\t}\n\t\n\t&::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\twidth: 40rpx;\n\t\theight: 40rpx;\n\t\tbackground: linear-gradient(135deg, transparent 50%, #FFD700 50%);\n\t\tborder-radius: 0 0 0 16rpx;\n\t}\n}\n\n.lucky-user-avatar {\n\twidth: 90rpx;\n\theight: 90rpx;\n\tmargin-right: 20rpx;\n\tbackground-color: #EEEEEE;\n\tflex-shrink: 0;\n\tborder: 3rpx solid #FFD700;\n\tborder-radius: 12rpx;\n\tbox-shadow: 0 4rpx 8rpx rgba(0, 0, 0, 0.1);\n\ttransition: transform 0.3s ease;\n\t\n\t&:hover {\n\t\ttransform: scale(1.05);\n\t}\n}\n\n.probability-info {\n\tmargin-top: 24rpx;\n\tpadding: 16rpx;\n\tbackground-color: #FFF9F0;\n\tborder-radius: 12rpx;\n\tborder: 1rpx solid #FFEECC;\n}\n\n// 历史记录部分样式\n.lottery-history {\n\twidth: 100%;\n\tmargin-top: 30rpx;\n\tpadding: 24rpx;\n\tbackground-color: #FFFFFF;\n\tborder-radius: 16rpx;\n\tbox-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\n\tbox-sizing: border-box;\n}\n\n.history-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-bottom: 20rpx;\n\tpadding-bottom: 16rpx;\n\tborder-bottom: 1px solid #EEEEEE;\n}\n\n.history-title {\n\tfont-size: 32rpx;\n\tfont-weight: bold;\n\tcolor: #333333;\n}\n\n.history-toggle {\n\tfont-size: 26rpx;\n\tcolor: #666666;\n\tpadding: 4rpx 10rpx;\n\tborder-radius: 30rpx;\n\tbackground-color: #F5F5F5;\n}\n\n.history-content {\n\tmax-height: 600rpx;\n\toverflow-y: auto;\n}\n\n.history-item {\n\tmargin-bottom: 20rpx;\n\tpadding: 16rpx;\n\tbackground-color: #F9F9F9;\n\tborder-radius: 12rpx;\n\tborder-left: 4rpx solid #FFD700;\n}\n\n.history-item-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tmargin-bottom: 10rpx;\n}\n\n.history-time {\n\tfont-size: 24rpx;\n\tcolor: #999999;\n}\n\n.history-participants {\n\tfont-size: 24rpx;\n\tcolor: #FF6600;\n}\n\n.history-winner-info {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.history-winner-avatar {\n\twidth: 60rpx;\n\theight: 60rpx;\n\tborder-radius: 6rpx;\n\tmargin-right: 10rpx;\n}\n\n.history-winner-detail {\n\tflex: 1;\n}\n\n.history-winner-name {\n\tfont-size: 26rpx;\n\tcolor: #333333;\n\tfont-weight: 500;\n}\n\n.history-winner-comment {\n\tfont-size: 24rpx;\n\tcolor: #666666;\n\tmargin-top: 4rpx;\n\tdisplay: block;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tmax-width: 500rpx;\n}\n\n.history-empty, .history-loading {\n\ttext-align: center;\n\tpadding: 40rpx 0;\n\tcolor: #999999;\n\tfont-size: 28rpx;\n}\n\n.history-pagination {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin-top: 20rpx;\n\tpadding-top: 20rpx;\n\tborder-top: 1rpx solid #EEEEEE;\n}\n\n.pagination-prev, .pagination-next {\n\tpadding: 8rpx 16rpx;\n\tbackground-color: #FFD700;\n\tcolor: #FF5500;\n\tborder-radius: 6rpx;\n\tfont-size: 24rpx;\n\tmargin: 0 16rpx;\n\t\n\t&.disabled {\n\t\tbackground-color: #EEEEEE;\n\t\tcolor: #999999;\n\t}\n}\n\n.pagination-info {\n\tfont-size: 24rpx;\n\tcolor: #666666;\n}\n\n.toggle-history-container {\n\twidth: 100%;\n\tpadding: 20rpx 0;\n\tdisplay: flex;\n\tjustify-content: center;\n}\n\n.toggle-history-btn {\n\tbackground-color: #FFFFFF;\n\tcolor: #399BFE;\n\tborder: 1rpx solid #399BFE;\n\tfont-size: 28rpx;\n\tborder-radius: 30rpx;\n\tpadding: 10rpx 30rpx;\n\tmargin-top: 20rpx;\n}\n\n.history-footer {\n\tmargin-top: 20rpx;\n\ttext-align: center;\n}\n</style>\n","import Component from 'D:/代码测试/wx2/components/articleDetail-choujia/articleDetail-choujia.vue'\nwx.createComponent(Component)"],"names":["ref","reactive","computed","watch","uni","uniCloud","onMounted","Component"],"mappings":"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"}