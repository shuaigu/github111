{"version":3,"names":["uploadImage","uploadFile","_sfc_main","name","components","options","virtualHost","emits","props","modelValue","type","Array","Object","default","value","disabled","Boolean","disablePreview","delIcon","autoUpload","limit","Number","String","mode","fileMediatype","fileExtname","title","listStyles","border","dividline","borderStyle","imageStyles","width","height","readonly","returnType","sizeType","sourceType","provider","data","files","localValue","watch","handler","newVal","oldVal","setValue","immediate","computed","filesList","forEach","v","push","showType","limitLength","created","common_vendor","nr","config","noSpace","chooseAndUploadFile","uni_modules_uniFilePicker_components_uniFilePicker_chooseAndUploadFile","form","getForm","formItem","rename","inputChildrens","methods","clearFiles","index","_this","$nextTick","setEmit","splice","upload","status","assign","uploadFiles","_this2","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee2","newData","i","filesData","wrap","_callee2$","_context2","prev","next","_ref","_callee","reg","url","_callee$","_context","fileID","test","getTempFileURL","sent","path","abrupt","stop","_x","apply","arguments","length","is_reset","keys","concat","choose","showToast","icon","chooseFiles","_this3","_extname","uni_modules_uniFilePicker_components_uniFilePicker_utils","get_extname","compressed","extension","count","onChooseFile","chooseFileCallback","onUploadProgress","progressEvent","setProgress","then","result","setSuccessAndError","tempFiles","catch","err","__f__","res","_this4","_callee3","is_one","_uni_modules_uniFileP","filePaths","currentData","filedata","_callee3$","_context3","get_files_and_is_max","tempFilePaths","uuid","Date","now","get_file_data","progress","_objectSpread2","file","$emit","fileItem","fileNameSplit","split","ext","pop","fileName","join","replace","cloudPath","_this5","uploadCloudFiles","call","fn","_this6","_callee4","successData","errorData","tempFilePath","errorTempFilePath","_loop","_callee4$","_context5","item","_loop$","_context4","findIndex","p","errMsg","delegateYield","t0","backObject","percentCompleted","Math","round","loaded","total","idx","tempFile","parseInt","delFile","_this7","getFileExt","last_len","lastIndexOf","len","substring","_toConsumableArray2","newFilesData","extname","fileType","image","size","fileList","_callee5","urls","_callee5$","_context6","tempFileURL","undefined","parent","$parent","parentName","$options","wx","createComponent","Component"],"sources":["uni-file-picker.vue","D:/代码测试/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RTovd3gyL3VuaV9tb2R1bGVzL3VuaS1maWxlLXBpY2tlci9jb21wb25lbnRzL3VuaS1maWxlLXBpY2tlci91bmktZmlsZS1waWNrZXIudnVl"],"sourcesContent":["<template>\n\t<view class=\"uni-file-picker\">\n\t\t<view v-if=\"title\" class=\"uni-file-picker__header\">\n\t\t\t<text class=\"file-title\">{{ title }}</text>\n\t\t\t<text class=\"file-count\">{{ filesList.length }}/{{ limitLength }}</text>\n\t\t</view>\n\t\t<upload-image v-if=\"fileMediatype === 'image' && showType === 'grid'\" :readonly=\"readonly\"\n\t\t\t:image-styles=\"imageStyles\" :files-list=\"filesList\" :limit=\"limitLength\" :disablePreview=\"disablePreview\"\n\t\t\t:delIcon=\"delIcon\" @uploadFiles=\"uploadFiles\" @choose=\"choose\" @delFile=\"delFile\">\n\t\t\t<slot>\n\t\t\t\t<view class=\"is-add\">\n\t\t\t\t\t<view class=\"icon-add\"></view>\n\t\t\t\t\t<view class=\"icon-add rotate\"></view>\n\t\t\t\t</view>\n\t\t\t</slot>\n\t\t</upload-image>\n\t\t<upload-file v-if=\"fileMediatype !== 'image' || showType !== 'grid'\" :readonly=\"readonly\"\n\t\t\t:list-styles=\"listStyles\" :files-list=\"filesList\" :showType=\"showType\" :delIcon=\"delIcon\"\n\t\t\t@uploadFiles=\"uploadFiles\" @choose=\"choose\" @delFile=\"delFile\">\n\t\t\t<slot><button type=\"primary\" size=\"mini\">选择文件</button></slot>\n\t\t</upload-file>\n\t</view>\n</template>\n\n<script>\n\timport {\n\t\tchooseAndUploadFile,\n\t\tuploadCloudFiles\n\t} from './choose-and-upload-file.js'\n\timport {\n\t\tget_file_ext,\n\t\tget_extname,\n\t\tget_files_and_is_max,\n\t\tget_file_info,\n\t\tget_file_data\n\t} from './utils.js'\n\timport uploadImage from './upload-image.vue'\n\timport uploadFile from './upload-file.vue'\n\tlet fileInput = null\n\t/**\n\t * FilePicker 文件选择上传\n\t * @description 文件选择上传组件，可以选择图片、视频等任意文件并上传到当前绑定的服务空间\n\t * @tutorial https://ext.dcloud.net.cn/plugin?id=4079\n\t * @property {Object|Array}\tvalue\t组件数据，通常用来回显 ,类型由return-type属性决定\n\t * @property {Boolean}\tdisabled = [true|false]\t组件禁用\n\t * \t@value true \t禁用\n\t * \t@value false \t取消禁用\n\t * @property {Boolean}\treadonly = [true|false]\t组件只读，不可选择，不显示进度，不显示删除按钮\n\t * \t@value true \t只读\n\t * \t@value false \t取消只读\n\t * @property {String}\treturn-type = [array|object]\t限制 value 格式，当为 object 时 ，组件只能单选，且会覆盖\n\t * \t@value array\t规定 value 属性的类型为数组\n\t * \t@value object\t规定 value 属性的类型为对象\n\t * @property {Boolean}\tdisable-preview = [true|false]\t禁用图片预览，仅 mode:grid 时生效\n\t * \t@value true \t禁用图片预览\n\t * \t@value false \t取消禁用图片预览\n\t * @property {Boolean}\tdel-icon = [true|false]\t是否显示删除按钮\n\t * \t@value true \t显示删除按钮\n\t * \t@value false \t不显示删除按钮\n\t * @property {Boolean}\tauto-upload = [true|false]\t是否自动上传，值为true则只触发@select,可自行上传\n\t * \t@value true \t自动上传\n\t * \t@value false \t取消自动上传\n\t * @property {Number|String}\tlimit\t最大选择个数 ，h5 会自动忽略多选的部分\n\t * @property {String}\ttitle\t组件标题，右侧显示上传计数\n\t * @property {String}\tmode = [list|grid]\t选择文件后的文件列表样式\n\t * \t@value list \t列表显示\n\t * \t@value grid \t宫格显示\n\t * @property {String}\tfile-mediatype = [image|video|all]\t选择文件类型\n\t * \t@value image\t只选择图片\n\t * \t@value video\t只选择视频\n\t * \t@value all\t\t选择所有文件\n\t * @property {Array}\tfile-extname\t选择文件后缀，根据 file-mediatype 属性而不同\n\t * @property {Object}\tlist-style\tmode:list 时的样式\n\t * @property {Object}\timage-styles\t选择文件后缀，根据 file-mediatype 属性而不同\n\t * @event {Function} select \t选择文件后触发\n\t * @event {Function} progress 文件上传时触发\n\t * @event {Function} success \t上传成功触发\n\t * @event {Function} fail \t\t上传失败触发\n\t * @event {Function} delete \t文件从列表移除时触发\n\t */\n\texport default {\n\t\tname: 'uniFilePicker',\n\t\tcomponents: {\n\t\t\tuploadImage,\n\t\t\tuploadFile\n\t\t},\n\t\toptions: {\n\t\t\tvirtualHost: true\n\t\t},\n\t\temits: ['select', 'success', 'fail', 'progress', 'delete', 'update:modelValue', 'input'],\n\t\tprops: {\n\t\t\tmodelValue: {\n\t\t\t\ttype: [Array, Object],\n\t\t\t\tdefault () {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\t\t\t},\n\t\t\tvalue: {\n\t\t\t\ttype: [Array, Object],\n\t\t\t\tdefault () {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\tdisablePreview: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\tdelIcon: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true\n\t\t\t},\n\t\t\t// 自动上传\n\t\t\tautoUpload: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true\n\t\t\t},\n\t\t\t// 最大选择个数 ，h5只能限制单选或是多选\n\t\t\tlimit: {\n\t\t\t\ttype: [Number, String],\n\t\t\t\tdefault: 9\n\t\t\t},\n\t\t\t// 列表样式 grid | list | list-card\n\t\t\tmode: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'grid'\n\t\t\t},\n\t\t\t// 选择文件类型  image/video/all\n\t\t\tfileMediatype: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'image'\n\t\t\t},\n\t\t\t// 文件类型筛选\n\t\t\tfileExtname: {\n\t\t\t\ttype: [Array, String],\n\t\t\t\tdefault () {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: ''\n\t\t\t},\n\t\t\tlistStyles: {\n\t\t\t\ttype: Object,\n\t\t\t\tdefault () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t// 是否显示边框\n\t\t\t\t\t\tborder: true,\n\t\t\t\t\t\t// 是否显示分隔线\n\t\t\t\t\t\tdividline: true,\n\t\t\t\t\t\t// 线条样式\n\t\t\t\t\t\tborderStyle: {}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\timageStyles: {\n\t\t\t\ttype: Object,\n\t\t\t\tdefault () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: 'auto',\n\t\t\t\t\t\theight: 'auto'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\treadonly: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\treturnType: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: 'array'\n\t\t\t},\n\t\t\tsizeType: {\n\t\t\t\ttype: Array,\n\t\t\t\tdefault () {\n\t\t\t\t\treturn ['original', 'compressed']\n\t\t\t\t}\n\t\t\t},\n\t\t\tsourceType: {\n\t\t\t\ttype: Array,\n\t\t\t\tdefault () {\n\t\t\t\t\treturn  ['album', 'camera']\n\t\t\t\t}\n\t\t\t},\n\t\t\tprovider: {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: '' // 默认上传到 unicloud 内置存储 extStorage 扩展存储\n\t\t\t}\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tfiles: [],\n\t\t\t\tlocalValue: []\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\tvalue: {\n\t\t\t\thandler(newVal, oldVal) {\n\t\t\t\t\tthis.setValue(newVal, oldVal)\n\t\t\t\t},\n\t\t\t\timmediate: true\n\t\t\t},\n\t\t\tmodelValue: {\n\t\t\t\thandler(newVal, oldVal) {\n\t\t\t\t\tthis.setValue(newVal, oldVal)\n\t\t\t\t},\n\t\t\t\timmediate: true\n\t\t\t},\n\t\t},\n\t\tcomputed: {\n\t\t\tfilesList() {\n\t\t\t\tlet files = []\n\t\t\t\tthis.files.forEach(v => {\n\t\t\t\t\tfiles.push(v)\n\t\t\t\t})\n\t\t\t\treturn files\n\t\t\t},\n\t\t\tshowType() {\n\t\t\t\tif (this.fileMediatype === 'image') {\n\t\t\t\t\treturn this.mode\n\t\t\t\t}\n\t\t\t\treturn 'list'\n\t\t\t},\n\t\t\tlimitLength() {\n\t\t\t\tif (this.returnType === 'object') {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\tif (!this.limit) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\tif (this.limit >= 9) {\n\t\t\t\t\treturn 9\n\t\t\t\t}\n\t\t\t\treturn this.limit\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\t// TODO 兼容不开通服务空间的情况\n\t\t\tif (!(uniCloud.config && uniCloud.config.provider)) {\n\t\t\t\tthis.noSpace = true\n\t\t\t\tuniCloud.chooseAndUploadFile = chooseAndUploadFile\n\t\t\t}\n\t\t\tthis.form = this.getForm('uniForms')\n\t\t\tthis.formItem = this.getForm('uniFormsItem')\n\t\t\tif (this.form && this.formItem) {\n\t\t\t\tif (this.formItem.name) {\n\t\t\t\t\tthis.rename = this.formItem.name\n\t\t\t\t\tthis.form.inputChildrens.push(this)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\t/**\n\t\t\t * 公开用户使用，清空文件\n\t\t\t * @param {Object} index\n\t\t\t */\n\t\t\tclearFiles(index) {\n\t\t\t\tif (index !== 0 && !index) {\n\t\t\t\t\tthis.files = []\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tthis.setEmit()\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.files.splice(index, 1)\n\t\t\t\t}\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.setEmit()\n\t\t\t\t})\n\t\t\t},\n\t\t\t/**\n\t\t\t * 公开用户使用，继续上传\n\t\t\t */\n\t\t\tupload() {\n\t\t\t\tlet files = []\n\t\t\t\tthis.files.forEach((v, index) => {\n\t\t\t\t\tif (v.status === 'ready' || v.status === 'error') {\n\t\t\t\t\t\tfiles.push(Object.assign({}, v))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn this.uploadFiles(files)\n\t\t\t},\n\t\t\tasync setValue(newVal, oldVal) {\n\t\t\t\tconst newData =  async (v) => {\n\t\t\t\t\tconst reg = /cloud:\\/\\/([\\w.]+\\/?)\\S*/\n\t\t\t\t\tlet url = ''\n\t\t\t\t\tif(v.fileID){\n\t\t\t\t\t\turl = v.fileID\n\t\t\t\t\t}else{\n\t\t\t\t\t\turl = v.url\n\t\t\t\t\t}\n\t\t\t\t\tif (reg.test(url)) {\n\t\t\t\t\t\tv.fileID = url\n\t\t\t\t\t\tv.url = await this.getTempFileURL(url)\n\t\t\t\t\t}\n\t\t\t\t\tif(v.url) v.path = v.url\n\t\t\t\t\treturn v\n\t\t\t\t}\n\t\t\t\tif (this.returnType === 'object') {\n\t\t\t\t\tif (newVal) {\n\t\t\t\t\t\tawait newData(newVal)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewVal = {}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!newVal) newVal = []\n\t\t\t\t\tfor(let i =0 ;i < newVal.length ;i++){\n\t\t\t\t\t\tlet v = newVal[i]\n\t\t\t\t\t\tawait newData(v)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.localValue = newVal\n\t\t\t\tif (this.form && this.formItem &&!this.is_reset) {\n\t\t\t\t\tthis.is_reset = false\n\t\t\t\t\tthis.formItem.setValue(this.localValue)\n\t\t\t\t}\n\t\t\t\tlet filesData = Object.keys(newVal).length > 0 ? newVal : [];\n\t\t\t\tthis.files = [].concat(filesData)\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 选择文件\n\t\t\t */\n\t\t\tchoose() {\n\t\t\t\tif (this.disabled) return\n\t\t\t\tif (this.files.length >= Number(this.limitLength) && this.showType !== 'grid' && this.returnType ===\n\t\t\t\t\t'array') {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: `您最多选择 ${this.limitLength} 个文件`,\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis.chooseFiles()\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 选择文件并上传\n\t\t\t */\n\t\t\tchooseFiles() {\n\t\t\t\tconst _extname = get_extname(this.fileExtname)\n\t\t\t\t// 获取后缀\n\t\t\t\tuniCloud\n\t\t\t\t\t.chooseAndUploadFile({\n\t\t\t\t\t\ttype: this.fileMediatype,\n\t\t\t\t\t\tcompressed: false,\n\t\t\t\t\t\tsizeType: this.sizeType,\n\t\t\t\t\t\tsourceType: this.sourceType,\n\t\t\t\t\t\t// TODO 如果为空，video 有问题\n\t\t\t\t\t\textension: _extname.length > 0 ? _extname : undefined,\n\t\t\t\t\t\tcount: this.limitLength - this.files.length, //默认9\n\t\t\t\t\t\tonChooseFile: this.chooseFileCallback,\n\t\t\t\t\t\tonUploadProgress: progressEvent => {\n\t\t\t\t\t\t\tthis.setProgress(progressEvent, progressEvent.index)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(result => {\n\t\t\t\t\t\tthis.setSuccessAndError(result.tempFiles)\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tconsole.log('选择失败', err)\n\t\t\t\t\t})\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 选择文件回调\n\t\t\t * @param {Object} res\n\t\t\t */\n\t\t\tasync chooseFileCallback(res) {\n\t\t\t\tconst _extname = get_extname(this.fileExtname)\n\t\t\t\tconst is_one = (Number(this.limitLength) === 1 &&\n\t\t\t\t\t\tthis.disablePreview &&\n\t\t\t\t\t\t!this.disabled) ||\n\t\t\t\t\tthis.returnType === 'object'\n\t\t\t\t// 如果这有一个文件 ，需要清空本地缓存数据\n\t\t\t\tif (is_one) {\n\t\t\t\t\tthis.files = []\n\t\t\t\t}\n\n\t\t\t\tlet {\n\t\t\t\t\tfilePaths,\n\t\t\t\t\tfiles\n\t\t\t\t} = get_files_and_is_max(res, _extname)\n\t\t\t\tif (!(_extname && _extname.length > 0)) {\n\t\t\t\t\tfilePaths = res.tempFilePaths\n\t\t\t\t\tfiles = res.tempFiles\n\t\t\t\t}\n\n\t\t\t\tlet currentData = []\n\t\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\t\tif (this.limitLength - this.files.length <= 0) break\n\t\t\t\t\tfiles[i].uuid = Date.now()\n\t\t\t\t\tlet filedata = await get_file_data(files[i], this.fileMediatype)\n\t\t\t\t\tfiledata.progress = 0\n\t\t\t\t\tfiledata.status = 'ready'\n\t\t\t\t\tthis.files.push(filedata)\n\t\t\t\t\tcurrentData.push({\n\t\t\t\t\t\t...filedata,\n\t\t\t\t\t\tfile: files[i]\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tthis.$emit('select', {\n\t\t\t\t\ttempFiles: currentData,\n\t\t\t\t\ttempFilePaths: filePaths\n\t\t\t\t})\n\t\t\t\tres.tempFiles = files\n\t\t\t\t// 停止自动上传\n\t\t\t\tif (!this.autoUpload || this.noSpace) {\n\t\t\t\t\tres.tempFiles = []\n\t\t\t\t}\n\t\t\t\tres.tempFiles.forEach((fileItem, index) => {\n\t\t\t\t\tthis.provider && (fileItem.provider = this.provider);\n\t\t\t\t\tconst fileNameSplit = fileItem.name.split('.')\n\t\t\t\t\tconst ext = fileNameSplit.pop()\n\t\t\t\t\tconst fileName = fileNameSplit.join('.').replace(/[\\s\\/\\?<>\\\\:\\*\\|\":]/g, '_')\n\t\t\t\t\tfileItem.cloudPath = fileName + '_' + Date.now() + '_' + index + '.' + ext\n\t\t\t\t})\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 批传\n\t\t\t * @param {Object} e\n\t\t\t */\n\t\t\tuploadFiles(files) {\n\t\t\t\tfiles = [].concat(files)\n\t\t\t\treturn uploadCloudFiles.call(this, files, 5, res => {\n\t\t\t\t\t\tthis.setProgress(res, res.index, true)\n\t\t\t\t\t})\n\t\t\t\t\t.then(result => {\n\t\t\t\t\t\tthis.setSuccessAndError(result)\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tconsole.log(err)\n\t\t\t\t\t})\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 成功或失败\n\t\t\t */\n\t\t\tasync setSuccessAndError(res, fn) {\n\t\t\t\tlet successData = []\n\t\t\t\tlet errorData = []\n\t\t\t\tlet tempFilePath = []\n\t\t\t\tlet errorTempFilePath = []\n\t\t\t\tfor (let i = 0; i < res.length; i++) {\n\t\t\t\t\tconst item = res[i]\n\t\t\t\t\tconst index = item.uuid ? this.files.findIndex(p => p.uuid === item.uuid) : item.index\n\n\t\t\t\t\tif (index === -1 || !this.files) break\n\t\t\t\t\tif (item.errMsg === 'request:fail') {\n\t\t\t\t\t\tthis.files[index].url = item.path\n\t\t\t\t\t\tthis.files[index].status = 'error'\n\t\t\t\t\t\tthis.files[index].errMsg = item.errMsg\n\t\t\t\t\t\t// this.files[index].progress = -1\n\t\t\t\t\t\terrorData.push(this.files[index])\n\t\t\t\t\t\terrorTempFilePath.push(this.files[index].url)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.files[index].errMsg = ''\n\t\t\t\t\t\tthis.files[index].fileID = item.url\n\t\t\t\t\t\tconst reg = /cloud:\\/\\/([\\w.]+\\/?)\\S*/\n\t\t\t\t\t\tif (reg.test(item.url)) {\n\t\t\t\t\t\t\tthis.files[index].url = await this.getTempFileURL(item.url)\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis.files[index].url = item.url\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.files[index].status = 'success'\n\t\t\t\t\t\tthis.files[index].progress += 1\n\t\t\t\t\t\tsuccessData.push(this.files[index])\n\t\t\t\t\t\ttempFilePath.push(this.files[index].fileID)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (successData.length > 0) {\n\t\t\t\t\tthis.setEmit()\n\t\t\t\t\t// 状态改变返回\n\t\t\t\t\tthis.$emit('success', {\n\t\t\t\t\t\ttempFiles: this.backObject(successData),\n\t\t\t\t\t\ttempFilePaths: tempFilePath\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (errorData.length > 0) {\n\t\t\t\t\tthis.$emit('fail', {\n\t\t\t\t\t\ttempFiles: this.backObject(errorData),\n\t\t\t\t\t\ttempFilePaths: errorTempFilePath\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 获取进度\n\t\t\t * @param {Object} progressEvent\n\t\t\t * @param {Object} index\n\t\t\t * @param {Object} type\n\t\t\t */\n\t\t\tsetProgress(progressEvent, index, type) {\n\t\t\t\tconst fileLenth = this.files.length\n\t\t\t\tconst percentNum = (index / fileLenth) * 100\n\t\t\t\tconst percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n\t\t\t\tlet idx = index\n\t\t\t\tif (!type) {\n\t\t\t\t\tidx = this.files.findIndex(p => p.uuid === progressEvent.tempFile.uuid)\n\t\t\t\t}\n\t\t\t\tif (idx === -1 || !this.files[idx]) return\n\t\t\t\t// fix by mehaotian 100 就会消失，-1 是为了让进度条消失\n\t\t\t\tthis.files[idx].progress = percentCompleted - 1\n\t\t\t\t// 上传中\n\t\t\t\tthis.$emit('progress', {\n\t\t\t\t\tindex: idx,\n\t\t\t\t\tprogress: parseInt(percentCompleted),\n\t\t\t\t\ttempFile: this.files[idx]\n\t\t\t\t})\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 删除文件\n\t\t\t * @param {Object} index\n\t\t\t */\n\t\t\tdelFile(index) {\n\t\t\t\tthis.$emit('delete', {\n\t\t\t\t\tindex,\n\t\t\t\t\ttempFile: this.files[index],\n\t\t\t\t\ttempFilePath: this.files[index].url\n\t\t\t\t})\n\t\t\t\tthis.files.splice(index, 1)\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.setEmit()\n\t\t\t\t})\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 获取文件名和后缀\n\t\t\t * @param {Object} name\n\t\t\t */\n\t\t\tgetFileExt(name) {\n\t\t\t\tconst last_len = name.lastIndexOf('.')\n\t\t\t\tconst len = name.length\n\t\t\t\treturn {\n\t\t\t\t\tname: name.substring(0, last_len),\n\t\t\t\t\text: name.substring(last_len + 1, len)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 处理返回事件\n\t\t\t */\n\t\t\tsetEmit() {\n\t\t\t\tlet data = []\n\t\t\t\tif (this.returnType === 'object') {\n\t\t\t\t\tdata = this.backObject(this.files)[0]\n\t\t\t\t\tthis.localValue = data?data:null\n\t\t\t\t} else {\n\t\t\t\t\tdata = this.backObject(this.files)\n\t\t\t\t\tif (!this.localValue) {\n\t\t\t\t\t\tthis.localValue = []\n\t\t\t\t\t}\n\t\t\t\t\tthis.localValue = [...data]\n\t\t\t\t}\n\t\t\t\t// #ifdef VUE3\n\t\t\t\tthis.$emit('update:modelValue', this.localValue)\n\t\t\t\t// #endif\n\t\t\t\t// #ifndef VUE3\n\t\t\t\tthis.$emit('input', this.localValue)\n\t\t\t\t// #endif\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * 处理返回参数\n\t\t\t * @param {Object} files\n\t\t\t */\n\t\t\tbackObject(files) {\n\t\t\t\tlet newFilesData = []\n\t\t\t\tfiles.forEach(v => {\n\t\t\t\t\tnewFilesData.push({\n\t\t\t\t\t\textname: v.extname,\n\t\t\t\t\t\tfileType: v.fileType,\n\t\t\t\t\t\timage: v.image,\n\t\t\t\t\t\tname: v.name,\n\t\t\t\t\t\tpath: v.path,\n\t\t\t\t\t\tsize: v.size,\n\t\t\t\t\t\tfileID:v.fileID,\n\t\t\t\t\t\turl: v.url,\n\t\t\t\t\t\t// 修改删除一个文件后不能再上传的bug, #694\n            uuid: v.uuid,\n            status: v.status,\n            cloudPath: v.cloudPath\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\treturn newFilesData\n\t\t\t},\n\t\t\tasync getTempFileURL(fileList) {\n\t\t\t\tfileList = {\n\t\t\t\t\tfileList: [].concat(fileList)\n\t\t\t\t}\n\t\t\t\tconst urls = await uniCloud.getTempFileURL(fileList)\n\t\t\t\treturn urls.fileList[0].tempFileURL || ''\n\t\t\t},\n\t\t\t/**\n\t\t\t * 获取父元素实例\n\t\t\t */\n\t\t\tgetForm(name = 'uniForms') {\n\t\t\t\tlet parent = this.$parent;\n\t\t\t\tlet parentName = parent.$options.name;\n\t\t\t\twhile (parentName !== name) {\n\t\t\t\t\tparent = parent.$parent;\n\t\t\t\t\tif (!parent) return false;\n\t\t\t\t\tparentName = parent.$options.name;\n\t\t\t\t}\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style>\n\t.uni-file-picker {\n\t\t/* #ifndef APP-NVUE */\n\t\tbox-sizing: border-box;\n\t\toverflow: hidden;\n\t\twidth: 100%;\n\t\t/* #endif */\n\t\tflex: 1;\n\t}\n\n\t.uni-file-picker__header {\n\t\tpadding-top: 5px;\n\t\tpadding-bottom: 10px;\n\t\t/* #ifndef APP-NVUE */\n\t\tdisplay: flex;\n\t\t/* #endif */\n\t\tjustify-content: space-between;\n\t}\n\n\t.file-title {\n\t\tfont-size: 14px;\n\t\tcolor: #333;\n\t}\n\n\t.file-count {\n\t\tfont-size: 14px;\n\t\tcolor: #999;\n\t}\n\n\t.is-add {\n\t\t/* #ifndef APP-NVUE */\n\t\tdisplay: flex;\n\t\t/* #endif */\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t.icon-add {\n\t\twidth: 50px;\n\t\theight: 5px;\n\t\tbackground-color: #f1f1f1;\n\t\tborder-radius: 2px;\n\t}\n\n\t.rotate {\n\t\tposition: absolute;\n\t\ttransform: rotate(90deg);\n\t}\n</style>\n","import Component from 'E:/wx2/uni_modules/uni-file-picker/components/uni-file-picker/uni-file-picker.vue'\nwx.createComponent(Component)"],"mappings":"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","ignoreList":[]}