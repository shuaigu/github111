{"version":3,"names":["mixin","uni_modules_uviewPlus_libs_vue","defineMixin","props","customStyle","type","Object","String","default","customClass","url","linkType","data","onLoad","$u","getRect","$uGetRect","created","computed","uni_modules_uviewPlus_libs_function_index","deepMerge","common_vendor","index","http","bem","name","fixed","change","_this","prefix","concat","classes","map","item","keys","methods","openPage","urlKey","arguments","length","undefined","uni_modules_uviewPlus_libs_util_route","route","navTo","selector","all","_this2","Promise","resolve","createSelectorQuery","in","boundingClientRect","rect","Array","isArray","exec","getParentData","_this3","parentName","parent","$parent","call","children","indexOf","push","parentData","key","preventEvent","e","stopPropagation","noop","onReachBottom","$emit","beforeUnmount","_this4","uni_modules_uviewPlus_libs_function_test","test","array","childrenList","child","splice"],"sources":["mixin.js"],"sourcesContent":["import { defineMixin } from '../vue'\nimport { deepMerge, $parent, sleep } from '../function/index'\nimport test from '../function/test'\nimport route from '../util/route'\n// #ifdef APP-NVUE\n// 由于weex为阿里的KPI业绩考核的产物，所以不支持百分比单位，这里需要通过dom查询组件的宽度\nconst dom = uni.requireNativePlugin('dom')\n// #endif\n\nexport const mixin = defineMixin({\n    // 定义每个组件都可能需要用到的外部样式以及类名\n    props: {\n        // 每个组件都有的父组件传递的样式，可以为字符串或者对象形式\n        customStyle: {\n            type: [Object, String],\n            default: () => ({})\n        },\n        customClass: {\n            type: String,\n            default: ''\n        },\n        // 跳转的页面路径\n        url: {\n            type: String,\n            default: ''\n        },\n        // 页面跳转的类型\n        linkType: {\n            type: String,\n            default: 'navigateTo'\n        }\n    },\n    data() {\n        return {}\n    },\n    onLoad() {\n        // getRect挂载到$u上，因为这方法需要使用in(this)，所以无法把它独立成一个单独的文件导出\n        this.$u.getRect = this.$uGetRect\n    },\n    created() {\n        // 组件当中，只有created声明周期，为了能在组件使用，故也在created中将方法挂载到$u\n        this.$u.getRect = this.$uGetRect\n    },\n    computed: {\n        // 在2.x版本中，将会把$u挂载到uni对象下，导致在模板中无法使用uni.$u.xxx形式\n        // 所以这里通过computed计算属性将其附加到this.$u上，就可以在模板或者js中使用uni.$u.xxx\n        // 只在nvue环境通过此方式引入完整的$u，其他平台会出现性能问题，非nvue则按需引入（主要原因是props过大）\n        $u() {\n            // #ifndef APP-NVUE\n            // 在非nvue端，移除props，http，mixin等对象，避免在小程序setData时数据过大影响性能\n            return deepMerge(uni.$u, {\n                props: undefined,\n                http: undefined,\n                mixin: undefined\n            })\n            // #endif\n            // #ifdef APP-NVUE\n            return uni.$u\n            // #endif\n        },\n        /**\n         * 生成bem规则类名\n         * 由于微信小程序，H5，nvue之间绑定class的差异，无法通过:class=\"[bem()]\"的形式进行同用\n         * 故采用如下折中做法，最后返回的是数组（一般平台）或字符串（支付宝和字节跳动平台），类似['a', 'b', 'c']或'a b c'的形式\n         * @param {String} name 组件名称\n         * @param {Array} fixed 一直会存在的类名\n         * @param {Array} change 会根据变量值为true或者false而出现或者隐藏的类名\n         * @returns {Array|string}\n         */\n        bem() {\n            return function (name, fixed, change) {\n                // 类名前缀\n                const prefix = `u-${name}--`\n                const classes = {}\n                if (fixed) {\n                    fixed.map((item) => {\n                        // 这里的类名，会一直存在\n                        classes[prefix + this[item]] = true\n                    })\n                }\n                if (change) {\n                    change.map((item) => {\n                        // 这里的类名，会根据this[item]的值为true或者false，而进行添加或者移除某一个类\n                        this[item] ? (classes[prefix + item] = this[item]) : (delete classes[prefix + item])\n                    })\n                }\n                return Object.keys(classes)\n                    // 支付宝，头条小程序无法动态绑定一个数组类名，否则解析出来的结果会带有\",\"，而导致失效\n                    // #ifdef MP-ALIPAY || MP-TOUTIAO || MP-LARK\n                    .join(' ')\n                    // #endif\n            }\n        }\n    },\n    methods: {\n        // 跳转某一个页面\n        openPage(urlKey = 'url') {\n            const url = this[urlKey]\n            if (url) {\n                // h5官方回应：发行h5会自动摇树优化，所有使用uni的地方，都会被直接转换成具体的API调用 https://ask.dcloud.net.cn/question/161523?notification_id-1201922__rf-false__item_id-226372\n                // 使用封装的 route 进行跳转（直接调用方法），不使用 uni 对象\n                route({ type: this.linkType, url })\n                // 执行类似uni.navigateTo的方法\n                // uni[this.linkType]({\n                //     url\n                // })\n            }\n        },\n        navTo(url = '', linkType = 'navigateTo') {\n            route({ type: this.linkType, url })\n        },\n        // 查询节点信息\n        // 目前此方法在支付宝小程序中无法获取组件跟接点的尺寸，为支付宝的bug(2020-07-21)\n        // 解决办法为在组件根部再套一个没有任何作用的view元素\n        $uGetRect(selector, all) {\n            return new Promise((resolve) => {\n                // #ifndef APP-NVUE\n                uni.createSelectorQuery()\n                    .in(this)[all ? 'selectAll' : 'select'](selector)\n                    .boundingClientRect((rect) => {\n                        if (all && Array.isArray(rect) && rect.length) {\n                            resolve(rect)\n                        }\n                        if (!all && rect) {\n                            resolve(rect)\n                        }\n                    })\n                    .exec()\n                // #endif\n                \n                // #ifdef APP-NVUE\n                sleep(30).then(() => {\n                    let selectorNvue = selector.substring(1) // 去掉开头的#或者.\n                    let selectorRef = this.$refs[selectorNvue]\n                    if (!selectorRef) {\n                        // console.log('不存在元素，请检查是否设置了ref属性' + selectorNvue + '。')\n                        resolve({\n                            with: 0,\n                            height: 0,\n                            left: 0,\n                            right: 0,\n                            top: 0,\n                            bottom: 0\n                        }) \n                    }\n                    dom.getComponentRect(selectorRef, res => {\n                        // console.log(res)\n                        resolve(res.size)\n                    })\n                })\n                // #endif\n            })\n        },\n        getParentData(parentName = '') {\n            // 避免在created中去定义parent变量\n            if (!this.parent) this.parent = {}\n            // 这里的本质原理是，通过获取父组件实例(也即类似u-radio的父组件u-radio-group的this)\n            // 将父组件this中对应的参数，赋值给本组件(u-radio的this)的parentData对象中对应的属性\n            // 之所以需要这么做，是因为所有端中，头条小程序不支持通过this.parent.xxx去监听父组件参数的变化\n            // 此处并不会自动更新子组件的数据，而是依赖父组件u-radio-group去监听data的变化，手动调用更新子组件的方法去重新获取\n            this.parent = $parent.call(this, parentName)\n            if (this.parent.children) {\n                // 如果父组件的children不存在本组件的实例，才将本实例添加到父组件的children中\n                this.parent.children.indexOf(this) === -1 && this.parent.children.push(this)\n            }\n            if (this.parent && this.parentData) {\n                // 历遍parentData中的属性，将parent中的同名属性赋值给parentData\n                Object.keys(this.parentData).map((key) => {\n                    this.parentData[key] = this.parent[key]\n                })\n            }\n        },\n        // 阻止事件冒泡\n        preventEvent(e) {\n            e && typeof (e.stopPropagation) === 'function' && e.stopPropagation()\n        },\n        // 空操作\n        noop(e) {\n            this.preventEvent(e)\n        }\n    },\n    onReachBottom() {\n        uni.$emit('uOnReachBottom')\n\t},\n\tbeforeUnmount() {\n        // 判断当前页面是否存在parent和chldren，一般在checkbox和checkbox-group父子联动的场景会有此情况\n        // 组件销毁时，移除子组件在父组件children数组中的实例，释放资源，避免数据混乱\n        if (this.parent && test.array(this.parent.children)) {\n            // 组件销毁时，移除父组件中的children数组中对应的实例\n            const childrenList = this.parent.children\n            childrenList.map((child, index) => {\n                // 如果相等，则移除\n                if (child === this) {\n                    childrenList.splice(index, 1)\n                }\n            })\n        }\n    }\n})\n\nexport default mixin\n"],"mappings":"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","ignoreList":[]}