{"version":3,"names":["userStore","store_user","useUserInfoStore","qiniuCloud","common_vendor","nr","importObject","customUI","articleApi","ref","imageList","videoData","totalProgress","mediaType","content","locationInfo","categoryList","cateIndex","selectedCategory","isPublishing","publishedArticleId","mode","articleId","hasVideo","computed","value","getLocaAndCate","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","locationRes","res","wrap","_callee$","_context","prev","next","index","showLoading","title","getLocation","type","catch","err","__f__","longitude","latitude","sent","addReady","concat","address","district","cateList","length","map","category","_objectSpread2","cate_img","formatCategoryImageUrl","getCategoriesFromLocal","hideLoading","t0","showToast","icon","stop","apply","arguments","_ref2","_callee2","storage","result","_callee2$","_context2","getStorageSync","JSON","parse","getCategories","setStorageSync","stringify","getDefaultCategories","_id","cate_name","url","startsWith","includes","handleCategoryImageError","selectCategory","checkUserLogin","userInfo","uid","utils_isLogin","testLogin","onMounted","pages","getCurrentPages","page","$getAppWebview","currentWebview","setStyle","popGesture","onBeforeUnmount","hasUploadingMedia","some","item","uploadStatus","$emit","onUnmounted","chooseImage","_ref3","_callee4","_callee4$","_context5","abrupt","showActionSheet","itemList","success","_success","_callee3","_imageList$value","sourceType","chooseRes","tempFiles","startIndex","_loop","i","_callee3$","_context4","tapIndex","count","sizeType","tempFilePaths","filePath","processedPath","replace","tempPath","thumbnailURL","progress","push","_toConsumableArray2","_loop$","_context3","setTimeout","uploadImageToQiniu","then","error","delegateYield","_x","errMsg","formatImagePath","path","formattedPath","handleImageError","loadError","chooseVideo","_ref4","_callee6","_callee6$","_context7","_success2","_callee5","maxSize","_callee5$","_context6","maxDuration","camera","size","tempFilePath","poster","thumbTempFilePath","duration","width","height","format","uploadVideoToQiniu","_x2","removeFile","splice","removeVideo","_ref5","_callee7","file","fileExt","uploadConfig","uploadDomain","_callee7$","_context8","getFileExtension","generateUploadToken","ext","token","Error","Promise","resolve","reject","retryCount","maxRetries","performUpload","uploadTask","uploadFile","name","formData","key","uploadRes","statusCode","data","fileUrl","domain","fileURL","compressedURL","e","fail","showModal","showCancel","onProgressUpdate","updateTotalProgress","message","_x3","_x4","_ref6","_callee8","videoStyle","styleSeparator","_callee8$","_context9","lastUpdateTime","Date","now","uploadSpeed","uploadedSize","estimatedTimeLeft","lastToastTime","updateProgress","currentSize","timeElapsed","sizeDiff","remainingSize","remainingTime","Math","ceil","speedText","toFixed","floor","videoURL","transcodedURL","playURL","parseInt","totalBytesWritten","_x5","lastDotIndex","lastIndexOf","substring","toLowerCase","totalFiles","totalProgressValue","forEach","getArticleDetail","_ref7","_callee9","id","articleData","_callee9$","_context10","getArticleDetal","articleRes","cate_id","images","img","_x6","publish","_ref8","_callee10","_a","_b","params","_callee10$","_context11","trim","user_id","filter","article_id","updateArticle","addArticle","code","navigateBack","finish","onLoad","options","wx","createPage","_sfc_main"],"sources":["qiniuyun.vue","D:/代码测试/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/c3ViUGFnZXNccWluaXV5dW5ccWluaXV5dW4udnVl"],"sourcesContent":["<template>\n\t<view class=\"publish-container\">\n\t\t<!-- 内容区域 -->\n\t\t<view class=\"content-container\">\n\t\t\t<!-- 分类选择和位置信息 -->\n\t\t\t<view class=\"category-section\">\n\t\t\t\t<view class=\"section-header\">\n\t\t\t\t\t<text class=\"section-title\">选择分类</text>\n\t\t\t\t\t<!-- 位置信息 - 放在标题后面 -->\n\t\t\t\t\t<view class=\"location-info-inline\" v-if=\"locationInfo\">\n\t\t\t\t\t\t<uni-icons type=\"location\" size=\"14\" color=\"#007AFF\"></uni-icons>\n\t\t\t\t\t\t<text>{{ locationInfo.address }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"category-grid\">\n\t\t\t\t\t<view \n\t\t\t\t\t\tclass=\"category-item\" \n\t\t\t\t\t\tv-for=\"(item, index) in categoryList\" \n\t\t\t\t\t\t:key=\"item._id\"\n\t\t\t\t\t\t:class=\"{ active: selectedCategory === item._id }\"\n\t\t\t\t\t\t@click=\"selectCategory(index)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<image \n\t\t\t\t\t\t\t:src=\"item.cate_img\" \n\t\t\t\t\t\t\tmode=\"aspectFit\" \n\t\t\t\t\t\t\tclass=\"category-icon\"\n\t\t\t\t\t\t\t@error=\"handleCategoryImageError(index)\"\n\t\t\t\t\t\t></image>\n\t\t\t\t\t\t<text class=\"category-name\">{{ item.cate_name }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"loading-placeholder\" v-if=\"categoryList.length === 0\">\n\t\t\t\t\t<uni-icons type=\"spinner-cycle\" size=\"30\" color=\"#399bfe\"></uni-icons>\n\t\t\t\t\t<text>正在加载分类...</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\n\t\t\t<!-- 合并文本输入和媒体为一个整体模块 -->\n\t\t\t<view class=\"content-media-section\">\n\t\t\t\t<!-- 文本输入区域 -->\n\t\t\t\t<view class=\"textarea-container\">\n\t\t\t\t\t<textarea \n\t\t\t\t\t\tv-model=\"content\" \n\t\t\t\t\t\tplaceholder=\"分享新鲜事...\" \n\t\t\t\t\t\tmaxlength=\"350\"\n\t\t\t\t\t\tclass=\"content-textarea\"\n\t\t\t\t\t\tauto-height\n\t\t\t\t\t\tshow-confirm-bar=\"false\"\n\t\t\t\t\t\tcursor-spacing=\"120\"\n\t\t\t\t\t></textarea>\n\t\t\t\t\t<view class=\"word-count\">{{ content.length }}/350</view>\n\t\t\t\t</view>\n\n\t\t\t\t<!-- 媒体选择区域 -->\n\t\t\t\t<view class=\"media-area\">\n\t\t\t\t\t<view class=\"media-tabs\">\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tclass=\"tab-item\" \n\t\t\t\t\t\t\t:class=\"{'active': mediaType === 'image'}\" \n\t\t\t\t\t\t\t@tap=\"mediaType = 'image'\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<uni-icons \n\t\t\t\t\t\t\t\ttype=\"image\" \n\t\t\t\t\t\t\t\tsize=\"20\" \n\t\t\t\t\t\t\t\t:color=\"mediaType === 'image' ? '#399bfe' : '#999'\"\n\t\t\t\t\t\t\t></uni-icons>\n\t\t\t\t\t\t\t<text \n\t\t\t\t\t\t\t\tclass=\"tab-text\" \n\t\t\t\t\t\t\t\t:class=\"{'active-text': mediaType === 'image'}\"\n\t\t\t\t\t\t\t>图片</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tclass=\"tab-item\" \n\t\t\t\t\t\t\t:class=\"{'active': mediaType === 'video'}\" \n\t\t\t\t\t\t\t@tap=\"mediaType = 'video'\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<uni-icons \n\t\t\t\t\t\t\t\ttype=\"videocam\" \n\t\t\t\t\t\t\t\tsize=\"20\" \n\t\t\t\t\t\t\t\t:color=\"mediaType === 'video' ? '#399bfe' : '#999'\"\n\t\t\t\t\t\t\t></uni-icons>\n\t\t\t\t\t\t\t<text \n\t\t\t\t\t\t\t\tclass=\"tab-text\" \n\t\t\t\t\t\t\t\t:class=\"{'active-text': mediaType === 'video'}\"\n\t\t\t\t\t\t\t>视频</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 图片上传区域 - 当选择图片选项卡或已有图片时显示 -->\n\t\t\t\t\t<view class=\"media-content\" v-if=\"mediaType === 'image' || (imageList.length > 0 && mediaType === 'video')\">\n\t\t\t\t\t\t<view class=\"section-title\" v-if=\"mediaType !== 'image' && imageList.length > 0\">已上传图片</view>\n\t\t\t\t\t\t<view class=\"image-grid\">\n\t\t\t\t\t\t\t<view \n\t\t\t\t\t\t\t\tv-for=\"(item, index) in imageList\" \n\t\t\t\t\t\t\t\t:key=\"index\" \n\t\t\t\t\t\t\t\tclass=\"image-item\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<image \n\t\t\t\t\t\t\t\t\t:src=\"formatImagePath(item.tempPath || item.thumbnailURL)\" \n\t\t\t\t\t\t\t\t\tmode=\"aspectFill\" \n\t\t\t\t\t\t\t\t\t@error=\"handleImageError(index)\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<view class=\"progress-overlay\" v-if=\"item.progress < 100\">\n\t\t\t\t\t\t\t\t\t<view class=\"progress-text\">{{item.progress}}%</view>\n\t\t\t\t\t\t\t\t\t<view class=\"progress-bar\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"progress\" :style=\"{width: item.progress + '%'}\"></view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"delete-btn\" @tap=\"removeFile(index)\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"close\" size=\"16\" color=\"#fff\"></uni-icons>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<!-- 添加图片按钮 - 只在图片模式下显示 -->\n\t\t\t\t\t\t\t<view \n\t\t\t\t\t\t\t\tv-if=\"imageList.length < 9 && mediaType === 'image'\" \n\t\t\t\t\t\t\t\tclass=\"add-media-btn\"\n\t\t\t\t\t\t\t\t@tap=\"chooseImage\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<uni-icons type=\"plusempty\" size=\"30\" color=\"#999\"></uni-icons>\n\t\t\t\t\t\t\t\t<text class=\"btn-text\">添加图片</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<text class=\"tip-text\" v-if=\"mediaType === 'image'\">最多上传9张图片，支持从相册、拍照选择</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 视频上传区域 - 当选择视频选项卡或已有视频时显示 -->\n\t\t\t\t\t<view class=\"media-content\" v-if=\"mediaType === 'video' || (hasVideo && mediaType === 'image')\">\n\t\t\t\t\t\t<view class=\"section-title\" v-if=\"mediaType !== 'video' && hasVideo\">已上传视频</view>\n\t\t\t\t\t\t<view class=\"video-container\" v-if=\"hasVideo\">\n\t\t\t\t\t\t\t<view class=\"video-item\">\n\t\t\t\t\t\t\t\t<image \n\t\t\t\t\t\t\t\t\t:src=\"videoData.poster || videoData.thumbnailURL\" \n\t\t\t\t\t\t\t\t\tmode=\"aspectFill\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<view class=\"video-icon\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"videocam-filled\" size=\"30\" color=\"#fff\"></uni-icons>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"video-info\">\n\t\t\t\t\t\t\t\t\t<text class=\"video-duration\">{{Math.floor(videoData.duration || 0)}}秒</text>\n\t\t\t\t\t\t\t\t\t<text class=\"video-size\">{{((videoData.size || 0) / 1024 / 1024).toFixed(1)}}MB</text>\n\t\t\t\t\t\t\t\t\t<text class=\"video-format\">{{videoData.format || 'mp4'}}</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"progress-overlay\" v-if=\"videoData && videoData.progress < 100\">\n\t\t\t\t\t\t\t\t\t<view class=\"progress-text\">{{videoData.progress}}%</view>\n\t\t\t\t\t\t\t\t\t<view class=\"progress-bar\">\n\t\t\t\t\t\t\t\t\t\t<view class=\"progress\" :style=\"{width: videoData.progress + '%'}\"></view>\n\t\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\t<view class=\"delete-btn\" @tap=\"removeVideo\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"close\" size=\"16\" color=\"#fff\"></uni-icons>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<!-- 视频上传按钮 - 只在视频模式下且没有视频时显示 -->\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tv-if=\"!hasVideo && mediaType === 'video'\" \n\t\t\t\t\t\t\tclass=\"video-upload-btn\" \n\t\t\t\t\t\t\t@tap=\"chooseVideo\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<uni-icons type=\"videocam-filled\" size=\"40\" color=\"#999\"></uni-icons>\n\t\t\t\t\t\t\t<text class=\"upload-text\">点击上传视频</text>\n\t\t\t\t\t\t\t<text class=\"upload-subtext\">支持60秒以内、500MB以下的视频</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<text class=\"tip-text\" v-if=\"mediaType === 'video' && !hasVideo\">支持60秒以内、500MB以下的视频</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 底部安全区域占位 -->\n\t\t\t<view class=\"safe-area-placeholder\"></view>\n\t\t</view>\n\t\t\n\t\t<!-- 发布按钮 - 移到内容容器外部 -->\n\t\t<view class=\"publish-btn-container\">\n\t\t\t<button class=\"publish-btn\" @click=\"publish\">\n\t\t\t\t{{ mode === 'edit' ? '保存修改' : '发布' }}\n\t\t\t</button>\n\t\t</view>\n\t</view>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, onBeforeUnmount } from 'vue'\nimport { useUserInfoStore } from '@/store/user.js'\nimport { testLogin } from '@/utils/isLogin'\n\n// Store & API\nconst userStore = useUserInfoStore()\nconst qiniuCloud = uniCloud.importObject('qiniuyunCloud', { customUI: true })\nconst extStorageCo = uniCloud.importObject('ext-storage-co', { customUI: true })\nconst articleApi = uniCloud.importObject('articleWx', { customUI: true })\n\n// 状态管理\nconst fileList = ref([])\nconst imageList = ref([])\nconst videoData = ref(null)\nconst isUploading = ref(false)\nconst totalProgress = ref(0)\nconst uploadedFiles = ref([])\nconst mediaType = ref('image')\nconst content = ref('')\nconst locationInfo = ref(null)\nconst categoryList = ref([])\nconst cateIndex = ref(0)\nconst selectedCategory = ref(null)\nconst isPublishing = ref(false)\nconst publishedArticleId = ref(null)\nconst mode = ref('add') // 'add' 或 'edit'\nconst articleId = ref('')\n\n// 计算属性\nconst hasVideo = computed(() => videoData.value !== null)\n\n// 获取位置和分类\nconst getLocaAndCate = async () => {\n\ttry {\n\t\tuni.showLoading({ title: '加载中...' })\n\t\t\n\t\t// 获取位置信息\n\t\tconst locationRes = await uni.getLocation({\n\t\t\ttype: 'gcj02'\n\t\t}).catch(err => {\n\t\t\tconsole.error('获取位置失败:', err)\n\t\t\treturn { longitude: 0, latitude: 0 }\n\t\t})\n\n\t\t// 获取分类和位置信息\n\t\tconst res = await articleApi.addReady(`${locationRes.longitude},${locationRes.latitude}`)\n\t\tconsole.log('获取位置和分类:', res)\n\n\t\tif (res) {\n\t\t\t// 设置位置信息\n\t\t\tlocationInfo.value = {\n\t\t\t\taddress: res.address || '未知位置',\n\t\t\t\tdistrict: res.district || ''\n\t\t\t}\n\n\t\t\t// 设置分类信息\n\t\t\tif (res.cateList && res.cateList.length > 0) {\n\t\t\t\t// 处理分类图片路径，确保URL格式正确\n\t\t\t\tcategoryList.value = res.cateList.map(category => ({\n\t\t\t\t\t...category,\n\t\t\t\t\tcate_img: formatCategoryImageUrl(category.cate_img)\n\t\t\t\t}))\n\t\t\t\t\n\t\t\t\t// 移除默认选择\n\t\t\t\tselectedCategory.value = null\n\t\t\t\tcateIndex.value = -1\n\t\t\t} else {\n\t\t\t\t// 如果没有获取到分类，尝试从本地获取\n\t\t\t\tawait getCategoriesFromLocal()\n\t\t\t}\n\t\t} else {\n\t\t\t// 如果API调用失败，尝试从本地获取\n\t\t\tawait getCategoriesFromLocal()\n\t\t}\n\n\t\tuni.hideLoading()\n\t} catch (e) {\n\t\tconsole.error('获取位置和分类失败:', e)\n\t\tuni.hideLoading()\n\t\t\n\t\t// 尝试从本地获取分类\n\t\tawait getCategoriesFromLocal()\n\t\t\n\t\tuni.showToast({\n\t\t\ttitle: '获取信息失败',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n}\n\n// 从本地存储获取分类\nconst getCategoriesFromLocal = async () => {\n\ttry {\n\t\t// 尝试从本地存储获取分类数据\n\t\tconst storage = uni.getStorageSync('categoryList')\n\t\tif (storage) {\n\t\t\tcategoryList.value = JSON.parse(storage).map(category => ({\n\t\t\t\t...category,\n\t\t\t\tcate_img: formatCategoryImageUrl(category.cate_img)\n\t\t\t}))\n\t\t\tconsole.log('从本地存储获取分类成功:', categoryList.value)\n\t\t} else {\n\t\t\t// 如果本地没有，尝试直接从数据库获取\n\t\t\tconst result = await articleApi.getCategories()\n\t\t\tif (result && result.length > 0) {\n\t\t\t\tcategoryList.value = result.map(category => ({\n\t\t\t\t\t...category,\n\t\t\t\t\tcate_img: formatCategoryImageUrl(category.cate_img)\n\t\t\t\t}))\n\t\t\t\t\n\t\t\t\t// 保存到本地存储\n\t\t\t\tuni.setStorageSync('categoryList', JSON.stringify(result))\n\t\t\t\tconsole.log('从数据库获取分类成功:', categoryList.value)\n\t\t\t} else {\n\t\t\t\t// 如果都失败了，使用默认分类\n\t\t\t\tcategoryList.value = getDefaultCategories()\n\t\t\t\tconsole.log('使用默认分类:', categoryList.value)\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tconsole.error('获取本地分类失败:', error)\n\t\t// 使用默认分类\n\t\tcategoryList.value = getDefaultCategories()\n\t}\n}\n\n// 获取默认分类\nconst getDefaultCategories = () => {\n\treturn [\n\t\t{\n\t\t\t_id: 'default_1',\n\t\t\tcate_name: '默认分类1',\n\t\t\tcate_img: '/static/category/default1.png'\n\t\t},\n\t\t{\n\t\t\t_id: 'default_2',\n\t\t\tcate_name: '默认分类2',\n\t\t\tcate_img: '/static/category/default2.png'\n\t\t},\n\t\t{\n\t\t\t_id: 'default_3',\n\t\t\tcate_name: '默认分类3',\n\t\t\tcate_img: '/static/category/default3.png'\n\t\t},\n\t\t{\n\t\t\t_id: 'default_4',\n\t\t\tcate_name: '默认分类4',\n\t\t\tcate_img: '/static/category/default4.png'\n\t\t}\n\t]\n}\n\n// 格式化分类图片URL\nconst formatCategoryImageUrl = (url) => {\n\tif (!url) return '/static/category/default.png'\n\t\n\t// 如果已经是完整URL，直接返回\n\tif (url.startsWith('http')) return url\n\t\n\t// 如果是相对路径，添加域名\n\tif (url.startsWith('/')) {\n\t\t// 这里可以根据实际情况添加域名前缀\n\t\t// 例如: return 'https://your-domain.com' + url\n\t\treturn url\n\t}\n\t\n\t// 如果是七牛云路径，添加七牛云域名\n\tif (!url.includes('://')) {\n\t\t// 这里替换为您的七牛云域名\n\t\treturn `https://your-qiniu-domain.com/${url}`\n\t}\n\t\n\treturn url\n}\n\n// 处理分类图片加载错误\nconst handleCategoryImageError = (index) => {\n\tconsole.error(`分类图片加载错误，索引: ${index}`, categoryList.value[index])\n\t\n\t// 设置为默认图片\n\tif (categoryList.value[index]) {\n\t\tcategoryList.value[index].cate_img = '/static/category/default.png'\n\t}\n}\n\n// 分类选择处理\nconst selectCategory = (index) => {\n\tconsole.log('选择分类:', categoryList.value[index])\n\tcateIndex.value = index\n\tselectedCategory.value = categoryList.value[index]._id\n}\n\n// 检查用户是否登录\nconst checkUserLogin = () => {\n\tconsole.log('检查用户登录状态:', userStore.userInfo)\n\t\n\tif (!userStore.userInfo || !userStore.userInfo.uid) {\n\t\tconsole.log('用户未登录，调用登录函数')\n\t\tuni.showToast({\n\t\t\ttitle: '请先登录',\n\t\t\ticon: 'none'\n\t\t})\n\t\ttestLogin()\n\t\treturn false\n\t}\n\treturn true\n}\n\n// 页面加载时获取位置和分类信息\nonMounted(() => {\n\tconsole.log('发布页面已加载')\n\tgetLocaAndCate()\n\t\n\t// 添加返回按钮拦截\n\tconst pages = getCurrentPages()\n\tconst page = pages[pages.length - 1]\n\tif (page && page.$getAppWebview) {\n\t\tconst currentWebview = page.$getAppWebview()\n\t\tcurrentWebview.setStyle({\n\t\t\tpopGesture: 'none' // 禁用侧滑返回\n\t\t})\n\t}\n})\n\n// 页面卸载前的清理工作\nonBeforeUnmount(() => {\n\tconsole.log('发布页面即将卸载')\n\t// 如果有正在上传的文件，提示用户\n\tconst hasUploadingMedia = imageList.value.some(item => item.uploadStatus === 'uploading') || \n\t\t\t\t\t\t\t (videoData.value && videoData.value.uploadStatus === 'uploading')\n\t\n\tif (hasUploadingMedia && !isPublishing.value) {\n\t\tconsole.log('有正在上传的媒体文件，但用户选择离开页面')\n\t}\n\t\n\t// 如果已经发布成功，确保触发刷新事件\n\tif (publishedArticleId.value && !isPublishing.value) {\n\t\tconsole.log('页面卸载前再次触发刷新事件')\n\t\tuni.$emit('refreshIndexOnce', publishedArticleId.value)\n\t}\n})\n\n// 页面完全卸载时的清理\nonUnmounted(() => {\n\tconsole.log('发布页面已完全卸载')\n})\n\n// 选择图片\nconst chooseImage = async () => {\n\ttry {\n\t\t// 检查用户是否登录\n\t\tif (!checkUserLogin()) return\n\t\t\n\t\t// 检查是否达到最大图片数量\n\t\tif (imageList.value.length >= 9) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '最多只能上传9张图片',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// 显示选择图片来源的操作菜单\n\t\tuni.showActionSheet({\n\t\t\titemList: ['从相册选择', '拍照'],\n\t\t\tsuccess: async (res) => {\n\t\t\t\tlet sourceType = []\n\t\t\t\t\n\t\t\t\t// 根据用户选择设置图片来源\n\t\t\t\tswitch (res.tapIndex) {\n\t\t\t\t\tcase 0: // 从相册选择\n\t\t\t\t\t\tsourceType = ['album']\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 1: // 拍照\n\t\t\t\t\t\tsourceType = ['camera']\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 选择图片\n\t\t\t\tconst chooseRes = await uni.chooseImage({\n\t\t\t\t\tcount: 9 - imageList.value.length,\n\t\t\t\t\tsizeType: ['original', 'compressed'], // 同时使用原图和压缩图\n\t\t\t\t\tsourceType: sourceType\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tconsole.log('选择图片结果:', chooseRes)\n\t\t\t\t\n\t\t\t\t// 为每个选中的图片创建临时对象\n\t\t\t\tconst tempFiles = chooseRes.tempFilePaths.map(filePath => {\n\t\t\t\t\t// 处理文件路径，确保格式正确\n\t\t\t\t\tconst processedPath = filePath.replace(/^kwfile:\\/\\//, '');\n\t\t\t\t\t\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\ttempPath: processedPath,\n\t\t\t\t\t\tthumbnailURL: processedPath,\n\t\t\t\t\t\tprogress: 0,\n\t\t\t\t\t\tuploadStatus: null\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\t// 添加到预览列表\n\t\t\t\tconst startIndex = imageList.value.length\n\t\t\t\timageList.value.push(...tempFiles)\n\t\t\t\t\n\t\t\t\t// 立即上传图片\n\t\t\t\tfor (let i = 0; i < tempFiles.length; i++) {\n\t\t\t\t\tconst index = startIndex + i\n\t\t\t\t\t// 使用setTimeout错开上传时间，避免同时发起太多请求\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tuploadImageToQiniu(imageList.value[index], index)\n\t\t\t\t\t\t\t.then(result => {\n\t\t\t\t\t\t\t\tconsole.log(`图片${index}上传成功:`, result)\n\t\t\t\t\t\t\t\t// 更新图片信息\n\t\t\t\t\t\t\t\tif (imageList.value[index]) {\n\t\t\t\t\t\t\t\t\timageList.value[index] = {\n\t\t\t\t\t\t\t\t\t\t...imageList.value[index],\n\t\t\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\t\t\tprogress: 100,\n\t\t\t\t\t\t\t\t\t\tuploadStatus: 'success'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\t\tconsole.error(`图片${index}上传失败:`, error)\n\t\t\t\t\t\t\t\tif (imageList.value[index]) {\n\t\t\t\t\t\t\t\t\timageList.value[index].uploadStatus = 'error'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: `第${index+1}张图片上传失败`,\n\t\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}, i * 200) // 每张图片错开200ms上传\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t} catch (e) {\n\t\tif (e.errMsg !== 'chooseImage:fail cancel') {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '选择图片失败',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t}\n\t}\n}\n\n// 格式化图片路径，处理特殊前缀\nconst formatImagePath = (path) => {\n\tif (!path) return '';\n\t\n\t// 移除可能导致问题的前缀\n\tlet formattedPath = path.replace(/^kwfile:\\/\\//, '');\n\t\n\t// 如果是网络图片，直接返回\n\tif (formattedPath.startsWith('http')) {\n\t\treturn formattedPath;\n\t}\n\t\n\t// 如果是本地临时文件，确保路径格式正确\n\tif (formattedPath.startsWith('tmp/')) {\n\t\t// 在某些平台上可能需要添加特定前缀\n\t\t// #ifdef MP-WEIXIN\n\t\treturn formattedPath;\n\t\t// #endif\n\t\t\n\t\t// #ifdef APP-PLUS\n\t\treturn plus.io.convertLocalFileSystemURL(formattedPath);\n\t\t// #endif\n\t\t\n\t\t// 其他平台\n\t\treturn formattedPath;\n\t}\n\t\n\treturn formattedPath;\n}\n\n// 处理图片加载错误\nconst handleImageError = (index) => {\n\tconsole.error(`图片加载错误，索引: ${index}`, imageList.value[index]);\n\t\n\t// 设置为默认图片\n\tif (imageList.value[index]) {\n\t\t// 标记图片加载失败\n\t\timageList.value[index].loadError = true;\n\t\t\n\t\t// 可以选择设置一个默认图片\n\t\t// imageList.value[index].thumbnailURL = '/static/default-image.png';\n\t\t\n\t\t// 或者显示错误提示\n\t\tuni.showToast({\n\t\t\ttitle: '图片加载失败',\n\t\t\ticon: 'none'\n\t\t});\n\t}\n}\n\n// 选择视频\nconst chooseVideo = async () => {\n\ttry {\n\t\t// 检查用户是否登录\n\t\tif (!checkUserLogin()) return\n\t\t\n\t\t// 如果已经有视频，提示先删除\n\t\tif (hasVideo.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '只能选择一个视频',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// 显示选择视频来源的操作菜单\n\t\tuni.showActionSheet({\n\t\t\titemList: ['从相册选择', '拍摄视频'],\n\t\t\tsuccess: async (res) => {\n\t\t\t\tlet sourceType = []\n\t\t\t\t\n\t\t\t\t// 根据用户选择设置视频来源\n\t\t\t\tswitch (res.tapIndex) {\n\t\t\t\t\tcase 0: // 从相册选择\n\t\t\t\t\t\tsourceType = ['album']\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 1: // 拍摄视频\n\t\t\t\t\t\tsourceType = ['camera']\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 选择视频\n\t\t\t\tconst chooseRes = await uni.chooseVideo({\n\t\t\t\t\tsourceType: sourceType,\n\t\t\t\t\tmaxDuration: 60, // 限制视频最长60秒\n\t\t\t\t\tcamera: 'back'\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tconsole.log('选择视频结果:', chooseRes)\n\t\t\t\t\n\t\t\t\t// 检查视频大小（限制为500MB）\n\t\t\t\tconst maxSize = 500 * 1024 * 1024 // 500MB\n\t\t\t\tif (chooseRes.size > maxSize) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '视频过大，请选择小于500MB的视频',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 创建临时视频对象\n\t\t\t\tvideoData.value = {\n\t\t\t\t\ttype: 'video',\n\t\t\t\t\ttempPath: chooseRes.tempFilePath,\n\t\t\t\t\tposter: chooseRes.thumbTempFilePath,\n\t\t\t\t\tthumbnailURL: chooseRes.thumbTempFilePath,\n\t\t\t\t\tduration: chooseRes.duration,\n\t\t\t\t\tsize: chooseRes.size,\n\t\t\t\t\twidth: chooseRes.width,\n\t\t\t\t\theight: chooseRes.height,\n\t\t\t\t\tformat: 'mp4', // 默认格式\n\t\t\t\t\tprogress: 0,\n\t\t\t\t\tuploadStatus: 'uploading'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 显示轻量级提示，不阻塞界面\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '准备上传视频',\n\t\t\t\t\ticon: 'loading',\n\t\t\t\t\tduration: 2000\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t// 异步上传视频，不等待完成\n\t\t\t\t\tuploadVideoToQiniu(videoData.value)\n\t\t\t\t\t\t.then(result => {\n\t\t\t\t\t\t\tconsole.log('视频上传成功:', result)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 更新视频信息\n\t\t\t\t\t\t\tvideoData.value = {\n\t\t\t\t\t\t\t\t...videoData.value,\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\tprogress: 100,\n\t\t\t\t\t\t\t\tuploadStatus: 'success'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 显示成功提示\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '视频上传成功',\n\t\t\t\t\t\t\t\ticon: 'success',\n\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.error('视频上传失败:', error)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 只有在视频对象仍然存在时才更新状态\n\t\t\t\t\t\t\tif (videoData.value) {\n\t\t\t\t\t\t\t\tvideoData.value.uploadStatus = 'error'\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// 显示失败提示\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: '视频上传失败，可继续编辑内容',\n\t\t\t\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// 不等待上传完成，立即返回让用户继续操作\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '视频上传中，您可继续编辑',\n\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('启动视频上传失败:', error)\n\t\t\t\t\t\n\t\t\t\t\t// 只有在视频对象仍然存在时才更新状态\n\t\t\t\t\tif (videoData.value) {\n\t\t\t\t\t\tvideoData.value.uploadStatus = 'error'\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 显示失败提示\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '启动视频上传失败',\n\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t} catch (e) {\n\t\tif (e.errMsg !== 'chooseVideo:fail cancel') {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '选择视频失败',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t}\n\t}\n}\n\n// 移除图片\nconst removeFile = (index) => {\n\timageList.value.splice(index, 1)\n}\n\n// 移除视频\nconst removeVideo = () => {\n\tvideoData.value = null\n}\n\n// 上传图片到七牛云\nconst uploadImageToQiniu = async (file, index) => {\n\ttry {\n\t\t// 更新上传状态\n\t\tfile.uploadStatus = 'uploading'\n\t\t\n\t\t// 获取文件扩展名\n\t\tconst fileExt = getFileExtension(file.tempPath)\n\t\t\n\t\t// 获取七牛云上传凭证\n\t\tconst uploadConfig = await qiniuCloud.generateUploadToken({\n\t\t\ttype: 'image',\n\t\t\text: fileExt\n\t\t})\n\t\t\n\t\tconsole.log('获取七牛云上传凭证成功:', uploadConfig)\n\t\t\n\t\tif (!uploadConfig || !uploadConfig.token) {\n\t\t\tthrow new Error('获取上传凭证失败')\n\t\t}\n\t\t\n\t\t// 确保上传域名使用HTTPS协议\n\t\tlet uploadDomain = uploadConfig.uploadDomain;\n\t\tif (uploadDomain && !uploadDomain.startsWith('https://')) {\n\t\t\tuploadDomain = uploadDomain.replace('http://', 'https://');\n\t\t\tconsole.log('已将上传域名转换为HTTPS:', uploadDomain);\n\t\t}\n\t\t\n\t\t// 上传文件\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// 添加重试逻辑\n\t\t\tlet retryCount = 0;\n\t\t\tconst maxRetries = 3;\n\t\t\t\n\t\t\tconst performUpload = () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst uploadTask = uni.uploadFile({\n\t\t\t\t\t\turl: uploadDomain,\n\t\t\t\t\t\tfilePath: file.tempPath,\n\t\t\t\t\t\tname: 'file',\n\t\t\t\t\t\tformData: {\n\t\t\t\t\t\t\ttoken: uploadConfig.token,\n\t\t\t\t\t\t\tkey: uploadConfig.key\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsuccess: (uploadRes) => {\n\t\t\t\t\t\t\tconsole.log('上传响应:', uploadRes)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (uploadRes.statusCode === 200) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst data = JSON.parse(uploadRes.data)\n\t\t\t\t\t\t\t\t\tconst fileUrl = `${uploadConfig.domain}/${uploadConfig.key}`\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// 更新上传状态\n\t\t\t\t\t\t\t\t\tfile.uploadStatus = 'success'\n\t\t\t\t\t\t\t\t\tfile.fileURL = fileUrl\n\t\t\t\t\t\t\t\t\tfile.progress = 100\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// 构建缩略图URL (七牛云图片处理)\n\t\t\t\t\t\t\t\t\tconst thumbnailURL = `${fileUrl}?imageView2/1/w/200/h/200`\n\t\t\t\t\t\t\t\t\t// 构建压缩图URL\n\t\t\t\t\t\t\t\t\tconst compressedURL = `${fileUrl}?imageView2/2/w/800`\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\t\t\t\turl: fileUrl,\n\t\t\t\t\t\t\t\t\t\tthumbnailURL: thumbnailURL,\n\t\t\t\t\t\t\t\t\t\tcompressedURL: compressedURL\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconsole.error('解析上传响应失败:', e)\n\t\t\t\t\t\t\t\t\tfile.uploadStatus = 'error'\n\t\t\t\t\t\t\t\t\treject(new Error('解析上传响应失败'))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.error('上传失败状态码:', uploadRes.statusCode)\n\t\t\t\t\t\t\t\tfile.uploadStatus = 'error'\n\t\t\t\t\t\t\t\treject(new Error(`上传失败: ${uploadRes.statusCode}`))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail: (error) => {\n\t\t\t\t\t\t\tconsole.error('上传失败:', error)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 检查是否是域名错误\n\t\t\t\t\t\t\tif (error.errMsg && error.errMsg.includes('url not in domain list')) {\n\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\ttitle: '上传域名未授权',\n\t\t\t\t\t\t\t\t\tcontent: '请在微信小程序管理后台添加 ' + uploadDomain + ' 到合法域名列表',\n\t\t\t\t\t\t\t\t\tshowCancel: false\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tfile.uploadStatus = 'error'\n\t\t\t\t\t\t\t\treject(new Error(error.errMsg || '上传失败'))\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 检查是否是连接数超限错误\n\t\t\t\t\t\t\tif (error.errMsg && error.errMsg.includes('exceed max upload connection count')) {\n\t\t\t\t\t\t\t\tif (retryCount < maxRetries) {\n\t\t\t\t\t\t\t\t\tretryCount++;\n\t\t\t\t\t\t\t\t\tconsole.log(`连接数超限，第${retryCount}次重试上传图片...`);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// 延迟重试，给其他上传任务完成的时间\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\tperformUpload();\n\t\t\t\t\t\t\t\t\t}, 1000 * retryCount); // 递增延迟\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfile.uploadStatus = 'error'\n\t\t\t\t\t\t\treject(new Error(error.errMsg || '上传失败'))\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 监听上传进度\n\t\t\t\t\tuploadTask.onProgressUpdate((res) => {\n\t\t\t\t\t\tfile.progress = res.progress\n\t\t\t\t\t\tupdateTotalProgress()\n\t\t\t\t\t})\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('创建上传任务失败:', e);\n\t\t\t\t\tfile.uploadStatus = 'error';\n\t\t\t\t\treject(new Error('创建上传任务失败: ' + e.message));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// 开始上传\n\t\t\tperformUpload();\n\t\t})\n\t} catch (e) {\n\t\tconsole.error('上传图片错误:', e)\n\t\tfile.uploadStatus = 'error'\n\t\tthrow new Error(`上传失败：${e.message}`)\n\t}\n}\n\n// 上传视频到七牛云\nconst uploadVideoToQiniu = async (file) => {\n\ttry {\n\t\t// 更新上传状态\n\t\tfile.uploadStatus = 'uploading'\n\t\t\n\t\t// 获取文件扩展名\n\t\tconst fileExt = getFileExtension(file.tempPath)\n\t\t\n\t\t// 获取七牛云上传凭证\n\t\tconst uploadConfig = await qiniuCloud.generateUploadToken({\n\t\t\ttype: 'video',\n\t\t\text: fileExt\n\t\t})\n\t\t\n\t\tconsole.log('获取七牛云上传凭证成功:', uploadConfig)\n\t\t\n\t\tif (!uploadConfig || !uploadConfig.token) {\n\t\t\tthrow new Error('获取上传凭证失败')\n\t\t}\n\t\t\n\t\t// 确保上传域名使用HTTPS协议\n\t\tlet uploadDomain = uploadConfig.uploadDomain;\n\t\tif (uploadDomain && !uploadDomain.startsWith('https://')) {\n\t\t\tuploadDomain = uploadDomain.replace('http://', 'https://');\n\t\t\tconsole.log('已将上传域名转换为HTTPS:', uploadDomain);\n\t\t}\n\t\t\n\t\t// 保存视频样式配置 - 简化为只使用一种转码方式\n\t\tconst videoStyle = uploadConfig.videoStyle || 'standard';\n\t\tconst styleSeparator = uploadConfig.styleSeparator || '-';\n\t\t\n\t\t// 显示轻量级提示，不阻塞界面\n\t\tuni.showToast({\n\t\t\ttitle: '开始上传视频',\n\t\t\ticon: 'loading',\n\t\t\tduration: 2000\n\t\t});\n\t\t\n\t\t// 上传文件\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// 对于大文件，显示更详细的上传信息\n\t\t\tlet lastUpdateTime = Date.now();\n\t\t\tlet uploadSpeed = 0;\n\t\t\tlet uploadedSize = 0;\n\t\t\tlet estimatedTimeLeft = '计算中...';\n\t\t\tlet lastToastTime = 0; // 控制Toast显示频率\n\t\t\t\n\t\t\tconst updateProgress = (progress, currentSize) => {\n\t\t\t\tconst now = Date.now();\n\t\t\t\tconst timeElapsed = (now - lastUpdateTime) / 1000; // 秒\n\t\t\t\t\n\t\t\t\tif (timeElapsed > 1) { // 每秒更新一次\n\t\t\t\t\tconst sizeDiff = currentSize - uploadedSize; // 字节\n\t\t\t\t\tuploadSpeed = sizeDiff / timeElapsed; // 字节/秒\n\t\t\t\t\t\n\t\t\t\t\t// 计算剩余时间\n\t\t\t\t\tconst remainingSize = file.size - currentSize;\n\t\t\t\t\tconst remainingTime = uploadSpeed > 0 ? remainingSize / uploadSpeed : 0;\n\t\t\t\t\t\n\t\t\t\t\t// 格式化剩余时间\n\t\t\t\t\tif (remainingTime > 60) {\n\t\t\t\t\t\testimatedTimeLeft = `约${Math.ceil(remainingTime / 60)}分钟`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\testimatedTimeLeft = `约${Math.ceil(remainingTime)}秒`;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 格式化速度\n\t\t\t\t\tlet speedText = '';\n\t\t\t\t\tif (uploadSpeed > 1024 * 1024) {\n\t\t\t\t\t\tspeedText = `${(uploadSpeed / (1024 * 1024)).toFixed(2)}MB/s`;\n\t\t\t\t\t} else if (uploadSpeed > 1024) {\n\t\t\t\t\t\tspeedText = `${(uploadSpeed / 1024).toFixed(2)}KB/s`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tspeedText = `${Math.floor(uploadSpeed)}B/s`;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 控制Toast显示频率，避免频繁弹出\n\t\t\t\t\tif (now - lastToastTime > 3000) { // 每3秒最多显示一次Toast\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: `上传中: ${progress}%`,\n\t\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\t\tduration: 1500\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlastToastTime = now;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 更新参考值\n\t\t\t\t\tlastUpdateTime = now;\n\t\t\t\t\tuploadedSize = currentSize;\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t// 添加重试逻辑\n\t\t\tlet retryCount = 0;\n\t\t\tconst maxRetries = 3;\n\t\t\t\n\t\t\tconst performUpload = () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst uploadTask = uni.uploadFile({\n\t\t\t\t\t\turl: uploadDomain,\n\t\t\t\t\t\tfilePath: file.tempPath,\n\t\t\t\t\t\tname: 'file',\n\t\t\t\t\t\tformData: {\n\t\t\t\t\t\t\ttoken: uploadConfig.token,\n\t\t\t\t\t\t\tkey: uploadConfig.key\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsuccess: (uploadRes) => {\n\t\t\t\t\t\t\tconsole.log('上传响应:', uploadRes)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (uploadRes.statusCode === 200) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst data = JSON.parse(uploadRes.data)\n\t\t\t\t\t\t\t\t\tconst fileUrl = `${uploadConfig.domain}/${uploadConfig.key}`\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// 更新上传状态\n\t\t\t\t\t\t\t\t\tfile.uploadStatus = 'success'\n\t\t\t\t\t\t\t\t\tfile.videoURL = fileUrl\n\t\t\t\t\t\t\t\t\tfile.progress = 100\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// 构建缩略图URL (七牛云视频截帧)\n\t\t\t\t\t\t\t\t\tconst thumbnailURL = `${fileUrl}?vframe/jpg/offset/1`\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// 生成转码后的视频URL - 只使用一种转码方式\n\t\t\t\t\t\t\t\t\tconst transcodedURL = videoStyle ? `${fileUrl}${styleSeparator}${videoStyle}` : fileUrl;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// 显示成功提示\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: '视频上传成功',\n\t\t\t\t\t\t\t\t\t\ticon: 'success',\n\t\t\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\t\t\t\t\tvideoURL: fileUrl,\n\t\t\t\t\t\t\t\t\t\tthumbnailURL: thumbnailURL,\n\t\t\t\t\t\t\t\t\t\tplayURL: transcodedURL, // 使用单一转码方式\n\t\t\t\t\t\t\t\t\t\tduration: data.duration ? parseInt(data.duration) : file.duration,\n\t\t\t\t\t\t\t\t\t\tsize: file.size,\n\t\t\t\t\t\t\t\t\t\twidth: file.width,\n\t\t\t\t\t\t\t\t\t\theight: file.height,\n\t\t\t\t\t\t\t\t\t\tformat: file.format || 'mp4'\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconsole.error('解析上传响应失败:', e)\n\t\t\t\t\t\t\t\t\tfile.uploadStatus = 'error'\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: '解析响应失败',\n\t\t\t\t\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\treject(new Error('解析上传响应失败'))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.error('上传失败状态码:', uploadRes.statusCode)\n\t\t\t\t\t\t\t\tfile.uploadStatus = 'error'\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\ttitle: `上传失败: ${uploadRes.statusCode}`,\n\t\t\t\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treject(new Error(`上传失败: ${uploadRes.statusCode}`))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail: (error) => {\n\t\t\t\t\t\t\tconsole.error('上传失败:', error)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 检查是否是域名错误\n\t\t\t\t\t\t\tif (error.errMsg && error.errMsg.includes('url not in domain list')) {\n\t\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\t\ttitle: '上传域名未授权',\n\t\t\t\t\t\t\t\t\tcontent: '请在微信小程序管理后台添加 ' + uploadDomain + ' 到合法域名列表',\n\t\t\t\t\t\t\t\t\tshowCancel: false\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tfile.uploadStatus = 'error'\n\t\t\t\t\t\t\t\treject(new Error(error.errMsg || '上传失败'))\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// 检查是否是连接数超限错误\n\t\t\t\t\t\t\tif (error.errMsg && error.errMsg.includes('exceed max upload connection count')) {\n\t\t\t\t\t\t\t\tif (retryCount < maxRetries) {\n\t\t\t\t\t\t\t\t\tretryCount++;\n\t\t\t\t\t\t\t\t\tconsole.log(`连接数超限，第${retryCount}次重试上传视频...`);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\t\t\ttitle: `连接数超限，正在重试(${retryCount}/${maxRetries})`,\n\t\t\t\t\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// 延迟重试，给其他上传任务完成的时间\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\tperformUpload();\n\t\t\t\t\t\t\t\t\t}, 2000 * retryCount); // 递增延迟\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfile.uploadStatus = 'error'\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '上传失败，请重试',\n\t\t\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treject(new Error(error.errMsg || '上传失败'))\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t// 监听上传进度\n\t\t\t\t\tuploadTask.onProgressUpdate((res) => {\n\t\t\t\t\t\tfile.progress = res.progress\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 更新上传速度和剩余时间估计\n\t\t\t\t\t\tupdateProgress(res.progress, res.totalBytesWritten);\n\t\t\t\t\t\t\n\t\t\t\t\t\tupdateTotalProgress()\n\t\t\t\t\t})\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('创建上传任务失败:', e);\n\t\t\t\t\tfile.uploadStatus = 'error';\n\t\t\t\t\t\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '创建上传任务失败',\n\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treject(new Error('创建上传任务失败: ' + e.message));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// 开始上传\n\t\t\tperformUpload();\n\t\t})\n\t} catch (e) {\n\t\tconsole.error('上传视频错误:', e)\n\t\tfile.uploadStatus = 'error'\n\t\t\n\t\tuni.showToast({\n\t\t\ttitle: '上传失败: ' + e.message,\n\t\t\ticon: 'none',\n\t\t\tduration: 2000\n\t\t});\n\t\t\n\t\tthrow new Error(`上传失败：${e.message}`)\n\t}\n}\n\n// 获取文件扩展名\nconst getFileExtension = (filePath) => {\n\tconst lastDotIndex = filePath.lastIndexOf('.')\n\tif (lastDotIndex > 0) {\n\t\treturn filePath.substring(lastDotIndex + 1).toLowerCase()\n\t}\n\treturn ''\n}\n\n// 更新总进度\nconst updateTotalProgress = () => {\n\tlet totalFiles = imageList.value.length + (videoData.value ? 1 : 0)\n\tlet totalProgressValue = 0\n\t\n\t// 计算图片进度\n\timageList.value.forEach(file => {\n\t\ttotalProgressValue += file.progress || 0\n\t})\n\t\n\t// 计算视频进度\n\tif (videoData.value) {\n\t\ttotalProgressValue += videoData.value.progress || 0\n\t}\n\t\n\ttotalProgress.value = totalFiles > 0 ? Math.floor(totalProgressValue / totalFiles) : 0\n}\n\n// 获取文章详情\nconst getArticleDetail = async (id) => {\n\ttry {\n\t\tconst res = await articleApi.getArticleDetal(id)\n\t\tif (!res || !res.articleRes || !res.articleRes.data || !res.articleRes.data.length) {\n\t\t\tthrow new Error('获取文章详情失败')\n\t\t}\n\n\t\tconst articleData = res.articleRes.data[0]\n\t\t\n\t\t// 填充表单数据\n\t\tcontent.value = articleData.content\n\t\tselectedCategory.value = articleData.cate_id\n\t\t\n\t\t// 处理图片\n\t\tif (articleData.images && articleData.images.length) {\n\t\t\timageList.value = articleData.images.map(img => ({\n\t\t\t\tfileURL: img.url,\n\t\t\t\tthumbnailURL: img.thumbnailURL,\n\t\t\t\tcompressedURL: img.compressedURL,\n\t\t\t\tuploadStatus: 'success'\n\t\t\t}))\n\t\t}\n\t\t\n\t\t// 处理视频\n\t\tif (articleData.videoURL) {\n\t\t\tvideoData.value = {\n\t\t\t\tvideoURL: articleData.videoURL,\n\t\t\t\tuploadStatus: 'success'\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 处理位置信息\n\t\tlocationInfo.value = {\n\t\t\taddress: articleData.address,\n\t\t\tdistrict: articleData.district\n\t\t}\n\t} catch (err) {\n\t\tconsole.error('获取文章详情失败:', err)\n\t\tuni.showToast({\n\t\t\ttitle: err.message || '获取文章详情失败',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n}\n\n// 修改发布方法以支持编辑模式\nconst publish = async () => {\n\tif (isPublishing.value) return\n\t\n\ttry {\n\t\t// 表单验证\n\t\tif (!content.value.trim()) {\n\t\t\tthrow new Error('请输入内容')\n\t\t}\n\t\tif (!selectedCategory.value) {\n\t\t\tthrow new Error('请选择分类')\n\t\t}\n\t\t\n\t\tisPublishing.value = true\n\t\t\n\t\t// 构建基础数据\n\t\tconst params = {\n\t\t\tuser_id: userStore.userInfo.uid,\n\t\t\tcontent: content.value.trim(),\n\t\t\tcate_id: selectedCategory.value,\n\t\t\taddress: locationInfo.value?.address || '',\n\t\t\tdistrict: locationInfo.value?.district || ''\n\t\t}\n\t\t\n\t\t// 处理图片\n\t\tif (imageList.value.length) {\n\t\t\tparams.images = imageList.value\n\t\t\t\t.filter(item => item.uploadStatus === 'success')\n\t\t\t\t.map(item => ({\n\t\t\t\t\turl: item.fileURL,\n\t\t\t\t\tthumbnailURL: item.thumbnailURL,\n\t\t\t\t\tcompressedURL: item.compressedURL\n\t\t\t\t}))\n\t\t}\n\t\t\n\t\t// 处理视频\n\t\tif (videoData.value && videoData.value.uploadStatus === 'success') {\n\t\t\tparams.videoURL = videoData.value.videoURL\n\t\t}\n\t\t\n\t\t// 根据模式调用不同的API\n\t\tlet res\n\t\tif (mode.value === 'edit') {\n\t\t\tparams.article_id = articleId.value\n\t\t\tres = await articleApi.updateArticle(params)\n\t\t} else {\n\t\t\tres = await articleApi.addArticle(params)\n\t\t}\n\t\t\n\t\tif (res.code === 0) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: mode.value === 'edit' ? '更新成功' : '发布成功',\n\t\t\t\ticon: 'success'\n\t\t\t})\n\t\t\t\n\t\t\t// 延迟返回\n\t\t\tsetTimeout(() => {\n\t\t\t\tuni.navigateBack()\n\t\t\t}, 1500)\n\t\t} else {\n\t\t\tthrow new Error(res.message)\n\t\t}\n\t} catch (err) {\n\t\tconsole.error(mode.value === 'edit' ? '更新失败:' : '发布失败:', err)\n\t\tuni.showToast({\n\t\t\ttitle: err.message || (mode.value === 'edit' ? '更新失败' : '发布失败'),\n\t\t\ticon: 'none'\n\t\t})\n\t} finally {\n\t\tisPublishing.value = false\n\t}\n}\n\n// 在 onLoad 中处理编辑模式\nonLoad((options) => {\n\tif (options.mode === 'edit' && options.article_id) {\n\t\tmode.value = 'edit'\n\t\tarticleId.value = options.article_id\n\t\tgetArticleDetail(options.article_id)\n\t}\n})\n\n</script>\n\n<style>\n.publish-container {\n\tdisplay: flex;\n\tflex-direction: column;\n\tmin-height: 100vh;\n\tbackground-color: #f5f7fa;\n\tposition: relative;\n}\n\n/* 内容区域样式 */\n.content-container {\n\tflex: 1;\n\tpadding: 24rpx;\n\tpadding-bottom: calc(140rpx + constant(safe-area-inset-bottom)); /* iOS 11.2以下 */\n\tpadding-bottom: calc(140rpx + env(safe-area-inset-bottom)); /* iOS 11.2及以上 */\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n/* 分类选择样式 */\n.category-section {\n\tmargin-bottom: 32rpx;\n\tpadding: 24rpx;\n\tbackground-color: #fff;\n\tborder-radius: 16rpx;\n\tbox-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.05);\n}\n\n/* 分类标题和位置信息的容器 */\n.section-header {\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: 24rpx;\n\tflex-wrap: wrap;\n}\n\n.section-title {\n\tfont-size: 32rpx;\n\tcolor: #333;\n\tfont-weight: 600;\n\tpadding-left: 16rpx;\n\tposition: relative;\n\tmargin-right: 16rpx;\n}\n\n.section-title::before {\n\tcontent: '';\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\twidth: 6rpx;\n\theight: 28rpx;\n\tbackground: linear-gradient(to bottom, #2196F3, #1976D2);\n\tborder-radius: 3rpx;\n}\n\n/* 内联位置信息样式 */\n.location-info-inline {\n\tdisplay: flex;\n\talign-items: center;\n\tfont-size: 22rpx;\n\tcolor: #999;\n\tmax-width: 60%;\n\tbackground-color: #f8f8f8;\n\tpadding: 4rpx 10rpx;\n\tborder-radius: 20rpx;\n}\n\n.location-info-inline text {\n\tmargin-left: 4rpx;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\tmax-width: calc(100% - 20rpx);\n}\n\n.category-grid {\n\tdisplay: grid;\n\tgrid-template-columns: repeat(5, 1fr);\n\tgap: 16rpx;\n\tpadding: 10rpx;\n}\n\n.category-item {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding: 16rpx 8rpx;\n\tborder-radius: 12rpx;\n\tbackground-color: #fff;\n\ttransition: all 0.3s;\n\tmin-height: 150rpx;\n\tposition: relative;\n\toverflow: hidden;\n\tcursor: pointer;\n\tborder: 2rpx solid transparent;\n}\n\n.category-item:active {\n\ttransform: scale(0.98);\n}\n\n.category-item.active {\n\tbackground-color: #fff;\n\tborder: 2rpx solid #2196F3;\n\tbox-shadow: 0 2rpx 8rpx rgba(33, 150, 243, 0.1);\n}\n\n.category-icon {\n\twidth: 80rpx;\n\theight: 80rpx;\n\tmargin-bottom: 12rpx;\n\tobject-fit: contain;\n\tborder-radius: 10rpx;\n\ttransition: all 0.3s;\n}\n\n.category-item.active .category-icon {\n\ttransform: scale(1.02);\n}\n\n.category-name {\n\tfont-size: 24rpx;\n\tcolor: #333;\n\ttext-align: center;\n\twidth: 100%;\n\tline-height: 1.3;\n\tdisplay: -webkit-box;\n\t-webkit-box-orient: vertical;\n\t-webkit-line-clamp: 2;\n\toverflow: hidden;\n}\n\n.category-item.active .category-name {\n\tcolor: #2196F3;\n\tfont-weight: 500;\n}\n\n/* 合并文本、媒体和位置的整体容器 */\n.content-media-section {\n\tposition: relative;\n\tmargin-bottom: 32rpx;\n\tpadding: 24rpx;\n\tbackground-color: #fff;\n\tborder-radius: 16rpx;\n\tbox-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.05);\n}\n\n/* 文本输入区域样式 */\n.textarea-container {\n\tposition: relative;\n\tmargin-bottom: 24rpx;\n\twidth: 100%;\n}\n\n.content-textarea {\n\twidth: 100%;\n\tmin-height: 120rpx;\n\tfont-size: 30rpx;\n\tline-height: 1.6;\n\tpadding: 16rpx;\n\tpadding-bottom: 40rpx;\n\tbackground-color: #f8f8f8;\n\tborder-radius: 12rpx;\n\tbox-sizing: border-box;\n\twhite-space: pre-wrap;\n\tword-break: break-word;\n}\n\n.word-count {\n\tposition: absolute;\n\tbottom: 8rpx;\n\tright: 16rpx;\n\tfont-size: 24rpx;\n\tcolor: #999;\n\tbackground-color: rgba(255, 255, 255, 0.7);\n\tpadding: 2rpx 10rpx;\n\tborder-radius: 20rpx;\n\tz-index: 1;\n}\n\n/* 媒体区域样式 */\n.media-area {\n\tmargin-top: 16rpx;\n\tmargin-bottom: 16rpx;\n\tborder-top: 1rpx solid #f0f0f0;\n\tpadding-top: 16rpx;\n}\n\n.media-tabs {\n\tdisplay: flex;\n\tborder-bottom: 1rpx solid #eee;\n\tmargin-bottom: 0;\n\tpadding: 0;\n}\n\n.tab-item {\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 16rpx 32rpx;\n\tmargin-right: 24rpx;\n\tborder-bottom: 3rpx solid transparent;\n\tposition: relative;\n\ttransition: all 0.3s;\n}\n\n.tab-item.active {\n\tborder-bottom-color: #399bfe;\n}\n\n.tab-text {\n\tmargin-left: 8rpx;\n\tfont-size: 28rpx;\n\tcolor: #333;\n}\n\n.active-text {\n\tcolor: #399bfe;\n}\n\n.media-content {\n\tpadding: 24rpx 0;\n\ttransition: all 0.3s ease;\n}\n\n/* 底部安全区域占位 */\n.safe-area-placeholder {\n\theight: 0;\n\twidth: 100%;\n\tmargin-top: auto;\n}\n\n/* 底部发布按钮样式 */\n.publish-btn-container {\n\tpadding: 24rpx 0;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: #fff;\n\tbox-shadow: 0 -4rpx 16rpx rgba(0, 0, 0, 0.05);\n\tposition: fixed;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\tz-index: 10;\n\twidth: 100%;\n\t/* 添加安全区域适配 */\n\tpadding-bottom: constant(safe-area-inset-bottom); /* iOS 11.2以下 */\n\tpadding-bottom: env(safe-area-inset-bottom); /* iOS 11.2及以上 */\n}\n\n.publish-btn {\n\twidth: 90%;\n\theight: 88rpx;\n\tline-height: 88rpx;\n\tbackground: linear-gradient(to right, #399bfe, #3178f2);\n\tcolor: #fff;\n\tfont-size: 32rpx;\n\tfont-weight: 500;\n\tborder-radius: 44rpx;\n\tbox-shadow: 0 4rpx 16rpx rgba(33, 150, 243, 0.3);\n\ttransition: all 0.3s;\n\ttext-align: center;\n}\n\n.publish-btn:active {\n\ttransform: scale(0.98);\n\topacity: 0.9;\n\tbox-shadow: 0 2rpx 8rpx rgba(33, 150, 243, 0.2);\n}\n\n/* 保留其他必要的样式 */\n.image-grid {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 16rpx;\n}\n\n.image-item {\n\twidth: calc((100% - 32rpx) / 3);\n\theight: 200rpx;\n\tposition: relative;\n\tborder-radius: 8rpx;\n\toverflow: hidden;\n\tbox-shadow: 0 2rpx 6rpx rgba(0, 0, 0, 0.1);\n}\n\n.image-item image {\n\twidth: 100%;\n\theight: 100%;\n\tobject-fit: cover;\n}\n\n.delete-btn {\n\tposition: absolute;\n\ttop: 8rpx;\n\tright: 8rpx;\n\twidth: 40rpx;\n\theight: 40rpx;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\tborder-radius: 50%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tz-index: 2;\n}\n\n.progress-overlay {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tz-index: 1;\n}\n\n.progress-text {\n\tcolor: #fff;\n\tfont-size: 24rpx;\n\tmargin-bottom: 10rpx;\n}\n\n.progress-bar {\n\twidth: 80%;\n\theight: 6rpx;\n\tbackground-color: rgba(255, 255, 255, 0.3);\n\tborder-radius: 3rpx;\n\toverflow: hidden;\n}\n\n.progress {\n\theight: 100%;\n\tbackground-color: #fff;\n}\n\n.add-media-btn {\n\twidth: calc((100% - 32rpx) / 3);\n\theight: 200rpx;\n\tbackground-color: #f8f8f8;\n\tborder: 1rpx dashed #ddd;\n\tborder-radius: 8rpx;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n.btn-text {\n\tfont-size: 24rpx;\n\tcolor: #999;\n\tmargin-top: 10rpx;\n}\n\n.video-container {\n\twidth: 100%;\n\tmargin-bottom: 16rpx;\n}\n\n.video-item {\n\twidth: 100%;\n\theight: 400rpx;\n\tposition: relative;\n\tborder-radius: 8rpx;\n\toverflow: hidden;\n\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.1);\n}\n\n.video-item image {\n\twidth: 100%;\n\theight: 100%;\n\tobject-fit: cover;\n}\n\n.video-icon {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\twidth: 80rpx;\n\theight: 80rpx;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\tborder-radius: 50%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n.video-info {\n\tposition: absolute;\n\tbottom: 16rpx;\n\tright: 16rpx;\n\tdisplay: flex;\n\tgap: 12rpx;\n\tpadding: 8rpx 16rpx;\n\tbackground-color: rgba(0, 0, 0, 0.6);\n\tborder-radius: 8rpx;\n}\n\n.video-info text {\n\tcolor: #fff;\n\tfont-size: 24rpx;\n}\n\n.video-upload-btn {\n\twidth: 100%;\n\theight: 300rpx;\n\tbackground-color: #f8f8f8;\n\tborder: 1rpx dashed #ddd;\n\tborder-radius: 8rpx;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n}\n\n.upload-text {\n\tfont-size: 28rpx;\n\tcolor: #666;\n\tmargin-top: 16rpx;\n\tfont-weight: 500;\n}\n\n.upload-subtext {\n\tfont-size: 24rpx;\n\tcolor: #999;\n\tmargin-top: 8rpx;\n}\n\n.tip-text {\n\tdisplay: block;\n\tmargin-top: 16rpx;\n\tfont-size: 24rpx;\n\tcolor: #999;\n\ttext-align: center;\n}\n\n.loading-placeholder {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 40rpx 0;\n\tcolor: #999;\n}\n\n.loading-placeholder text {\n\tmargin-top: 16rpx;\n\tfont-size: 28rpx;\n}\n\n.category-icon-fallback {\n\twidth: 80rpx;\n\theight: 80rpx;\n\tmargin-bottom: 12rpx;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: #f5f5f5;\n\tborder-radius: 10rpx;\n\ttransition: all 0.3s;\n}\n\n.category-icon-fallback.active {\n\tbackground-color: #E3F2FD;\n\ttransform: scale(1.05);\n}\n</style>","import MiniProgramPage from 'E:/wx2/subPages/qiniuyun/qiniuyun.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}