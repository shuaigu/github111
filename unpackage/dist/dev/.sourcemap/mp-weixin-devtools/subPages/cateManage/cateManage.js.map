{"version":3,"names":["cateApi","common_vendor","nr","importObject","customUI","cateList","ref","loading","dataLoaded","cateListGet","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","res","wrap","_callee$","_context","prev","next","value","abrupt","get","sent","data","Array","isArray","filter","item","_typeof2","index","__f__","t0","showToast","title","icon","finish","stop","apply","arguments","onShow","onMounted","showPopup","isEdit","editValue","currentId","cateImage","imageUploading","uploadProgress","isVisible","isDragMode","dragIndex","touchStartY","moveY","startY","initialItemY","isSliding","dragStart","e","length","touch","touches","dragEnd","pageY","setTimeout","vibrateShort","success","fail","error","dragMove","moveDistance","Math","abs","itemHeight","windowInfo","getWindowInfo","systemInfo","getDeviceInfo","windowWidth","screenWidth","windowHeight","screenHeight","e2","rpxRatio","pxItemHeight","query","createSelectorQuery","select","boundingClientRect","relativeY","top","targetIndex","floor","dragItem","newList","_toConsumableArray2","splice","requestAnimationFrame","exec","handleAddCate","edit","_ref2","_callee2","id","_a","_b","_c","_callee2$","_context2","cate_name","cate_img","is_visible","Error","_x","del","_ref3","_callee4","_callee4$","_context4","showModal","content","confirmText","confirmColor","cancelText","_success","_callee3","result","_callee3$","_context3","confirm","showLoading","mask","hideLoading","deleted","message","_x3","_x2","chooseImage","_ref4","_callee5","tempPath","_callee5$","_context5","count","sizeType","sourceType","tempFilePaths","uploadImage","errMsg","_ref5","_callee6","filePath","fileInfo","finalFilePath","fileExt","timestamp","randomStr","cloudPath","tempUrl","_callee6$","_context6","Promise","resolve","reject","getFileInfo","err","size","compressImage","src","quality","tempFilePath","substring","lastIndexOf","toLowerCase","Date","now","random","toString","concat","uploadFile","onUploadProgress","progressEvent","round","loaded","total","fileID","getTempFileURL","fileList","tempFileURL","_x4","handleConfirm","_ref6","_callee7","upRes","_callee7$","_context7","update","updated","add","_x5","handleCanner","toggleVisibility","_ref7","_callee8","currentVisibility","newVisibility","_callee8$","_context8","_x6","_x7","toggleDragMode","saveSortOrders","duration","_ref8","_callee9","updatePromises","_callee9$","_context9","map","sortValue","updateSort","_id","all","formatImageUrl","imageUrl","startsWith","handleImageError","wx","createPage","MiniProgramPage"],"sources":["cateManage.vue","D:/代码测试/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/c3ViUGFnZXNcY2F0ZU1hbmFnZVxjYXRlTWFuYWdlLnZ1ZQ"],"sourcesContent":["<script setup>\n\timport { ref, onMounted } from 'vue'\n\timport { onShow, onHide } from '@dcloudio/uni-app'\n\t\n\t// 注意：当前环境中可能存在 SharedArrayBuffer 跨域隔离(COOP/COEP)警告\n\t// 这个警告是由浏览器引擎产生的，在小程序环境中不影响功能\n\t// 详情参见：https://developer.chrome.com/blog/enabling-shared-array-buffer/\n\t\n\tconst cateApi = uniCloud.importObject('cateWx', { customUI: true })\n\tconst qiniuCloud = uniCloud.importObject('qiniuyunCloud', { customUI: true })\n\t\n\t// 分类列表数据\n\tconst cateList = ref([])\n\tconst loading = ref(false)\n\tconst dataLoaded = ref(false)\n\t\n\t// 获取分类列表\n\tconst cateListGet = async () => {\n\t\tif (loading.value) return\n\t\t\n\t\tloading.value = true\n\t\ttry {\n\t\t\t// 使用 get 方法并传递 showAll=true 来获取所有分类(包括隐藏的)\n\t\t\tconst res = await cateApi.get(null, true)\n\t\t\t// 确保 res.data 是数组且不为空\n\t\t\tif (res && res.data && Array.isArray(res.data)) {\n\t\t\t\tcateList.value = res.data.filter(item => item && typeof item === 'object')\n\t\t\t} else {\n\t\t\t\tcateList.value = []\n\t\t\t\tconsole.warn('获取到的分类数据不是有效的数组')\n\t\t\t}\n\t\t\tdataLoaded.value = true\n\t\t} catch (error) {\n\t\t\tconsole.error('获取分类列表失败:', error)\n\t\t\tcateList.value = [] // 确保发生错误时设置为空数组\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '获取分类失败',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t} finally {\n\t\t\tloading.value = false\n\t\t}\n\t}\n\t\n\t// 页面显示时获取数据\n\tonShow(() => {\n\t\tif (!dataLoaded.value) {\n\t\t\tcateListGet()\n\t\t}\n\t})\n\t\n\t// 组件挂载时初始化\n\tonMounted(() => {\n\t\tcateListGet()\n\t})\n\t\n\t// 弹窗显示状态 - 初始值设为 false\n\tconst showPopup = ref(false)\n\t// 是否是编辑模式\n\tconst isEdit = ref(false)\n\t// 编辑时的初始值\n\tconst editValue = ref('')\n\t// 当前编辑的分类ID\n\tconst currentId = ref('')\n\t// 分类图片\n\tconst cateImage = ref('')\n\t// 图片上传状态\n\tconst imageUploading = ref(false)\n\t// 图片上传进度\n\tconst uploadProgress = ref(0)\n\t// 分类是否可见\n\tconst isVisible = ref(true)\n\t// 是否处于拖拽排序模式\n\tconst isDragMode = ref(false)\n\t// 当前拖拽的索引\n\tconst dragIndex = ref(-1)\n\t// 拖拽触摸点的初始y坐标\n\tconst touchStartY = ref(0)\n\t// 拖拽位置\n\tconst moveY = ref(0)\n\t// 记录滑动的起始位置\n\tconst startY = ref(0)\n\t// 记录元素原始位置，用于计算位移\n\tconst initialItemY = ref(0)\n\t// 判断是否正在滑动\n\tconst isSliding = ref(false)\n\t\n\t// 开始拖拽\n\tconst dragStart = (index, e) => {\n\t\tif (!cateList.value || cateList.value.length === 0) return\n\t\t\n\t\t// 获取当前触摸的y坐标\n\t\tconst touch = e.touches && e.touches[0]\n\t\tif (!touch) return\n\t\t\n\t\t// 获取当前索引的项\n\t\tconst item = cateList.value[index]\n\t\tif (!item) return\n\t\t\n\t\t// 将之前选中的项目复位\n\t\tif (dragIndex.value !== -1 && dragIndex.value !== index) {\n\t\t\tdragEnd();\n\t\t}\n\t\t\n\t\tdragIndex.value = index\n\t\t// 记录触摸起始位置\n\t\tstartY.value = touch.pageY\n\t\ttouchStartY.value = touch.pageY\n\t\tinitialItemY.value = index * 90 // 记录项的初始位置（rpx单位）\n\t\tisSliding.value = true\n\t\t\n\t\t// 添加轻微延迟，让视觉效果更好\n\t\tsetTimeout(() => {\n\t\t\t// 轻微振动，提供触感反馈\n\t\t\ttry {\n\t\t\t\tif (uni.vibrateShort) {\n\t\t\t\t\tuni.vibrateShort({\n\t\t\t\t\t\tsuccess: () => {},\n\t\t\t\t\t\tfail: () => {}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// 忽略振动失败错误\n\t\t\t}\n\t\t}, 50);\n\t}\n\t\n\t// 拖拽移动\n\tconst dragMove = (e) => {\n\t\tif (dragIndex.value === -1 || !isSliding.value || !cateList.value || cateList.value.length === 0) return\n\t\t\n\t\t// 获取当前触摸的y坐标\n\t\tconst touch = e.touches && e.touches[0]\n\t\tif (!touch) return\n\t\t\n\t\tconst pageY = touch.pageY\n\t\tmoveY.value = pageY\n\t\t\n\t\t// 计算移动距离\n\t\tconst moveDistance = pageY - startY.value\n\t\t\n\t\t// 节流，避免频繁更新导致的卡顿\n\t\tif (Math.abs(moveDistance) < 5) return; // 微小移动不处理\n\t\t\n\t\t// 计算当前位置对应的索引\n\t\tconst itemHeight = 90 // 每项高度，单位rpx\n\t\t\n\t\t// 使用新API代替过时的getSystemInfoSync\n\t\tlet windowInfo;\n\t\ttry {\n\t\t\t// 使用 uni.getWindowInfo() 代替 uni.getSystemInfoSync()\n\t\t\twindowInfo = uni.getWindowInfo()\n\t\t} catch (error) {\n\t\t\t// 如果 getWindowInfo 不可用，尝试其他API\n\t\t\ttry {\n\t\t\t\tconst systemInfo = uni.getDeviceInfo();\n\t\t\t\twindowInfo = {\n\t\t\t\t\twindowWidth: systemInfo.screenWidth,\n\t\t\t\t\twindowHeight: systemInfo.screenHeight\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error('获取窗口信息失败:', e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!windowInfo) {\n\t\t\tconsole.error('无法获取窗口信息')\n\t\t\treturn\n\t\t}\n\t\t\n\t\tconst screenWidth = windowInfo.windowWidth\n\t\tconst rpxRatio = 750 / screenWidth // rpx与px的转换比例\n\t\tconst pxItemHeight = itemHeight / rpxRatio // 转换为px\n\t\t\n\t\t// 获取拖拽区域的位置信息\n\t\tconst query = uni.createSelectorQuery()\n\t\tquery.select('.drag-list').boundingClientRect(data => {\n\t\t\tif (!data) return\n\t\t\t\n\t\t\t// 计算相对于拖拽区域顶部的位置\n\t\t\tconst relativeY = pageY - data.top\n\t\t\t\n\t\t\t// 计算目标索引\n\t\t\tconst targetIndex = Math.floor(relativeY / pxItemHeight)\n\t\t\t\n\t\t\t// 确保目标索引有效\n\t\t\tif (targetIndex < 0 || targetIndex >= cateList.value.length) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\t\n\t\t\t// 如果目标索引不同于当前拖拽索引，则交换位置\n\t\t\tif (targetIndex !== dragIndex.value) {\n\t\t\t\t// 获取当前拖拽的项\n\t\t\t\tconst dragItem = cateList.value[dragIndex.value]\n\t\t\t\tif (!dragItem) return\n\t\t\t\t\n\t\t\t\t// 创建新数组而不是直接修改\n\t\t\t\tconst newList = [...cateList.value]\n\t\t\t\tnewList.splice(dragIndex.value, 1)\n\t\t\t\tnewList.splice(targetIndex, 0, dragItem)\n\t\t\t\t\n\t\t\t\t// 使用requestAnimationFrame确保动画流畅\n\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\t// 更新数组\n\t\t\t\t\tcateList.value = newList\n\t\t\t\t\t\n\t\t\t\t\t// 更新当前拖拽的索引\n\t\t\t\t\tdragIndex.value = targetIndex\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 提供轻微触感反馈\n\t\t\t\ttry {\n\t\t\t\t\tif (uni.vibrateShort) {\n\t\t\t\t\t\tuni.vibrateShort({\n\t\t\t\t\t\t\tsuccess: () => {},\n\t\t\t\t\t\t\tfail: () => {}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// 忽略振动失败错误\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 更新起始位置，避免重复触发\n\t\t\t\tstartY.value = pageY\n\t\t\t}\n\t\t}).exec()\n\t}\n\t\n\t// 结束拖拽\n\tconst dragEnd = () => {\n\t\t// 只有在滑动状态时才执行结束操作\n\t\tif (isSliding.value && dragIndex.value >= 0) {\n\t\t\t// 拖拽结束时，短振动\n\t\t\ttry {\n\t\t\t\tif (uni.vibrateShort) {\n\t\t\t\t\tuni.vibrateShort({\n\t\t\t\t\t\tsuccess: () => {},\n\t\t\t\t\t\tfail: () => {}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// 忽略振动失败错误\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 重置状态\n\t\tdragIndex.value = -1\n\t\tisSliding.value = false\n\t}\n\n\t// 添加分类\n\tconst handleAddCate = () => {\n\t\tconsole.log(1)\n\t\t// isEdit为false代表此时添加操作\n\t\tisEdit.value = false\n\t\t// 重置图片和编辑值\n\t\tcateImage.value = ''\n\t\teditValue.value = ''\n\t\tisVisible.value = true\n\t\tshowPopup.value = true\n\t}\n\n\t// 编辑分类\n\tconst edit = async (id) => {\n\t\tif (!id) {\n\t\t\tconsole.error('编辑分类失败：无效的ID');\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '操作失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\ttry {\n\t\t\tisEdit.value = true\n\t\t\tcurrentId.value = id // 保存当前编辑的ID\n\t\t\t// 根据点击id获取对应分类名称\n\t\t\tconst res = await cateApi.get(id)\n\t\t\tif (res && res.data && res.data[0]) {\n\t\t\t\tconsole.log(res, '单个获取')\n\t\t\t\teditValue.value = res.data[0]?.cate_name || ''\n\t\t\t\tcateImage.value = res.data[0]?.cate_img || ''\n\t\t\t\tisVisible.value = res.data[0]?.is_visible !== false // 默认为true，除非明确设置为false\n\t\t\t\tshowPopup.value = true\n\t\t\t} else {\n\t\t\t\tthrow new Error('获取分类详情失败');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('获取分类信息失败:', error);\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '获取分类信息失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\t// 重置编辑状态\n\t\t\tisEdit.value = false;\n\t\t\tcurrentId.value = '';\n\t\t}\n\t}\n\n\t// 删除分类\n\tconst del = async (id) => {\n\t\tif (!id) {\n\t\t\tconsole.error('删除分类失败：无效的ID');\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '操作失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 添加确认框，防止误删\n\t\tuni.showModal({\n\t\t\ttitle: '确认删除',\n\t\t\tcontent: '是否确认删除该分类？删除后无法恢复',\n\t\t\tconfirmText: '删除',\n\t\t\tconfirmColor: '#ff0000',\n\t\t\tcancelText: '取消',\n\t\t\tsuccess: async (res) => {\n\t\t\t\tif (res.confirm) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tuni.showLoading({\n\t\t\t\t\t\t\ttitle: '删除中...',\n\t\t\t\t\t\t\tmask: true\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst result = await cateApi.del(id)\n\t\t\t\t\t\t\n\t\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (result && result.deleted === 1) {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: '删除成功',\n\t\t\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t// 重新获取列表\n\t\t\t\t\t\t\tawait cateListGet()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error('删除失败')\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tuni.hideLoading()\n\t\t\t\t\t\tconsole.error('删除失败:', error)\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '删除失败: ' + (error.message || '未知错误'),\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\t\n\t// 选择图片\n\tconst chooseImage = async () => {\n\t\ttry {\n\t\t\tconst res = await uni.chooseImage({\n\t\t\t\tcount: 1,\n\t\t\t\tsizeType: ['compressed'],\n\t\t\t\tsourceType: ['album', 'camera']\n\t\t\t})\n\t\t\t\n\t\t\tif (res.tempFilePaths && res.tempFilePaths.length > 0) {\n\t\t\t\t// 先显示本地临时图片\n\t\t\t\tconst tempPath = res.tempFilePaths[0]\n\t\t\t\t\n\t\t\t\t// 上传图片到服务器\n\t\t\t\tawait uploadImage(tempPath)\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('选择图片失败:', e)\n\t\t\tif (e.errMsg !== 'chooseImage:fail cancel') {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '选择图片失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// 上传图片到服务器\n\tconst uploadImage = async (filePath) => {\n\t\ttry {\n\t\t\timageUploading.value = true\n\t\t\tuploadProgress.value = 0\n\t\t\t\n\t\t\t// 计算文件大小，如果过大则进行压缩\n\t\t\tconst fileInfo = await new Promise((resolve, reject) => {\n\t\t\t\tuni.getFileInfo({\n\t\t\t\t\tfilePath,\n\t\t\t\t\tsuccess: res => resolve(res),\n\t\t\t\t\tfail: err => reject(err)\n\t\t\t\t})\n\t\t\t})\n\t\t\t\n\t\t\tlet finalFilePath = filePath\n\t\t\t// 如果图片大于1MB，进行压缩\n\t\t\tif (fileInfo.size > 1024 * 1024) {\n\t\t\t\tfinalFilePath = await new Promise((resolve, reject) => {\n\t\t\t\t\tuni.compressImage({\n\t\t\t\t\t\tsrc: filePath,\n\t\t\t\t\t\tquality: 80,\n\t\t\t\t\t\tsuccess: res => resolve(res.tempFilePath),\n\t\t\t\t\t\tfail: err => reject(err)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\t// 获取文件扩展名\n\t\t\tconst fileExt = finalFilePath.substring(finalFilePath.lastIndexOf('.') + 1).toLowerCase()\n\t\t\t\n\t\t\t// 添加缓存控制和唯一文件名\n\t\t\tconst timestamp = Date.now()\n\t\t\tconst randomStr = Math.random().toString(36).substring(2, 10)\n\t\t\tconst cloudPath = `cate_icons/${timestamp}_${randomStr}.${fileExt}`\n\t\t\t\n\t\t\t// 上传到uniCloud云存储\n\t\t\tconst result = await uniCloud.uploadFile({\n\t\t\t\tfilePath: finalFilePath,\n\t\t\t\tcloudPath,\n\t\t\t\tonUploadProgress: (progressEvent) => {\n\t\t\t\t\tuploadProgress.value = Math.round((progressEvent.loaded / progressEvent.total) * 100)\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\tconsole.log('上传结果:', result)\n\t\t\t\n\t\t\tif (result.fileID) {\n\t\t\t\t// 获取临时访问链接\n\t\t\t\tconst tempUrl = await uniCloud.getTempFileURL({\n\t\t\t\t\tfileList: [result.fileID]\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tconsole.log('临时链接:', tempUrl)\n\t\t\t\t\n\t\t\t\tif (tempUrl.fileList && tempUrl.fileList[0] && tempUrl.fileList[0].tempFileURL) {\n\t\t\t\t\t// 更新图片URL\n\t\t\t\t\tcateImage.value = result.fileID\n\t\t\t\t\t\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '图片上传成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('获取临时链接失败')\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('上传失败')\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('上传图片错误:', e)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '图片上传失败: ' + (e.message || '未知错误'),\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t} finally {\n\t\t\timageUploading.value = false\n\t\t}\n\t}\n\n\t// 确认添加/编辑--弹框确认事件\n\tconst handleConfirm = async (data) => {\n\t\t// 检查是否正在上传图片\n\t\tif (imageUploading.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '图片正在上传中，请稍候',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// 如果是字符串，则兼容旧版本\n\t\tif (typeof data === 'string') {\n\t\t\tdata = {\n\t\t\t\tcate_name: data,\n\t\t\t\tcate_img: cateImage.value,\n\t\t\t\tis_visible: isVisible.value\n\t\t\t}\n\t\t} else if (!data.cate_img && cateImage.value) {\n\t\t\t// 确保图片URL被包含\n\t\t\tdata.cate_img = cateImage.value\n\t\t}\n\t\t\n\t\tif (isEdit.value) {\n\t\t\t// 编辑逻辑\n\t\t\tconsole.log('编辑', data)\n\t\t\tconst upRes = await cateApi.update(currentId.value, data) // 使用保存的ID\n\t\t\tconsole.log(upRes)\n\t\t\tif (upRes.updated === 1) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '更新成功',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t\tcateListGet()\n\t\t\t}\n\t\t} else {\n\t\t\t// 添加逻辑\n\t\t\tconsole.log('添加', data)\n\t\t\tconst res = await cateApi.add(data)\n\t\t\tif (res.id) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '添加成功',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t\tcateListGet()\n\t\t\t}\n\t\t}\n\t\t// 重置当前编辑的ID和图片\n\t\tcurrentId.value = ''\n\t\tcateImage.value = ''\n\t}\n\n\t// 点击取消\n\tconst handleCanner = () => {\n\t\tshowPopup.value = false\n\t}\n\t\n\t// 快速切换可见性\n\tconst toggleVisibility = async (id, currentVisibility) => {\n\t\tif (!id) {\n\t\t\tconsole.error('切换可见性失败：无效的ID');\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '操作失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 反转逻辑：当前是可见的，切换后应该隐藏，反之亦然\n\t\tconst newVisibility = !currentVisibility;\n\t\t\n\t\ttry {\n\t\t\t// 仅更新可见性字段\n\t\t\tconst upRes = await cateApi.update(id, {\n\t\t\t\tis_visible: newVisibility\n\t\t\t});\n\t\t\t\n\t\t\tif (upRes && upRes.updated === 1) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: newVisibility ? '已启用显示' : '已隐藏分类',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t\tcateListGet()\n\t\t\t} else {\n\t\t\t\tthrow new Error('切换可见性更新失败');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('切换可见性失败:', error);\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '操作失败，请重试',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t}\n\t}\n\t\n\t// 切换拖拽排序模式\n\tconst toggleDragMode = () => {\n\t\tif (isDragMode.value) {\n\t\t\t// 如果当前是拖拽模式，询问是否保存\n\t\t\tuni.showModal({\n\t\t\t\ttitle: '保存排序',\n\t\t\t\tcontent: '是否保存当前排序结果？',\n\t\t\t\tconfirmText: '保存',\n\t\t\t\tcancelText: '不保存',\n\t\t\t\tsuccess: (res) => {\n\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t// 保存排序结果\n\t\t\t\t\t\tsaveSortOrders();\n\t\t\t\t\t}\n\t\t\t\t\t// 无论是否保存，都退出排序模式\n\t\t\t\t\tisDragMode.value = false;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// 进入排序模式\n\t\t\tisDragMode.value = true;\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '上下滑动排序分类，左右可调整位置',\n\t\t\t\ticon: 'none',\n\t\t\t\tduration: 2500\n\t\t\t});\n\t\t\t\n\t\t\t// 延迟显示更详细的操作提示\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (isDragMode.value) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '完成后点击\"保存排序\"按钮',\n\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 2600);\n\t\t}\n\t}\n\t\n\t// 保存排序结果\n\tconst saveSortOrders = async () => {\n\t\ttry {\n\t\t\tuni.showLoading({\n\t\t\t\ttitle: '保存中...',\n\t\t\t\tmask: true\n\t\t\t})\n\t\t\t\n\t\t\t// 为每个分类设置排序值\n\t\t\tconst updatePromises = cateList.value.map((item, index) => {\n\t\t\t\t// 使用倒序，让大的排序值排在前面\n\t\t\t\tconst sortValue = cateList.value.length - index;\n\t\t\t\treturn cateApi.updateSort(item._id, sortValue);\n\t\t\t});\n\t\t\t\n\t\t\tawait Promise.all(updatePromises);\n\t\t\t\n\t\t\t// 隐藏加载提示\n\t\t\tuni.hideLoading()\n\t\t\t\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '排序已保存',\n\t\t\t\ticon: 'success'\n\t\t\t});\n\t\t\t\n\t\t\t// 重新获取列表，确保数据一致性\n\t\t\tawait cateListGet()\n\t\t} catch (error) {\n\t\t\tconsole.error('保存排序失败:', error);\n\t\t\t\n\t\t\t// 隐藏加载提示\n\t\t\tuni.hideLoading()\n\t\t\t\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '保存排序失败',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t}\n\t}\n\n\t// 格式化图片URL\n\tconst formatImageUrl = (imageUrl) => {\n\t\t// 当imageUrl为空或无效值时返回默认图片\n\t\tif (!imageUrl || imageUrl === 'undefined' || imageUrl === 'null') {\n\t\t\treturn '/static/images/default.png';\n\t\t}\n\t\t\n\t\t// 如果是云存储fileID，不做处理\n\t\tif (imageUrl.startsWith('cloud://') || \n\t\t\timageUrl.startsWith('/static/') || \n\t\t\timageUrl.startsWith('http')) {\n\t\t\treturn imageUrl;\n\t\t}\n\t\t\n\t\t// 处理相对路径\n\t\tif (imageUrl.startsWith('/')) {\n\t\t\treturn imageUrl;\n\t\t}\n\t\t\n\t\treturn '/static/images/default.png';\n\t}\n\t\n\t// 图片加载错误处理函数\n\tconst handleImageError = (item, e) => {\n\t\tif (!item) return;\n\t\tconsole.warn('图片加载失败:', e);\n\t\t// 设置为本地默认图片\n\t\titem.cate_img = '/static/images/default.png';\n\t}\n</script>\n\n<template>\n\t<view class=\"cateManage page-scroll\">\n\t\t<view class=\"header-actions\">\n\t\t\t<view class=\"drag-toggle\" @click=\"toggleDragMode\">\n\t\t\t\t<text>{{ isDragMode ? '保存排序' : '滑动排序' }}</text>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 加载状态 -->\n\t\t<view class=\"loading-container\" v-if=\"loading\">\n\t\t\t<uni-icons type=\"spinner-cycle\" size=\"30\" color=\"#399bfe\"></uni-icons>\n\t\t\t<text class=\"loading-text\">加载中...</text>\n\t\t</view>\n\t\t\n\t\t<!-- 空状态提示 -->\n\t\t<view class=\"empty-container\" v-else-if=\"cateList.length === 0\">\n\t\t\t<uni-icons type=\"info\" size=\"50\" color=\"#999\"></uni-icons>\n\t\t\t<text class=\"empty-text\">暂无分类数据</text>\n\t\t</view>\n\t\t\n\t\t<view class=\"cateName\" :class=\"{'sort-mode': isDragMode}\" v-else>\n\t\t\t<!-- 普通模式 -->\n\t\t\t<view class=\"normal-list\" v-if=\"!isDragMode\">\n\t\t\t\t<view class=\"value\" v-for=\"item in cateList\" :key=\"item._id\">\n\t\t\t\t\t<view class=\"name-container\">\n\t\t\t\t\t\t<image \n\t\t\t\t\t\t\tclass=\"cate-image\" \n\t\t\t\t\t\t\t:src=\"formatImageUrl(item && item.cate_img)\" \n\t\t\t\t\t\t\tmode=\"aspectFill\" \n\t\t\t\t\t\t\t@error=\"(e) => handleImageError(item, e)\"\n\t\t\t\t\t\t\t@load=\"() => {}\"\n\t\t\t\t\t\t></image>\n\t\t\t\t\t\t<view class=\"name\" :class=\"{ 'hidden-category': !item.is_visible }\">\n\t\t\t\t\t\t\t{{item ? item.cate_name : ''}}\n\t\t\t\t\t\t\t<text class=\"hidden-label\" v-if=\"item && !item.is_visible\">(已隐藏)</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"right\">\n\t\t\t\t\t\t<switch \n\t\t\t\t\t\t\t:checked=\"item && item.is_visible === false\" \n\t\t\t\t\t\t\t@change=\"() => toggleVisibility(item._id, item && item.is_visible !== false)\" \n\t\t\t\t\t\t\tcolor=\"#399bfe\"\n\t\t\t\t\t\t\tstyle=\"margin-right: 16rpx;\"\n\t\t\t\t\t\t\tscale=\"0.8\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<uni-icons @click=\"edit(item._id)\" style=\"margin-right: 16rpx;\" color=\"#399bfe\"\n\t\t\t\t\t\t\ttype=\"compose\" size=\"22\"></uni-icons>\n\t\t\t\t\t\t<uni-icons @click=\"del(item._id)\" color=\"#e65c00\" custom-prefix=\"iconfont\"\n\t\t\t\t\t\t\ttype=\"icon-shanchu1\" size=\"20\"></uni-icons>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 拖动排序模式 -->\n\t\t\t<view class=\"drag-list\" v-else>\n\t\t\t\t<movable-area :style=\"{ width: '100%', height: cateList.length * 90 + 'rpx' }\">\n\t\t\t\t\t<movable-view \n\t\t\t\t\t\tv-for=\"(item, index) in cateList\" \n\t\t\t\t\t\t:key=\"item && item._id ? item._id : index\"\n\t\t\t\t\t\tdirection=\"vertical\"\n\t\t\t\t\t\t:x=\"0\"\n\t\t\t\t\t\t:y=\"index * 90\" \n\t\t\t\t\t\t:style=\"{ \n\t\t\t\t\t\t\twidth: '100%', \n\t\t\t\t\t\t\theight: '90rpx', \n\t\t\t\t\t\t\tzIndex: dragIndex === index ? 10 : 1,\n\t\t\t\t\t\t\ttransition: dragIndex === index ? 'none' : 'transform 0.3s cubic-bezier(0.25, 0.1, 0.25, 1), background-color 0.2s ease'\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\t:animation=\"false\"\n\t\t\t\t\t\t@touchstart=\"(e) => dragStart(index, e)\"\n\t\t\t\t\t\t@touchmove=\"dragMove\"\n\t\t\t\t\t\t@touchend=\"dragEnd\"\n\t\t\t\t\t\t@touchcancel=\"dragEnd\"\n\t\t\t\t\t\t:class=\"{ 'being-dragged': dragIndex === index }\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<view class=\"value\" :class=\"{ 'sliding': dragIndex === index }\">\n\t\t\t\t\t\t\t<view class=\"name-container\">\n\t\t\t\t\t\t\t\t<image \n\t\t\t\t\t\t\t\t\tclass=\"cate-image\" \n\t\t\t\t\t\t\t\t\t:src=\"formatImageUrl(item && item.cate_img)\" \n\t\t\t\t\t\t\t\t\tmode=\"aspectFill\" \n\t\t\t\t\t\t\t\t\t@error=\"(e) => handleImageError(item, e)\"\n\t\t\t\t\t\t\t\t\t@load=\"() => {}\"\n\t\t\t\t\t\t\t\t></image>\n\t\t\t\t\t\t\t\t<view class=\"name\" :class=\"{ 'hidden-category': item && !item.is_visible }\">\n\t\t\t\t\t\t\t\t\t{{item ? item.cate_name : ''}}\n\t\t\t\t\t\t\t\t\t<text class=\"hidden-label\" v-if=\"item && !item.is_visible\">(已隐藏)</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t<view class=\"right\">\n\t\t\t\t\t\t\t\t<view class=\"drag-handle\">\n\t\t\t\t\t\t\t\t\t<uni-icons type=\"bars\" size=\"22\" color=\"#999\"></uni-icons>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</movable-view>\n\t\t\t\t</movable-area>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 添加底部空白区域确保有滚动空间 -->\n\t\t<view class=\"bottom-space\"></view>\n\t</view>\n\t<!-- 弹框 -->\n\t<manage-popup \n\t\t:show=\"showPopup\" \n\t\t:title=\"isEdit ? '编辑分类' : '添加分类'\" \n\t\t:edit-value=\"editValue\"\n\t\t:image-url=\"cateImage\"\n\t\t:image-uploading=\"imageUploading\"\n\t\t:upload-progress=\"uploadProgress\"\n\t\t:is-visible=\"isVisible\"\n\t\t@choose-image=\"chooseImage\"\n\t\t@confirm=\"handleConfirm\" \n\t\t@update:show=\"handleCanner\" \n\t/>\n\t<!-- 悬浮按钮 -->\n\t<floatButton icon=\"plus\" :size=\"100\" :position=\"{bottom: '120rpx', right: '40rpx'}\"\n\t\t@click=\"handleAddCate\"></floatButton>\n</template>\n\n<style lang=\"scss\" scoped>\n\t/*防止分包页面公共样式无法读取*/\n\t@import \"@/style/common.scss\";\n\n\t.page-scroll {\n\t\tmin-height: 100vh;\n\t\toverflow-y: auto;\n\t\tposition: relative;\n\t\t-webkit-overflow-scrolling: touch; /* 增强iOS滚动体验 */\n\t\tpadding-bottom: 150rpx; /* 为悬浮按钮预留空间 */\n\t}\n\n\t.cateManage {\n\t\t@include pagesBaseStyle;\n\t\t\n\t\t.header-actions {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: flex-end;\n\t\t\tpadding: 20rpx 24rpx;\n\t\t\t\n\t\t\t.drag-toggle {\n\t\t\t\tbackground-color: #399bfe;\n\t\t\t\tcolor: #fff;\n\t\t\t\tfont-size: 26rpx;\n\t\t\t\tpadding: 12rpx 24rpx;\n\t\t\t\tborder-radius: 30rpx;\n\t\t\t\tbox-shadow: 0 2rpx 8rpx rgba(57, 155, 254, 0.3);\n\t\t\t\ttransition: all 0.3s;\n\t\t\t}\n\t\t}\n\t\t\n\t\t.loading-container,\n\t\t.empty-container {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tpadding: 80rpx 0;\n\t\t\tbackground-color: #fff;\n\t\t\tborder-radius: 24rpx;\n\t\t\tmargin-bottom: 40rpx;\n\t\t\t\n\t\t\t.loading-text,\n\t\t\t.empty-text {\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: #999;\n\t\t\t\tmargin-top: 20rpx;\n\t\t\t}\n\t\t}\n\n\t\t.cateName {\n\t\t\tpadding: 24rpx;\n\t\t\tborder-radius: 24rpx;\n\t\t\tbackground-color: #fff;\n\t\t\tmargin-bottom: 30rpx;\n\t\t\t\n\t\t\t&.sort-mode {\n\t\t\t\t.value {\n\t\t\t\t\ttouch-action: none;\n\t\t\t\t\t\n\t\t\t\t\t&.sliding {\n\t\t\t\t\t\tbackground-color: #f0f9ff;\n\t\t\t\t\t\ttransform: scale(1.02);\n\t\t\t\t\t\tbox-shadow: 0 2rpx 15rpx rgba(57, 155, 254, 0.15);\n\t\t\t\t\t\tborder-left: 4rpx solid #399bfe;\n\t\t\t\t\t\twill-change: transform;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.drag-list {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: auto;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\t\n\t\t\t\t\t.movable-view {\n\t\t\t\t\t\twill-change: transform;\n\t\t\t\t\t\tbackface-visibility: hidden;\n\t\t\t\t\t\tperspective: 1000;\n\t\t\t\t\t\ttransform: translateZ(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.being-dragged {\n\t\t\t\t\t.value {\n\t\t\t\t\t\tbackground-color: #f0f9ff;\n\t\t\t\t\t\tborder-left: 4rpx solid #399bfe;\n\t\t\t\t\t\tbox-shadow: 0 4rpx 20rpx rgba(57, 155, 254, 0.2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.value {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\tpadding: 16rpx;\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: $pyq-text-color-body;\n\t\t\t\tborder-bottom: 1px solid $pyq-border-color-translucent;\n\t\t\t\tbackground-color: #fff;\n\t\t\t\ttransition: all 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\n\n\t\t\t\t&:nth-last-child(1) {\n\t\t\t\t\tborder: none;\n\t\t\t\t}\n\n\t\t\t\t.name-container {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\t\n\t\t\t\t\t.cate-image {\n\t\t\t\t\t\twidth: 60rpx;\n\t\t\t\t\t\theight: 60rpx;\n\t\t\t\t\t\tborder-radius: 8rpx;\n\t\t\t\t\t\tmargin-right: 16rpx;\n\t\t\t\t\t\tbackground-color: #f5f5f5;\n\t\t\t\t\t\tobject-fit: cover;\n\t\t\t\t\t\tbox-shadow: 0 2rpx 4rpx rgba(0, 0, 0, 0.1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t.name {\n\t\t\t\t\t\tfont-size: 28rpx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t&.hidden-category {\n\t\t\t\t\t\t\tcolor: #999;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t.hidden-label {\n\t\t\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\t\t\tcolor: #999;\n\t\t\t\t\t\t\tmargin-left: 8rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.right {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\t\n\t\t\t\t\t.drag-handle {\n\t\t\t\t\t\tpadding: 10rpx;\n\t\t\t\t\t\tcursor: grab;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.bottom-space {\n\t\t\theight: 120rpx; /* 底部留空 */\n\t\t}\n\t}\n</style>","import MiniProgramPage from 'E:/wx2/subPages/cateManage/cateManage.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}